<?xml version="1.0" encoding="utf-8"?>
<Project ProductVersion="14.231.25239.0" FileVersion="233" WriteToMultipleFiles="False" Id="6f416138-3b55-4e95-a79c-5e01fee400dd" xmlns="http://www.simio.com/projects/v1">
  <DocumentInfo LicenseInfo="15:1" UserName="" Organization="Simio Test" SerialNumber="" SaveDate="2022-03-18T16:51:35" Sig="Ue8MKa8+L0WO5HNqGu+rupwunBbRkPz6QHlFif2yyeVaDeQI7Bppzc4SiEKMRyw8VP/T9CIhgFPvv70ol+1RQw==" />
  <Models>
    <Model Definition="ModelEntity" Runnable="False">
      <TargetSettings HighRiskThreshold="50" MediumRiskThreshold="80" HighRiskColor="ff0000" MediumRiskColor="ffff00" LowRiskColor="90ee90" />
      <ModelViewInfo>
        <ViewInfo>
          <Process />
        </ViewInfo>
      </ModelViewInfo>
    </Model>
    <Model Definition="Model">
      <RunSetup AnimationInterval="1" ReplicationNumber="1" Latitude="40.539912" Longitude="-80.180157">
        <StartDate>2012-01-02T00:00:00</StartDate>
        <RunLength Units="Hours">1</RunLength>
        <CompatibilitySettings ChangeNaNToZeroInExpressions="True" DontUnitConvertStateParameters="True" EnsureForeignNodesCastToNonNodeTypesAreAssociatedNodes="True" AlwaysAllowInfinityAsLinkSelectionWeightValue="True" AssumeInputNodeEntriesAreToAssociatedObjectIfNoDrawnOutboundLinks="False" IgnoreShortCircuitEvaluationInExpressions="True" IgnorePrimaryForeignKeyRelationshipsWhenEvaluatingTablePropertyRandomRowFunction="True" ThrowErrorIfIndexOutOfRangeWhenEvaluatingAnItemAtIndexFunction="False" DefaultListStateResultsClassificationDataItemString="$(StateValueLabel)Time" PreventMonitorTriggeringDuringStateInitialization="False" HarvestAvailableRowsViaUnionAcrossAllRowsReferencedFromOriginalTable="True" AlwaysAssociateDynamicSelectionRuleEvaluationsWithTheObjectsMakingTheSelections="False" SetCurrentJobStepWhenSettingRowOnSequenceDestinationTable="True" UseConsistentTableReferenceSearches="False" IgnoreTableReferencesWhenResolvingScheduleExceptions="True" IncludeContextObjectInTableReferenceSearches="False" AlwaysAllocateResourcesToFirstEligibleSeizeRequests="False" IgnoreTableReferencesWhenResolvingTableStatesIndexedByRow="True" AutomaticallyClearEntityDestinationNodeFirstBeforeExecutingRouteStep="True" NodeAssociatedStationHasSpaceForFunctionConsidersAllPossibleRedirectStations="False" AllowRouteRequestQueueBypassing="True" RunOnEvaluatingRouteRequestAsRegularProcess="True" RunResourceOnCapacityAllocatedProcessAfterSeizeStepOnSeizedProcess="False" RunResourceOnCapacityReleasedProcessAfterReleaseStepOnReleasedProcess="False" OnResourceCapacityIncreaseScheduleLateCurrentEventToTryAllocateCapacity="False" TokenIsSuspendedFunctionConsidersOnlySuspensionsAppliedExplicitlyToTheToken="True" RoutingGroupAsContextOnEvaluatingToken="False" ScheduleLateCurrentEventToTryBatchingWhenBatchQueueItemInserted="False" ExcludeUnrelatedRowsInTimerArrivalTables="False" ReportMaterialConsumptionCostAsUsageCostCharged="False" AllowMaterialAllocationQueueBypassing="True" ScheduleLateCurrentEventToTryAllocatingWhenMaterialProduced="False" EvaluateExpressionFunctionsInExpressionsUsingUnitTypesOfExpression="True" AlwaysDoFullChecksOfBatchLogicParentQueues="False" AlwaysUseSeizeSelectionGoalWhenCheckingResourceAllocationQueue="False" AutomaticallyAdjustTimerTargetTriggeringEventCountIfZeroToOne="True" AutoDestroyZeroVolumeEntitiesInContainersWithZeroRateInflow="False" AllowIndexingPastRelatedRowsForTableStateIndexing="True" SearchAssociatedObjectsOfCandidateObjectsForTableReferences="False" OnSeizedProcessCompatibilityMode="True" OnReleasedProcessCompatibilityMode="True" SearchCopiesTableReferencesWhenSearchedTableIsImplicitlyReferenced="False" AutoCancelMoveRequestIfResourceReleased="False" SearchStepUsesExplicitCopyOverTableRowReferences="False" AlwaysCheckSpecificRunSpaceContextWhenResolvingTableRowReferences="False" ExcludeEntitiesTransferringOutOfChildStationsFromResourceUtilization="False" MinimalAutomaticRouteRequestQueueChecking="False" AllChangeoverLogicExpressionEvaluationsAllowResourceReferences="False" SearchRelatedRowsOnlyOptionAlwaysLooksForBestForeignKeyRelationship="False" AllowTokenBasedTableRowReferencesInQueueRankingExpressions="False" ScheduleConstraintLogicRelatedQueueChecksAsLatestCurrentEvents="False" RecordStateVariableValueWheneverStateStatisticFunctionCalled="True" IncludeStaticAgentObjectInTableReferenceSearches="False" AllowCrossNodeComparisonsWhenUsingRoutingGroupDynamicSelectionRules="False" AlwaysUsePropertyParentTableReferences="False" />
      </RunSetup>
      <TargetSettings HighRiskThreshold="50" MediumRiskThreshold="80" HighRiskColor="ff0000" MediumRiskColor="ffff00" LowRiskColor="90ee90" />
      <RunnableInstance>
        <Properties>
          <Property Name="InitialCost" Units="Default Currency">0.0</Property>
          <Property Name="InitialCostRate" Units="Default Currency per Hour">0.0</Property>
          <Property Name="ResourceIdleCostRate" Units="Default Currency per Hour">0.0</Property>
          <Property Name="ResourceCostPerUse" Units="Default Currency">0.0</Property>
          <Property Name="ResourceUsageCostRate" Units="Default Currency per Hour">0.0</Property>
          <Property Name="DynamicSelectionRule">
            <Value>None</Value>
          </Property>
        </Properties>
      </RunnableInstance>
      <InteractiveStatistics ResultSetId="1d7858b8-af3d-4c49-b30e-1f875b5bb497" ResultSetTimeStampUtc="2021-03-07T13:17:27.2673304Z">
        <FileRef Name="Results\Model\Interactive_Results.stats" />
      </InteractiveStatistics>
      <Experiments>
        <Experiment Name="Experiment1" ConfidenceLevel="Point95" LowerPercentile="25" UpperPercentile="75" DefaultReplications="10">
          <Warmup Units="Hours">0</Warmup>
          <Scenarios>
            <Scenario Name="Scenario1">
              <Properties>
                <Property Name="InitialCost" Units="Default Currency">0.0</Property>
                <Property Name="InitialCostRate" Units="Default Currency per Hour">0.0</Property>
                <Property Name="ResourceIdleCostRate" Units="Default Currency per Hour">0.0</Property>
                <Property Name="ResourceCostPerUse" Units="Default Currency">0.0</Property>
                <Property Name="ResourceUsageCostRate" Units="Default Currency per Hour">0.0</Property>
                <Property Name="DynamicSelectionRule">
                  <Value>None</Value>
                </Property>
              </Properties>
            </Scenario>
          </Scenarios>
          <Responses>
            <Response Name="Response1" Expression="Server1.Processing.NumberEntered" Primary="True" />
          </Responses>
          <ExperimentViewInfo>
            <ViewInfo>
              <ExperimentResponseView>
                <ViewSettings ShowConfidenceIntervals="True" />
              </ExperimentResponseView>
              <ExperimentDesign>
                <ScenarioTable FilterEnabled="True">
                  <Columns>
                    <Column Name="Active" Width="23" VisibleIndex="0" />
                    <Column Name="InstanceName" Width="56" VisibleIndex="1" />
                    <Column Name="StatusWrapper" Width="51" VisibleIndex="2" />
                    <Column Name="ScenarioEndedTimeStamp" Width="134" VisibleIndex="-1" />
                    <Column Name="ReplicationsRequired" Width="63" VisibleIndex="3" />
                    <Column Name="ReplicationsCompleted" Width="71" VisibleIndex="4" />
                    <Column Name="Response1_ExperimentResponse" Width="73" VisibleIndex="5" />
                  </Columns>
                </ScenarioTable>
              </ExperimentDesign>
              <ExperimentPivotGrid>
                <DevExpressIncantation Layout="&lt;XtraSerializer version=&quot;1.0&quot; application=&quot;PivotGrid&quot;&gt;&#xD;&#xA;  &lt;property name=&quot;#LayoutVersion&quot; /&gt;&#xD;&#xA;  &lt;property name=&quot;#LayoutScaleFactor&quot;&gt;@1,Width=1@1,Height=1&lt;/property&gt;&#xD;&#xA;  &lt;property name=&quot;FixedColumnFieldValues&quot; iskey=&quot;true&quot; value=&quot;0&quot; /&gt;&#xD;&#xA;  &lt;property name=&quot;Fields&quot; iskey=&quot;true&quot; value=&quot;13&quot;&gt;&#xD;&#xA;    &lt;property name=&quot;Item1&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldScenarioName&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;ColumnArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;RowArea, ColumnArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;ScenarioName&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;TotalsVisibility&quot;&gt;None&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;0&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;0&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;100&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item2&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldObjectType&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;RowArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;RowArea, ColumnArea, FilterArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;ObjectType&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;TotalsVisibility&quot;&gt;None&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;0&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;110&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item3&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldObjectName&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;RowArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;RowArea, ColumnArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;ObjectName&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;TotalsVisibility&quot;&gt;None&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;2&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;120&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item4&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldDataSource&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;RowArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;RowArea, ColumnArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;DataSource&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;TotalsVisibility&quot;&gt;None&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;3&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;2&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;120&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item5&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldStatisticCategory&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;RowArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;RowArea, ColumnArea, FilterArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;StatisticCategory&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;TotalsVisibility&quot;&gt;None&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;4&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;3&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;100&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item6&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldDataItem&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;RowArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;RowArea, ColumnArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;DataItem&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;TotalsVisibility&quot;&gt;None&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;5&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;4&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;115&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item7&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldTimePeriod&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;RowArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;RowArea, ColumnArea, FilterArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;TimePeriodForDisplay&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;TotalsVisibility&quot;&gt;None&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;6&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;5&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;100&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Visible&quot;&gt;false&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item8&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldStatisticType&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;RowArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;RowArea, ColumnArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;StatisticTypeForDisplay&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;TotalsVisibility&quot;&gt;None&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FilterValues&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;ValuesCore&quot; iskey=&quot;true&quot; value=&quot;1&quot;&gt;&#xD;&#xA;          &lt;property name=&quot;Item1&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;            &lt;property name=&quot;Value&quot; type=&quot;System.String&quot;&gt;Minimum&lt;/property&gt;&#xD;&#xA;          &lt;/property&gt;&#xD;&#xA;        &lt;/property&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;7&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;5&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;85&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item9&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;Options&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;ShowGrandTotal&quot;&gt;false&lt;/property&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldValueAverage&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;DataArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;DataArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;AverageForDisplay&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;CellFormat&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;FormatString&quot;&gt;N4&lt;/property&gt;&#xD;&#xA;        &lt;property name=&quot;FormatType&quot;&gt;Numeric&lt;/property&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;8&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;0&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;100&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item10&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;Options&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;ShowGrandTotal&quot;&gt;false&lt;/property&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldValueMinimum&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;DataArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;DataArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;MinimumForDisplay&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;CellFormat&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;FormatString&quot;&gt;N4&lt;/property&gt;&#xD;&#xA;        &lt;property name=&quot;FormatType&quot;&gt;Numeric&lt;/property&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;9&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;49&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item11&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;Options&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;ShowGrandTotal&quot;&gt;false&lt;/property&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldValueMaximum&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;DataArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;DataArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;MaximumForDisplay&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;CellFormat&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;FormatString&quot;&gt;N4&lt;/property&gt;&#xD;&#xA;        &lt;property name=&quot;FormatType&quot;&gt;Numeric&lt;/property&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;10&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;2&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;53&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item12&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;Options&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;ShowGrandTotal&quot;&gt;false&lt;/property&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldValueHalfWidth&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;DataArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;DataArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;HalfWidthForDisplay&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;CellFormat&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;FormatString&quot;&gt;N4&lt;/property&gt;&#xD;&#xA;        &lt;property name=&quot;FormatType&quot;&gt;Numeric&lt;/property&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;11&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;3&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;63&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Item13&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;      &lt;property name=&quot;Options&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;ShowGrandTotal&quot;&gt;false&lt;/property&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ImageIndex&quot;&gt;-1&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;ToolTips&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;HeaderText&quot; /&gt;&#xD;&#xA;        &lt;property name=&quot;ValueText&quot; /&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldEditName&quot; /&gt;&#xD;&#xA;      &lt;property name=&quot;Name&quot;&gt;fieldValueStandardDeviation&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Area&quot;&gt;DataArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AllowedAreas&quot;&gt;DataArea&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;FieldName&quot;&gt;StandardDeviationForDisplay&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;CellFormat&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;        &lt;property name=&quot;FormatString&quot;&gt;N4&lt;/property&gt;&#xD;&#xA;        &lt;property name=&quot;FormatType&quot;&gt;Numeric&lt;/property&gt;&#xD;&#xA;      &lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Index&quot;&gt;12&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;AreaIndex&quot;&gt;4&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;MinWidth&quot;&gt;20&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Width&quot;&gt;55&lt;/property&gt;&#xD;&#xA;      &lt;property name=&quot;Visible&quot;&gt;false&lt;/property&gt;&#xD;&#xA;    &lt;/property&gt;&#xD;&#xA;  &lt;/property&gt;&#xD;&#xA;  &lt;property name=&quot;Prefilter&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;    &lt;property name=&quot;Criteria&quot; isnull=&quot;true&quot; /&gt;&#xD;&#xA;    &lt;property name=&quot;ShowOperandTypeIcon&quot;&gt;false&lt;/property&gt;&#xD;&#xA;    &lt;property name=&quot;Enabled&quot;&gt;true&lt;/property&gt;&#xD;&#xA;  &lt;/property&gt;&#xD;&#xA;  &lt;property name=&quot;OptionsBehavior&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;    &lt;property name=&quot;ApplyBestFitOnFieldDragging&quot;&gt;true&lt;/property&gt;&#xD;&#xA;  &lt;/property&gt;&#xD;&#xA;  &lt;property name=&quot;OptionsFilterPopup&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;    &lt;property name=&quot;ToolbarButtons&quot;&gt;ShowOnlyAvailableItems, ShowNewValues, RadioMode, InvertFilter&lt;/property&gt;&#xD;&#xA;  &lt;/property&gt;&#xD;&#xA;  &lt;property name=&quot;OptionsCustomization&quot; isnull=&quot;true&quot; iskey=&quot;true&quot;&gt;&#xD;&#xA;    &lt;property name=&quot;AllowExpand&quot;&gt;false&lt;/property&gt;&#xD;&#xA;  &lt;/property&gt;&#xD;&#xA;  &lt;property name=&quot;FixedLineWidth&quot;&gt;2&lt;/property&gt;&#xD;&#xA;  &lt;property name=&quot;Groups&quot; iskey=&quot;true&quot; value=&quot;0&quot; /&gt;&#xD;&#xA;&lt;/XtraSerializer&gt;" />
              </ExperimentPivotGrid>
            </ViewInfo>
          </ExperimentViewInfo>
        </Experiment>
      </Experiments>
      <ModelViewInfo>
        <ViewInfo ActiveModel="True" ActiveView="Facility">
          <Facility FollowDistanceRatio="1">
            <Camera Orientation="Top" Location="1.81898940354586E-12 12.5000000000018 5.45696821063757E-12" Direction="0 -1 -2.22044604925031E-16" Zoom="12.5" />
            <ObjectDisplay SnapToGrid="True" Background="ffffff" />
            <Libraries Width="122">
              <Library Name="Standard Library" Size="592" Expanded="True" />
              <Library Name="Flow Library" Size="28" />
              <Library Name="Extras Library" Size="28" />
            </Libraries>
          </Facility>
          <Process DefaultCategoryExpanded="True">
            <Categories>
              <Category Name="Input@Sink1 AddOn Processes" Expanded="True" />
            </Categories>
          </Process>
          <OperationalPlanningResourceGantt>
            <FileRef Name="Data\ViewState\Model_OperationalPlanningResourceGantt.xml" />
          </OperationalPlanningResourceGantt>
          <OperationalPlanningOwnerGantt>
            <FileRef Name="Data\ViewState\Model_OperationalPlanningOwnerGantt.xml" />
          </OperationalPlanningOwnerGantt>
          <OperationalPlanningResourceGantt>
            <FileRef Name="Data\ViewState\Model_OperationalPlanningResourceGantt1.xml" />
          </OperationalPlanningResourceGantt>
          <OperationalPlanningOwnerGantt>
            <FileRef Name="Data\ViewState\Model_OperationalPlanningOwnerGantt1.xml" />
          </OperationalPlanningOwnerGantt>
        </ViewInfo>
      </ModelViewInfo>
    </Model>
  </Models>
  <Libraries>
    <LibraryRef Name="Extras Library" Id="97fb5c31-0a87-4ae8-847a-eb28d64aefd8" PathHint="C:\Program Files\Simio LLC\Simio\Examples\ExtrasLibrary.spfx" />
  </Libraries>
  <CommonItems>
    <Definitions>
      <EntityDefinition Name="ModelEntity" Id="b89d325b-b3c0-49ba-b9ca-7ce6bfe2633e" Revision="2" FileVersion="233" Author="Simio Employee" Description="The default entity definition for your project.">
        <Compatibility ParseElementFunctionsInExpressionsLast="False" ParseNonEntityAssociatedObjectForPropertyReference="False" AllowInteractiveEntryOfNonStandardElementNames="False" ParsePropertiesForObjectTypeForAutoCreatedObjectsFirst="False" />
        <PropertyDefinitions>
          <Categories>
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <Overrides>
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="IncludeInPlanResourceConstraints" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="InitialWorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="CurrentSizeIndex" DefaultValue="ModelEntity.Picture" />
          </Overrides>
        </PropertyDefinitions>
        <States>
          <DiscreteState Name="Picture" Description="A utility state to hold a picture index. This state can then be referenced in an expression for Current Symbol Index." />
          <StringState Name="WhichServer" />
        </States>
        <Events />
        <Processes />
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </EntityDefinition>
      <FixedDefinition Name="Model" Id="4e9c466e-ce33-49fb-b0ce-67453c79c9fa" Revision="107" FileVersion="233" Author="Simio Employee" Description="I want to be able to write entity specific output information to an output data table at the end of the simulation run. *Enterprise edition only *">
        <Keywords>Add-On Process, Assign Step, AddRow Step, Data Table, Output Table, Real State Variable, Run.TimeNow, State Assignments, String State Variable, Maximum Arrivals</Keywords>
        <Categories>Data Tables</Categories>
        <Compatibility ParseElementFunctionsInExpressionsLast="False" ParseNonEntityAssociatedObjectForPropertyReference="False" AllowInteractiveEntryOfNonStandardElementNames="False" ParsePropertiesForObjectTypeForAutoCreatedObjectsFirst="False" />
        <PropertyDefinitions>
          <Categories>
            <Category Name="Basic Logic" Description="Basic Logic" />
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Population" Description="Population" InitiallyExpanded="False" />
            <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Token Actions" Description="Token Action Options" InitiallyExpanded="False" />
          </Categories>
          <Overrides>
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="IncludeInPlanResourceConstraints" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="InitialWorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
          </Overrides>
        </PropertyDefinitions>
        <States>
          <IntegerState Name="RecordCounter" Description="Counter or records, so we know when to delete the entire table at the beginning of a run" />
        </States>
        <Events />
        <GridDataExporters>
          <GridDataExporter Name="CSV Data Exporter1" DefinitionName="CSV Data Exporter" DefinitionID="72d4fb74-a1d2-4041-a690-8de096f1bbc7">
            <AddInPropertyValues>
              <AddInPropertyValue Name="ExportCulture" Value="" Type="String" />
              <AddInPropertyValue Name="ExportFolder" Value="E:\Temp\" Type="String" />
              <AddInPropertyValue Name="Separator" Value="," Type="String" />
              <AddInPropertyValue Name="WriteHeaders" Value="True" Type="Boolean" />
            </AddInPropertyValues>
          </GridDataExporter>
          <GridDataExporter Name="Database Data Exporter1" DefinitionName="Database Data Exporter" DefinitionID="dff45436-012b-4b3f-9b3a-1340272352ff">
            <AddInPropertyValues>
              <AddInPropertyValue Name="ConnectionString" Value="Data Source=legion2017\SqlExpress;Initial Catalog=Test2;Integrated Security=True;MultipleActiveResultSets=True" Type="String" />
              <AddInPropertyValue Name="ConnectionTimeOut" Value="5" Type="String" />
              <AddInPropertyValue Name="DateTimeFormat" Value="yyyy-MM-dd HH:mm:ss" Type="String" />
              <AddInPropertyValue Name="ProviderName" Value="SqlClient Data Provider" Type="String" />
              <AddInPropertyValue Name="ProviderSettings" Value="OracleDateTimeFormat=yyyy-MM-dd HH24:mi:ss" Type="String" />
            </AddInPropertyValues>
          </GridDataExporter>
        </GridDataExporters>
        <UsedObjects>
          <UsedObject Name="TransferNode" />
          <UsedObject Name="Server" />
          <UsedObject Name="ModelEntity" />
        </UsedObjects>
        <Elements>
          <Element Type="855e797b-d083-4717-a328-8d7912185eb7" ReadableType="DbConnect" Name="DbConnect1" Scope="Public">
            <Properties>
              <Property Name="ConnectionString">Data Source=legion2017\SqlExpress;Initial Catalog=Test2;Integrated Security=True;MultipleActiveResultSets=True</Property>
              <Property Name="ProviderName">SqlClient Data Provider</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="4">
            <Properties />
            <Steps>
              <Step Type="1aa53c23-417c-41e0-8303-a2c1122d49fa" ReadableType="DbExecute" Name="DbExecute1" ID="2">
                <Properties>
                  <Property Name="DbConnect">
                    <Value>DbConnect1</Value>
                  </Property>
                  <Property Name="SQLStatement">DELETE FROM TestExperiment WHERE 1=1</Property>
                  <Property Name="Items">
                    <Rows>
                      <Properties>
                        <Property Name="Expression">False</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="Decide2" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">Run.ReplicationNumber == 1 &amp;&amp; RecordCounter == 1</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="2" />
              </Step>
              <Step Type="Assign" Name="Assign1" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>RecordCounter</Value>
                  </Property>
                  <Property Name="NewValue">RecordCounter+1</Property>
                </Properties>
                <Breakpoint Enabled="True" />
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
            </Steps>
          </Process>
          <Process Name="Input_Sink1_Entered" BeginStepID="5" Category="Input@Sink1 AddOn Processes">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="AddRow" Name="AddRow1" ID="2">
                <Properties>
                  <Property Name="TableName">OutputTable1</Property>
                  <Property Name="KeyColumnValue">String.FromReal(Run.ReplicationNumber) + ":" +  ModelEntity.Name</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="Assign1" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OutputTable1.TimeEntered</Value>
                  </Property>
                  <Property Name="NewValue">ModelEntity.TimeCreated</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OutputTable1.EntityName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ModelEntity.Name</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OutputTable1.TimeLeaving</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Run.TimeNow</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OutputTable1.ServerName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ModelEntity.WhichServer</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OutputTable1.KeyValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">String.FromReal(Run.ReplicationNumber) + ":" +  ModelEntity.Name</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
              <Step Type="5b218bd5-7fa5-4b53-8969-c79c6642763f" ReadableType="DbWrite" Name="DbWrite1" Color="c6d9f0" ID="4">
                <Properties>
                  <Property Name="DbConnect">
                    <Value>DbConnect1</Value>
                  </Property>
                  <Property Name="TableName">TestExperiment</Property>
                  <Property Name="Columns">
                    <Rows>
                      <Properties>
                        <Property Name="Column">KeyValue</Property>
                        <Property Name="Expression">String.FromReal(Run.ReplicationNumber) + ":" + ModelEntity.Name</Property>
                      </Properties>
                      <Properties>
                        <Property Name="Column">EntityName</Property>
                        <Property Name="Expression">ModelEntity.Name</Property>
                      </Properties>
                      <Properties>
                        <Property Name="Column">ServerName</Property>
                        <Property Name="Expression">ModelEntity.WhichServer</Property>
                      </Properties>
                      <Properties>
                        <Property Name="Column">TimeLeaving</Property>
                        <Property Name="Expression">Run.TimeNow</Property>
                      </Properties>
                      <Properties>
                        <Property Name="Column">TimeEntered</Property>
                        <Property Name="Expression">ModelEntity.TimeCreated</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="ChooseTechnique" ID="5">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">True</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="2" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Objects>
          <Fixed Name="Source1" Type="Source" Location="-7.61621332168579 0 -3.23202729225158" YawDeg="90" Size="1.49711918830872 1.02344524860382 0.999999761581421" Scope="Public">
            <AssociatedNodes>
              <Node Name="Output@Source1" Type="TransferNode" Location="-6.11621332168579 0 -3.23202729225158" YawDeg="90" Scope="Public" RotationChangesLocation="False">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DynamicSelectionRule">
                    <Value>None</Value>
                  </Property>
                  <Property Name="FlowSplitAllocationRule">Proportional Based On Link Weights</Property>
                  <Property Name="DestinationNodeName"></Property>
                  <Property Name="DestinationSelectionExpression">Candidate.Node.InputLocation.Overload</Property>
                  <Property Name="RouteRequestDynamicSelectionRule">
                    <Value>None</Value>
                  </Property>
                  <Property Name="RideOnTransporterCondition">False</Property>
                  <Property Name="TransporterSelectionValueExpression">Candidate.Transporter.RideCapacityRemaining</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DynamicSelectionRule">
                <Value>None</Value>
              </Property>
              <Property Name="EntityType">DefaultEntity</Property>
              <Property Name="ArrivalNoShowProbability">0</Property>
              <Property Name="MaximumArrivals">20</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="Sink1" Type="Sink" Location="4.06041944026947 0 -3.06336380489787" YawDeg="90" Size="1.50498116016388 1.02881991863251 1.00000035762787" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@Sink1" Type="BasicNode" Location="2.56041944026947 0 -3.06336380489787" YawDeg="90" Scope="Public" RotationChangesLocation="False">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DynamicSelectionRule">
                    <Value>None</Value>
                  </Property>
                  <Property Name="FlowSplitAllocationRule">Proportional Based On Link Weights</Property>
                  <Property Name="EnteredAddOnProcess">
                    <Value>Input_Sink1_Entered</Value>
                  </Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DynamicSelectionRule">
                <Value>None</Value>
              </Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="Server1" Type="Server" Location="-1.81777322292328 0 -4.97083224292815" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@Server1" Type="BasicNode" Location="-3.31777322292328 0 -4.97083224292815" YawDeg="90" Scope="Public" RotationChangesLocation="False">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DynamicSelectionRule">
                    <Value>None</Value>
                  </Property>
                  <Property Name="FlowSplitAllocationRule">Proportional Based On Link Weights</Property>
                  <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="Output@Server1" Type="TransferNode" Location="-0.317773222923279 0 -4.97083224292815" YawDeg="90" Scope="Public" RotationChangesLocation="False">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DynamicSelectionRule">
                    <Value>None</Value>
                  </Property>
                  <Property Name="FlowSplitAllocationRule">Proportional Based On Link Weights</Property>
                  <Property Name="DestinationNodeName"></Property>
                  <Property Name="DestinationSelectionExpression">Candidate.Node.InputLocation.Overload</Property>
                  <Property Name="RouteRequestDynamicSelectionRule">
                    <Value>None</Value>
                  </Property>
                  <Property Name="RideOnTransporterCondition">False</Property>
                  <Property Name="TransporterSelectionValueExpression">Candidate.Transporter.RideCapacityRemaining</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <IndexedSizes>
              <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
              <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
              <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
              <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
              <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DynamicSelectionRule">
                <Value>None</Value>
              </Property>
              <Property Name="ExpectedOperationTimeExpression">0.0</Property>
              <Property Name="ImmediatelyTrySeize">True</Property>
              <Property Name="AssignmentsOnEntering">
                <Rows>
                  <Properties>
                    <Property Name="AssignmentsOnEnteringStateVariableName">
                      <Value>ModelEntity.WhichServer</Value>
                    </Property>
                    <Property Name="AssignmentsOnEnteringNewValue">Server1.Name</Property>
                  </Properties>
                </Rows>
              </Property>
              <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
              <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
              <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Fixed Name="Server2" Type="Server" Location="-1.66068232059479 0 -1.02110109788788" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
            <AssociatedNodes>
              <Node Name="Input@Server2" Type="BasicNode" Location="-3.16068232059479 0 -1.02110109788788" YawDeg="90" Scope="Public" RotationChangesLocation="False">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DynamicSelectionRule">
                    <Value>None</Value>
                  </Property>
                  <Property Name="FlowSplitAllocationRule">Proportional Based On Link Weights</Property>
                  <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
              <Node Name="Output@Server2" Type="TransferNode" Location="-0.160682320594788 0 -1.02110109788788" YawDeg="90" Scope="Public" RotationChangesLocation="False">
                <Properties>
                  <Property Name="InitialCost" Units="USD">0.0</Property>
                  <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
                  <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
                  <Property Name="DynamicSelectionRule">
                    <Value>None</Value>
                  </Property>
                  <Property Name="FlowSplitAllocationRule">Proportional Based On Link Weights</Property>
                  <Property Name="DestinationNodeName"></Property>
                  <Property Name="DestinationSelectionExpression">Candidate.Node.InputLocation.Overload</Property>
                  <Property Name="RouteRequestDynamicSelectionRule">
                    <Value>None</Value>
                  </Property>
                  <Property Name="RideOnTransporterCondition">False</Property>
                  <Property Name="TransporterSelectionValueExpression">Candidate.Transporter.RideCapacityRemaining</Property>
                </Properties>
                <Graphics ExternallyVisible="True" />
              </Node>
            </AssociatedNodes>
            <IndexedSizes>
              <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
              <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
              <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
              <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
              <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DynamicSelectionRule">
                <Value>None</Value>
              </Property>
              <Property Name="ExpectedOperationTimeExpression">0.0</Property>
              <Property Name="ImmediatelyTrySeize">True</Property>
              <Property Name="AssignmentsOnEntering">
                <Rows>
                  <Properties>
                    <Property Name="AssignmentsOnEnteringStateVariableName">
                      <Value>ModelEntity.WhichServer</Value>
                    </Property>
                    <Property Name="AssignmentsOnEnteringNewValue">Server2.Name</Property>
                  </Properties>
                </Rows>
              </Property>
              <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
              <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
              <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="CapitalCost" Units="USD">0.0</Property>
              <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
              <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Fixed>
          <Entity Name="DefaultEntity" Type="ModelEntity" Location="-7.70399332046509 0 -0.151910342276096" YawDeg="90" Size="0.5 0.5 0.25" Scope="Public">
            <IndexedSizes>
              <IndexedSize Size="0.5 0.5 0.25" YawDeg="90" />
              <IndexedSize Size="0.5 0.5 0.25" YawDeg="90" />
            </IndexedSizes>
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DynamicSelectionRule">
                <Value>None</Value>
              </Property>
              <Property Name="InitialTravelMode">Network Only</Property>
            </Properties>
            <Graphics ExternallyVisible="True">
              <SymbolInstances>
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="be7de98c-64cf-463b-a478-f0f9ee6ee4ae" />
                  <FlowDecoration>
                    <MaterialRef Id="6f5f7e9b-7979-4396-a96a-a4aed4e90883" />
                  </FlowDecoration>
                  <DefaultFlowDecoration>
                    <MaterialRef Id="6f5f7e9b-7979-4396-a96a-a4aed4e90883" />
                  </DefaultFlowDecoration>
                </SymbolInstance>
              </SymbolInstances>
            </Graphics>
          </Entity>
          <Link Name="Path1" Type="Path" Size="3.29 0 0" Scope="Public" Start="Output@Source1" End="Input@Server1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DynamicSelectionRule">
                <Value>None</Value>
              </Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Path2" Type="Path" Size="3.69 0 0" Scope="Public" Start="Output@Source1" End="Input@Server2">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DynamicSelectionRule">
                <Value>None</Value>
              </Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Path3" Type="Path" Size="3.45 0 0" Scope="Public" Start="Output@Server1" End="Input@Sink1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DynamicSelectionRule">
                <Value>None</Value>
              </Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
          <Link Name="Path4" Type="Path" Size="3.4 0 0" Scope="Public" Start="Output@Server2" End="Input@Sink1">
            <Properties>
              <Property Name="InitialCost" Units="USD">0.0</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
              <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DynamicSelectionRule">
                <Value>None</Value>
              </Property>
            </Properties>
            <Graphics ExternallyVisible="True" />
          </Link>
        </Objects>
        <Tables>
          <Table Name="OutputTable1" OutputOnly="True">
            <Schema>
              <States>
                <DiscreteState Name="TimeEntered" />
                <StringState Name="EntityName" />
                <DiscreteState Name="TimeLeaving" />
                <StringState Name="ServerName" />
                <StringState Name="KeyValue" DisplayName="KeyValue" />
              </States>
              <Keys>
                <Key Column="KeyValue" />
              </Keys>
            </Schema>
            <Rows />
            <DataBindings ImportMode="Automatic" />
            <ExportBindings ExportOnExperimentReplicationRunComplete="True" ActiveExportDataBinding="Database Data Exporter1">
              <NamedDataBinding Name="Database Data Exporter1" ExporterName="Database Data Exporter1">
                <ExporterTableSettings>
                  <AddInPropertyValues>
                    <AddInPropertyValue Name="DatabaseTableName" Value="TestExperiment" Type="String" />
                    <AddInPropertyValue Name="DataExportType" Value="Update And Insert" Type="String" />
                    <AddInPropertyValue Name="EnableTableExport" Value="True" Type="Boolean" />
                    <AddInPropertyValue Name="PostSaveStoredProcedure" Value="" Type="String" />
                    <AddInPropertyValue Name="PreSaveStoredProcedure" Value="" Type="String" />
                  </AddInPropertyValues>
                </ExporterTableSettings>
                <ExporterStateColumnSettings ColumnName="TimeEntered">
                  <AddInPropertyValues>
                    <AddInPropertyValue Name="EnableColumnExport" Value="True" Type="Boolean" />
                  </AddInPropertyValues>
                </ExporterStateColumnSettings>
                <ExporterStateColumnSettings ColumnName="EntityName">
                  <AddInPropertyValues>
                    <AddInPropertyValue Name="EnableColumnExport" Value="True" Type="Boolean" />
                  </AddInPropertyValues>
                </ExporterStateColumnSettings>
                <ExporterStateColumnSettings ColumnName="TimeLeaving">
                  <AddInPropertyValues>
                    <AddInPropertyValue Name="EnableColumnExport" Value="True" Type="Boolean" />
                  </AddInPropertyValues>
                </ExporterStateColumnSettings>
                <ExporterStateColumnSettings ColumnName="ServerName">
                  <AddInPropertyValues>
                    <AddInPropertyValue Name="EnableColumnExport" Value="True" Type="Boolean" />
                  </AddInPropertyValues>
                </ExporterStateColumnSettings>
                <ExporterStateColumnSettings ColumnName="KeyValue">
                  <AddInPropertyValues>
                    <AddInPropertyValue Name="EnableColumnExport" Value="True" Type="Boolean" />
                  </AddInPropertyValues>
                </ExporterStateColumnSettings>
              </NamedDataBinding>
            </ExportBindings>
          </Table>
        </Tables>
        <Schedules>
          <Schedule Name="StandardWeek" CycleDays="7" StartDate="2011-01-03T00:00:00" Description="Typical Work Week">
            <DayPatternRefs>
              <DayPatternRef DayNumber="1" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="2" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="3" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="4" DayPattern="StandardDay" />
              <DayPatternRef DayNumber="5" DayPattern="StandardDay" />
            </DayPatternRefs>
          </Schedule>
        </Schedules>
        <DayPatterns>
          <DayPattern Name="StandardDay" Description="Standard 8-5 work day">
            <Periods>
              <Period Start="08:00:00" End="12:00:00" Value="1" CostMultiplier="1" />
              <Period Start="13:00:00" End="17:00:00" Value="1" CostMultiplier="1" />
            </Periods>
          </DayPattern>
        </DayPatterns>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </FixedDefinition>
    </Definitions>
    <DefinitionRefs>
      <DefinitionRef Name="ModelEntity">
        <Id>b89d325b-b3c0-49ba-b9ca-7ce6bfe2633e</Id>
        <Revision>2</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Model">
        <Id>4e9c466e-ce33-49fb-b0ce-67453c79c9fa</Id>
        <Revision>107</Revision>
      </DefinitionRef>
      <DefinitionRef Name="TransferNode">
        <Id>0d40fbf0-8206-443f-b771-65f85633a2f6</Id>
        <Revision>161</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Server">
        <Id>1bc342dc-9d96-49f2-ae4a-af8f05416564</Id>
        <Revision>262</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Source">
        <Id>1d0ccf22-61f9-4fc0-9b3c-01d17e71402d</Id>
        <Revision>124</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Sink">
        <Id>5f44138f-a5f7-40d1-ab9a-eea7c5f0254e</Id>
        <Revision>69</Revision>
      </DefinitionRef>
      <DefinitionRef Name="BasicNode">
        <Id>585953ca-c744-444b-92d9-8af032f3e9a1</Id>
        <Revision>108</Revision>
      </DefinitionRef>
      <DefinitionRef Name="Path">
        <Id>93d39da5-5ba1-4ae1-a526-15bdb27d48e4</Id>
        <Revision>63</Revision>
      </DefinitionRef>
    </DefinitionRefs>
    <Materials>
      <ColorMaterial Id="6f5f7e9b-7979-4396-a96a-a4aed4e90883" Color="008000" />
    </Materials>
    <Symbols>
      <Symbol Id="be7de98c-64cf-463b-a478-f0f9ee6ee4ae">
        <Graphics>
          <Polygon Center="0 0 0" Color="008000" YHeight="0.25" ExternallyVisible="True">
            <Points>
              <Point Location="-0.25 0 0.25" />
              <Point Location="-0.25 0 -0.25" />
              <Point Location="0.25 0 0" />
            </Points>
          </Polygon>
          <DefaultFlowMaterial>
            <MaterialRef Id="6f5f7e9b-7979-4396-a96a-a4aed4e90883" />
          </DefaultFlowMaterial>
        </Graphics>
      </Symbol>
    </Symbols>
    <Definitions>
      <NodeDefinition Name="BasicNode" Id="585953ca-c744-444b-92d9-8af032f3e9a1" Revision="108" FileVersion="233" Author="Simio Employee" Description="A BasicNode object may be used by an entity to transfer into or out of an object. This type of node may also be used to define an intersection point in a network of links." CheckBaseForAdvancedProperties="True" Color="808080">
        <Compatibility ParseElementFunctionsInExpressionsLast="True" ParseNonEntityAssociatedObjectForPropertyReference="True" AllowInteractiveEntryOfNonStandardElementNames="False" ParsePropertiesForObjectTypeForAutoCreatedObjectsFirst="False" />
        <ChangeDescriptions>
          <ChangeDescription Version="58">Version 2.36: Renamed the 'TransferToLinkFailureLogic' process in the BasicNode process logic to 'TransferFailureLogic'. If the 'AutoTransferOnEntry' property value of the BasicNode is 'To Parent External Node' and the transfer to the specified parent external node fails, then the token now executes the 'TransferFailureLogic' process.</ChangeDescription>
          <ChangeDescription Version="59">Version 2.37: Changed 'Capacity' display name to 'Initial Capacity' as object capacities are now user assignable.</ChangeDescription>
          <ChangeDescription Version="64">Version 2.39: Updated the BasicNode object process logic to specify all of the object's process delays as non-interruptible.</ChangeDescription>
          <ChangeDescription Version="65">Version 2.40: In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="66">Version 2.41: Minor property description and display name updates.</ChangeDescription>
          <ChangeDescription Version="67">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object.</ChangeDescription>
          <ChangeDescription Version="68">Version 3.44: 'SeizedObjects.UnitsOwned' function renamed to 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="69">Version 3.47: Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="70">Version 3.48: Hide new 'Random Number Stream' property in 'Routing Logic' category.</ChangeDescription>
          <ChangeDescription Version="71">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'.</ChangeDescription>
          <ChangeDescription Version="78">Version 3.54: Added new Notify step to 'TransferFailureLogic' process to output a warning if automatically destroying an entity. Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="81">Version 3.56: Added new 'Tally Statistics' property category.</ChangeDescription>
          <ChangeDescription Version="82">Version 3.57: Change to new 'OnEnteredParking' standard interface process that was added to Simio's base node object.</ChangeDescription>
          <ChangeDescription Version="84">Version 4.58: Removed 'AutoTransferOnEntry' property. The 'ExternalNodeName' property is now always visible with display name 'Bound External Output Node'.  If a transfer to parent external node attempt fails, then the token now continues normal processing instead of executing the 'TransferFailureLogic'. Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="85">Version 4.60: Process logic now uses new object 'SeizedResources.CapacityUnitsOwned' function instead of deprecated 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="86">Version 4.61: Set all inherited properties in 'Financials' category to not be visible.</ChangeDescription>
          <ChangeDescription Version="87">Version 4.63: Set all inherited properties in 'Financials-&gt;Resource Costs' to not be visible.</ChangeDescription>
          <ChangeDescription Version="88">Version 4.65: Process logic now uses new object 'SeizedResources.CapacityOwnedOf' function instead of deprecated 'SeizedResources.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="89">Version 4.66: If bound to an external output node of the parent model, a basic node's 'Entered' event is still fired and its 'Entered' add-on process trigger still executed before transferring the entity out of the parent model.</ChangeDescription>
          <ChangeDescription Version="93">Version 4.68: The BasicNode object is no longer enabled as a resource object, and the 'InitialCapacity', 'RankingRule', and 'RankingExpression' properties have been replaced by equivalent 'InitialTravelerCapacity', 'EntryRankingRule', and 'EntryRankingExpression' properties. Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'. Renamed 'ExternalNodeName' property to 'BoundExternalOutputNode'.</ChangeDescription>
          <ChangeDescription Version="95">Version 4.73: New 'Random Number Stream' property now available in the 'Advanced Options' category.</ChangeDescription>
          <ChangeDescription Version="96">Version 4.74: If a traveler is attempting to transfer out of the node and has no network assigned (i.e., is using free space for travel), then the node's process logic now transfers the traveler into free space.</ChangeDescription>
          <ChangeDescription Version="97">Version 4.77: Removed an unnecessary 'TransferFailureLogic' Execute step from the 'OnEnteredToAssociatedObject' process logic.</ChangeDescription>
          <ChangeDescription Version="98">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="99">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
          <ChangeDescription Version="100">Version 6.103: Some property description updates.</ChangeDescription>
          <ChangeDescription Version="101">Version 7.130: Renamed 'RandomNumberStream' property to 'BranchingRandomNumberStream'</ChangeDescription>
          <ChangeDescription Version="102">Version 7.131: Added new 'Routing Logic -&gt; Other Routing Out Options' property category with possible 'Branching Random Number Stream' property.</ChangeDescription>
          <ChangeDescription Version="104">Version 8.133 'OnEntered' process logic no longer requires a Decide 'IfFreeSpaceTraveler' step. Added 'State Assignments' property category.</ChangeDescription>
          <ChangeDescription Version="105">Version 8.134 'Routing Logic -&gt; Other Routing Out Options -&gt; Random Number Stream' property now inherited from the base node definition</ChangeDescription>
          <ChangeDescription Version="106">Version 8.137 'TransferFailureLogic' now gives warning notification if automatically parking entity.</ChangeDescription>
          <ChangeDescription Version="107">Version 8.147: Property description string updates.</ChangeDescription>
          <ChangeDescription Version="108">Version 12.212: Renamed 'TalliesOnEnteringValue' property to 'TalliesOnEnteringValueExpression'. Renamed 'TalliesOnExitedValue' property to 'TalliesOnExitedValueExpression'.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="84" RegularExpressionPattern="(^|[^\w_])(?i:AutoTransferOnEntry)([^\w_]|$)" ReplacementString="$1ExternalNodeName.HasValue$2" />
          <ChangeStringReplacement Version="84" RegularExpressionPattern="(^|[^\w_])(?i:List[\.]AutoTransferOnEntryType[\.]None)([^\w_]|$)" ReplacementString="$1False$2" />
          <ChangeStringReplacement Version="93" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
          <ChangeStringReplacement Version="93" RegularExpressionPattern="(^|[^\w_])(?i:ExternalNodeName)([^\w_]|$)" ReplacementString="$1BoundExternalOutputNode$2" />
        </ChangeStringReplacements>
        <Lists>
          <StringList Name="ActionConditionType">
            <Items>
              <Item Value="NoCondition" />
              <Item Value="IsEntity" />
              <Item Value="IsTransporter" />
              <Item Value="CustomCondition" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Routing Logic/Other Routing Out Options" Description="Routing Logic/Other Routing Out Options" InitiallyExpanded="False" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Tally Statistics" Description="Optional Tally Statistics" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <RepeatingProperty Name="AssignmentsOnEntering" DisplayName="On Entering" Description="Optional state assignments when an entity is entering the object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <ListProperty Name="AssignmentsOnEnteringAssignConditionType" DisplayName="Assign If" Description="Condition required to perform the assignment." Category="Basic Logic" DefaultValue="Entity Entering" NullString="null" List="ActionConditionType">
                <Captions>
                  <Caption Value="NoCondition" Display="No Condition" />
                  <Caption Value="IsEntity" Display="Entity Entering" />
                  <Caption Value="IsTransporter" Display="Transporter Entering" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="AssignmentsOnEnteringAssignCondition" DisplayName="Condition" Description="The condition required to perform the assignment." Category="Basic Logic" DefaultValue="0.0" Parent="AssignmentsOnEnteringAssignConditionType" NullString="null">
                <Switch Property="AssignmentsOnEnteringAssignConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <StateProperty Name="AssignmentsOnEnteringStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnEnteringNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnEnteringStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="TalliesOnEntering" DisplayName="On Entering" Description="Optional tally statistics to record when an entity is entering the node." ComplexityLevel="Advanced" Category="Tally Statistics" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Tally Statistics (Basic Logic)" />
              </Categories>
              <ListProperty Name="TalliesOnEnteringTallyConditionType" DisplayName="Tally If" Description="Condition required to record the tally statistic." Category="Basic Logic" DefaultValue="Entity Entering" NullString="null" List="ActionConditionType">
                <Captions>
                  <Caption Value="NoCondition" Display="No Condition" />
                  <Caption Value="IsEntity" Display="Entity Entering" />
                  <Caption Value="IsTransporter" Display="Transporter Entering" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="TalliesOnEnteringTallyCondition" DisplayName="Condition" Description="The condition required to record the tally statistic." Category="Basic Logic" DefaultValue="0.0" Parent="TalliesOnEnteringTallyConditionType" NullString="null">
                <Switch Property="TalliesOnEnteringTallyConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <ElementProperty Name="TalliesOnEnteringTallyStatisticName" DisplayName="Tally Statistic Name" Description="The name of the tally statistic for which to record an observation value." Category="Basic Logic" Required="False" NullString="null" Type="TallyStatistic" />
              <EnumProperty Name="TalliesOnEnteringValueType" DisplayName="Value Type" Description="The type of observation value to record.&#xD;&#xA;&#xD;&#xA;If the value type is 'Expression', then the value of the specified expression is recorded.&#xD;&#xA;&#xD;&#xA;If the value type is 'TimeBetween', then the time since the last entity arrival to this or any other Tally step referencing the tally statistic is recorded." Category="Basic Logic" DefaultValue="Expression" NullString="null" EnumType="TallyValueType" />
              <ExpressionProperty Name="TalliesOnEnteringValueExpression" DisplayName="Value Expression" Description="The expression returning the value to be recorded." Category="Basic Logic" DefaultValue="0.0" NullString="null" UnitTypeProperty="TalliesOnEnteringTallyStatisticName">
                <Switch Property="TalliesOnEnteringValueType" Value="Expression" />
              </ExpressionProperty>
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="108" OldPropertyName="TalliesOnEnteringValue" NewPropertyName="TalliesOnEnteringValueExpression" />
              </PropertyReplacements>
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="TalliesOnExited" DisplayName="On Exited" Description="Optional tally statistics to record when an entity has exited the node." ComplexityLevel="Advanced" Category="Tally Statistics" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Tally Statistics (Basic Logic)" />
              </Categories>
              <ListProperty Name="TalliesOnExitedTallyConditionType" DisplayName="Tally If" Description="Condition required to record the tally statistic." Category="Basic Logic" DefaultValue="Entity Exited" NullString="null" List="ActionConditionType">
                <Captions>
                  <Caption Value="NoCondition" Display="No Condition" />
                  <Caption Value="IsEntity" Display="Entity Exited" />
                  <Caption Value="IsTransporter" Display="Transporter Exited" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="TalliesOnExitedTallyCondition" DisplayName="Condition" Description="The condition required to record the tally statistic." Category="Basic Logic" DefaultValue="0.0" Parent="TalliesOnExitedTallyConditionType" NullString="null">
                <Switch Property="TalliesOnExitedTallyConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <ElementProperty Name="TalliesOnExitedTallyStatisticName" DisplayName="Tally Statistic Name" Description="The name of the tally statistic for which to record an observation value." Category="Basic Logic" Required="False" NullString="null" Type="TallyStatistic" />
              <EnumProperty Name="TalliesOnExitedValueType" DisplayName="Value Type" Description="The type of observation value to record.&#xD;&#xA;&#xD;&#xA;If the value type is 'Expression', then the value of the specified expression is recorded.&#xD;&#xA;&#xD;&#xA;If the value type is 'TimeBetween', then the time since the last entity arrival to this or any other Tally step referencing the tally statistic is recorded." Category="Basic Logic" DefaultValue="Expression" NullString="null" EnumType="TallyValueType" />
              <ExpressionProperty Name="TalliesOnExitedValueExpression" DisplayName="Value Expression" Description="The expression returning the value to be recorded." Category="Basic Logic" DefaultValue="0.0" NullString="null" UnitTypeProperty="TalliesOnExitedTallyStatisticName">
                <Switch Property="TalliesOnExitedValueType" Value="Expression" />
              </ExpressionProperty>
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="108" OldPropertyName="TalliesOnExitedValue" NewPropertyName="TalliesOnExitedValueExpression" />
              </PropertyReplacements>
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="EnteredAddOnProcess" DisplayName="Entered" Description="Occurs when an entity's leading edge has entered this node." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="ExitedAddOnProcess" DisplayName="Exited" Description="Occurs when an entity's trailing edge has exited this node." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ExternalNodeProperty Name="BoundExternalOutputNode" DisplayName="Bound External Output Node" Description="The name of an external output node that this node has been bound to in order to transfer entities out of the containing (parent) object. The transfer attempt will be performed by an entity immediately upon entering the node and, if successful, any other crossing and routing logic for the node will be ignored." ComplexityLevel="Advanced" Category="Advanced Options" Required="False" NullString="null" />
          <Overrides>
            <Override Name="ReportStatistics" DefaultValue="False" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="IncludeInPlanResourceConstraints" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="InitialWorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="EntryExemptionCondition" Visible="False" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="92" OldPropertyName="InitialCapacity" NewPropertyName="InitialTravelerCapacity" />
            <PropertyReplacement Version="92" OldPropertyName="RankingRule" NewPropertyName="EntryRankingRule" />
            <PropertyReplacement Version="92" OldPropertyName="RankingExpression" NewPropertyName="EntryRankingExpression" />
            <PropertyReplacement Version="92" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
            <PropertyReplacement Version="92" OldPropertyName="ExternalNodeName" NewPropertyName="BoundExternalOutputNode" />
            <PropertyReplacement Version="101" OldPropertyName="RandomNumberStream" NewPropertyName="BranchingRandomNumberStream" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States />
        <Events>
          <Event Name="Entered" Description="The Entered event provides notification that an entity has entered the node." />
          <Event Name="Exited" Description="The Exited event provides notification that an entity has exited the node." />
        </Events>
        <Elements />
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitializedAddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunInitializedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEndingAddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunEndingAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEntered" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Node.OnEntered" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">Math.If(AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.NoCondition,False,AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.IsEntity, Entity.Is.Transporter,AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.IsTransporter, !Entity.Is.Transporter, AssignmentsOnEntering.AssignmentsOnEnteringAssignCondition&lt;=0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Tally" Name="OnEnteringTallies" ID="3">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">
                          <Value>TalliesOnEnteringTallyStatisticName</Value>
                        </Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValueExpression">TalliesOnEnteringValueExpression</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition&gt;0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue, 1, 2)" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="5">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="VisitNode" Name="Entity" ID="6">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Execute" Name="EnteredAddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>EnteredAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="8">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Transfer" Name="ToOutboundLink" ID="9">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="10" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="10">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="11" />
              </Step>
              <Step Type="Execute" Name="TransferFailureLogic" ID="11">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>TransferFailureLogic</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExited" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Node.OnExited" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Tally" Name="OnExitedTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnExited</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">
                          <Value>TalliesOnExitedTallyStatisticName</Value>
                        </Property>
                        <Property Name="TalliesValueType">TalliesOnExitedValueType</Property>
                        <Property Name="TalliesValueExpression">TalliesOnExitedValueExpression</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnExited.TalliesOnExitedTallyConditionType==List.ActionConditionType.NoCondition,1,TalliesOnExited.TalliesOnExitedTallyConditionType==List.ActionConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnExited.TalliesOnExitedTallyConditionType==List.ActionConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnExited.TalliesOnExitedTallyCondition&gt;0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="ExitedAddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ExitedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
              <Step Type="Fire" Name="ExitedEvent" ID="4">
                <Properties>
                  <Property Name="EventName">Exited</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredToAssociatedObject" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Node.OnEnteredToAssociatedObject" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">Math.If(AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.NoCondition,False,AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.IsEntity, Entity.Is.Transporter,AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.IsTransporter, !Entity.Is.Transporter, AssignmentsOnEntering.AssignmentsOnEnteringAssignCondition&lt;=0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Tally" Name="OnEnteringTallies" ID="3">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">
                          <Value>TalliesOnEnteringTallyStatisticName</Value>
                        </Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValueExpression">TalliesOnEnteringValueExpression</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition&gt;0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue, 1, 2)" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="5">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Execute" Name="EnteredAddOnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>EnteredAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="7">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToAssociatedObject" ID="8">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">AssociatedObject</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredParking" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Node.OnEnteredParking" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="EndTransfer" Name="EndTransfer" ID="2">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="TransferFailureLogic" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfEntityDestroyable" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">Entity.Destroyable</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Notify" Name="ParkingEntity" ID="3">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Entity '" + Entity.Name + "' failed to initiate transfer from node"</Property>
                  <Property Name="MessageContent">"Entity '" + Entity.Name + "' failed to initiate transfer from node '" + Name + "'. The entity is being automatically parked. However, this warning may indicate a problem in the modeled logic.

It is recommended to verify that the entity is using the intended travel mode. If the travel mode is 'Network Only', then verify that a followable network path has been drawn from the node to the entity's assigned destination '" + Math.If(Entity.DestinationNode!=Nothing &amp;&amp; Entity.DestinationNode!=Node, Entity.DestinationNode.Name, "No Destination") + "' using network '" + Math.If(Entity.CurrentNetwork!=Nothing, Entity.CurrentNetwork.Name, "No Network") +  "'."</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Park" Name="Entity" ID="4">
                <Properties />
              </Step>
              <Step Type="Notify" Name="DestroyingEntity" ID="5">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Entity '" + Entity.Name + "' failed to initiate transfer from node"</Property>
                  <Property Name="MessageContent">"Entity '" + Entity.Name + "' failed to initiate transfer from node '" + Name + "'. The entity is being automatically destroyed. However, this warning may indicate a problem in the modeled logic.

It is recommended to verify that the entity is using the intended travel mode. If the travel mode is 'Network Only', then verify that a followable network path has been drawn from the node to the entity's assigned destination '" + Math.If(Entity.DestinationNode!=Nothing &amp;&amp; Entity.DestinationNode!=Node, Entity.DestinationNode.Name, "No Destination") + "' using network '" + Math.If(Entity.CurrentNetwork!=Nothing, Entity.CurrentNetwork.Name, "No Network") +  "'."</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Destroy" Name="Entity" ID="6">
                <Properties />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </NodeDefinition>
      <LinkDefinition Name="Path" Id="93d39da5-5ba1-4ae1-a526-15bdb27d48e4" Revision="63" FileVersion="233" Author="Simio Employee" Description="A Path object may be used to define a pathway between two node locations where the travel time is determined by the path length and a traveling entity's speed. Passing may or may not be allowed." CheckBaseForAdvancedProperties="True" FlowConstraintMode="Default">
        <Compatibility ParseElementFunctionsInExpressionsLast="True" ParseNonEntityAssociatedObjectForPropertyReference="False" AllowInteractiveEntryOfNonStandardElementNames="False" ParsePropertiesForObjectTypeForAutoCreatedObjectsFirst="False" />
        <ChangeDescriptions>
          <ChangeDescription Version="31">Version 2.39: Updated the Path object to provide a 'State Assignments' property category.</ChangeDescription>
          <ChangeDescription Version="33">Version 2.40: Removed the Path object's 'Close' and 'Open' public processes. For equivalent functionality, use the Assign step and assign the path's DesiredDirection state to the value 'Enum.TrafficDirection.None' to close entry onto the path, or to the value 'Enum.TrafficDirection.Either' to re-open entry onto the path. In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="34">Version 2.41: Updated the assignments repeat groups to take state units into account.</ChangeDescription>
          <ChangeDescription Version="35">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object.</ChangeDescription>
          <ChangeDescription Version="36">Version 3.47: Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="37">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'.</ChangeDescription>
          <ChangeDescription Version="40">Version 3.51: Do not display new link 'Cell Spacing Type', 'Cell Size', and 'Auto Align Cells' properties.</ChangeDescription>
          <ChangeDescription Version="42">Version 3.54: Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="44">Version 3.57: Added logic for new 'OnTurnedAround' standard interface process.</ChangeDescription>
          <ChangeDescription Version="45">Version 4.58: Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="47">Version 4.59: Process logic now uses new entity 'NextEntityAheadOnLink' function instead of deprecated 'FrontTraffic.Speed' function</ChangeDescription>
          <ChangeDescription Version="48">Version 4.61: Set all inherited properties in 'Financials' category to not be visible.</ChangeDescription>
          <ChangeDescription Version="49">Version 4.63: Reordered the position of the 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="52">Version 4.68: Changed 'TravelerCapacity' integer property to 'InitialTravelerCapacity' expression property. Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'.</ChangeDescription>
          <ChangeDescription Version="55">Version 4.76: Updates required due to Suspend &amp; Resume step enhancements.</ChangeDescription>
          <ChangeDescription Version="56">Version 5.85: Process logic changes to better support an entity on the path being destroyed before reaching the end of the link.</ChangeDescription>
          <ChangeDescription Version="57">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="58">Version 5.88: 'OnCollisionCleared' process - Improvements to entity movement rate assignment expression to better avoid null pointer exceptions.</ChangeDescription>
          <ChangeDescription Version="59">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
          <ChangeDescription Version="60">Version 6.103: Some property description updates.</ChangeDescription>
          <ChangeDescription Version="61">Version 8.147: Property description string updates.</ChangeDescription>
          <ChangeDescription Version="62">Version 9.161: New TokenMatchCondition property added to Suspend &amp; Resume steps.</ChangeDescription>
          <ChangeDescription Version="63">Version 9.164: OnCollisionCleared process logic - Fixed entity movement rate assignment expression to never assign a value greater than the entity's desired speed.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="52" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
        </ChangeStringReplacements>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Travel Logic" Description="Travel Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <BooleanProperty Name="AllowPassing" DisplayName="Allow Passing" Description="Indicates whether passing is allowed on this path. Passing means that entities will not be blocked along the path, but instead will pass each other if speeds vary." Category="Travel Logic" DefaultValue="True" NullString="null" />
          <RealProperty Name="SpeedLimit" DisplayName="Speed Limit" Description="The maximum speed at which an entity can travel along this path." ComplexityLevel="Advanced" Category="Travel Logic" DefaultValue="Infinity" NullString="null" UnitType="TravelRate" DefaultUnits="Meters per Second" />
          <RepeatingProperty Name="AssignmentsOnEntering" DisplayName="On Entering" Description="Optional state assignments when an entity is entering the object." Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnEnteringStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnEnteringNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnEnteringStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsBeforeExiting" DisplayName="Before Exiting" Description="Optional state assignments when an entity is ready to exit the object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsBeforeExitingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsBeforeExitingNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsBeforeExitingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="EnteredAddOnProcess" DisplayName="Entered" Description="Occurs when an entity's leading edge has entered this path." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="TrailingEdgeEnteredAddOnProcess" DisplayName="Trailing Edge Entered" Description="Occurs when an entity's trailing edge has entered this path." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="ReachedEndAddOnProcess" DisplayName="Reached End" Description="Occurs when an entity's leading edge has reached the end of this path." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="ExitedAddOnProcess" DisplayName="Exited" Description="Occurs when an entity has exited this path." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <Overrides>
            <Override Name="ReportStatistics" DefaultValue="True" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="IncludeInPlanResourceConstraints" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="InitialWorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="Type" ComplexityLevel="Basic" />
            <Override Name="InitialDesiredSpeed" Visible="False" DefaultValue="0.0" />
            <Override Name="EntityAlignment" Visible="False" />
            <Override Name="CellSpacingType" Visible="False" />
            <Override Name="NumberOfCells" Visible="False" />
            <Override Name="CellSize" Visible="False" />
            <Override Name="AutoAlignCells" Visible="False" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="51" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States />
        <Events />
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitialized_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunInitializedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEnding_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunEndingAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEntered" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Link.OnEntered" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfNoEnteredAddOnProcess" ExclusionExpression="Math.If(EnteredAddOnProcess.HasValue, 2, 1)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">!EnteredAddOnProcess.HasValue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Assign" Name="DisableOnCollisionCleared" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnCollisionCleared.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Suspend" Name="EntityMovement" ID="5">
                <Properties>
                  <Property Name="SuspendType">ObjectMovement</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Assign" Name="EnableOnCollisionCleared" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnCollisionCleared.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Execute" Name="Entered_AddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>EnteredAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Resume" Name="EntityMovement" ID="8">
                <Properties>
                  <Property Name="ResumeType">ObjectMovement</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Assign" Name="EntityMovementRate" ID="9">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(Entity.DesiredSpeed, SpeedLimit)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Decide" Name="IfPassingAllowed" ExclusionExpression="Math.If(AllowPassing, 1, 2)" ID="10">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">AllowPassing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="11" />
              </Step>
              <Step Type="EndTransfer" Name="OntoPath" ID="11">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExited" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Link.OnExited" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="Exited_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ExitedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnReachedEnd" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Link.OnReachedEnd" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="ReachedEnd_AddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ReachedEndAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="BeforeExitingAssignments" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeExiting</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeExitingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeExitingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="FromPath" ID="4">
                <Properties>
                  <Property Name="FromType">EndOfLink</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCollided" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Link.OnCollided" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfPassingAllowed" ExclusionExpression="Math.If(AllowPassing, 1, 2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">AllowPassing</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="EntityMovementRate" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Entity.NextEntityAheadOnLink.Movement.Rate</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCollisionCleared" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Link.OnCollisionCleared" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfPassingAllowed" ExclusionExpression="Math.If(AllowPassing, 1, 2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">AllowPassing</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="EntityMovementRate" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(Math.Min(Math.If((Entity.NextEntityAheadOnLink!=Nothing)&amp;&amp;(Entity.NetworkDistanceTo.NextEntityAheadOnLink==0.0), Entity.NextEntityAheadOnLink.Movement.Rate, Infinity), Entity.DesiredSpeed), SpeedLimit)</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnTrailingEdgeEntered" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Link.OnTrailingEdgeEntered" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfPassingAllowed" ExclusionExpression="Math.If(AllowPassing, 1, 2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">AllowPassing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="EndTransfer" Name="OntoPath" ID="3">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="TrailingEdgeEntered_AddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>TrailingEdgeEnteredAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnTurnedAround" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Link.OnTurnedAround" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="EntityMovementRate" ExclusionExpression="SpeedLimit == Infinity" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Entity.Movement.Rate</Value>
                  </Property>
                  <Property Name="NewValue">Math.Min(Entity.DesiredSpeed, SpeedLimit)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfPassingAllowed" ExclusionExpression="Math.If(AllowPassing, 1, 2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">AllowPassing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
              </Step>
              <Step Type="EndTransfer" Name="OntoPath" ID="4">
                <Properties />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </LinkDefinition>
      <FixedDefinition Name="Server" Id="1bc342dc-9d96-49f2-ae4a-af8f05416564" Revision="262" FileVersion="233" Author="Simio Employee" Description="A Server object may be used to model a capacity-constrained processing location. Operations performed at the server can be modeled as either a processing time or as a sequence of tasks. Secondary resources or material requirements may be optionally specified." ResourceLogic="True">
        <ChangeDescriptions>
          <ChangeDescription Version="66">Version 2.37: Changed 'Capacity' display name to 'Initial Capacity' as object capacities are now user assignable.</ChangeDescription>
          <ChangeDescription Version="74">Version 2.39: Updated the Server object process logic to specify all of the object's process delays as non-interruptible except for the 'TransferInTime' and 'ProcessingTime' delays in the 'OnEnteredProcessing' process. The 'OnEnteredProcessing' process was changed from a private process to a public process. Added a 'State Assignments' property category.</ChangeDescription>
          <ChangeDescription Version="78">Version 2.40: 'On Shift' or 'Off Shift' add-on process triggers are now called when initializing the object even if a work schedule is not specified. In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.  Restructured the failure-related process logic.</ChangeDescription>
          <ChangeDescription Version="79">Version 2.41: Updated the assignments repeat groups to take state units into account.</ChangeDescription>
          <ChangeDescription Version="82">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object. The EntryRankingRule and EntryRankingExpression properties of the InputBuffer station were changed to be the same as the Server's resource ranking rule.</ChangeDescription>
          <ChangeDescription Version="83">Version 3.44: 'SeizedObjects.UnitsOwned' function renamed to 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="87">Version 3.47: Added a 'Secondary Resources' property category. Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="91">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'. Collapsed the 'Secondary Resources-&gt;Other Resource Seizes' &amp; 'Secondary Resources-&gt;Other Resource Releases' property categories by default.</ChangeDescription>
          <ChangeDescription Version="92">Version 3.50: Updated the description text for some of the secondary resource related properties.</ChangeDescription>
          <ChangeDescription Version="93">Version 3.52: If the model's 'Disable Randomness' option is being used, the object's 'Reliability Logic' is now automatically disabled to not generate any failure occurrences.</ChangeDescription>
          <ChangeDescription Version="95">Version 3.53: Property display names 'Request Visit', 'Node Name', and 'Visit Priority' renamed to 'Request Move', 'Destination Node', and 'Move Priority'.</ChangeDescription>
          <ChangeDescription Version="99">Version 3.54: Usage of 'Run.RandomnessDisabled' function instead of deprecated 'DisableRandomness' function. Added support for 'Processing Time Based' failure type. Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="100">Version 3.56: Conversion to 'OnEvaluatingSeizeRequest' standard interface process.</ChangeDescription>
          <ChangeDescription Version="102">Version 4.58: Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="103">Version 4.60: Process logic now uses new object 'SeizedResources.CapacityUnitsOwned' function instead of deprecated 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="105">Version 4.61: Added new 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="109">Version 4.62: Added new 'Financials-&gt;Buffer Costs property category.</ChangeDescription>
          <ChangeDescription Version="113">Version 4.63: Reordered the position of the 'Financials' property category. 'Processing' add-on process trigger now always executed after entity enters the 'Processing' station. Added new 'Financials-&gt;Resource Costs' property category.</ChangeDescription>
          <ChangeDescription Version="114">Version 4.64: Added a 'Random' selection goal option to the 'Secondary Resources' functionality.</ChangeDescription>
          <ChangeDescription Version="120">Version 4.65: Process logic now uses new object 'SeizedResources.CapacityOwnedOf' function instead of deprecated 'SeizedResources.CapacityUnitsOwned'. 'Repairing' add-on process trigger marked as obsolete and is no longer displayed in the Properties window if not previously defined.</ChangeDescription>
          <ChangeDescription Version="124">Version 4.68: Simplified 'OnExitedProcessing' process by eliminating Decide step to check whether token has an associated object. Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'. Added new 'Before Processing' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="125">Version 4.71: Renamed 'EventName' property to 'FailureEventName'.</ChangeDescription>
          <ChangeDescription Version="128">Version 4.72: Renamed 'Processed' add-on process name to 'AfterProcessing'. An initial (default) property value is now specified for the 'Sequence Expected Operation Time' property of the server's 'Input' node.</ChangeDescription>
          <ChangeDescription Version="129">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="132">Version 5.91: Minor display name related update of buffer capacity-related properties. Secondary Resources feature -&gt; Now hides the 'ParentObject' object type choice. Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
          <ChangeDescription Version="137">Version 5.95: 'OnExitedProcessing' process logic now checks that token has an associated object before attempting to release the Server. Updates to the 'OnFailed', 'OnRepaired', 'OnEvaluatingSeizeRequest', and 'OnCapacityChanged' process logic.</ChangeDescription>
          <ChangeDescription Version="138">Version 5.96: Added new 'Evaluating Seize Request' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="139">Version 6.103: Some property description updates.</ChangeDescription>
          <ChangeDescription Version="140">Version 6.106: Required update due to TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="141">Version 7.119: Added new 'Process Type' option to support modeling processing at the server as a task sequence.</ChangeDescription>
          <ChangeDescription Version="149">Version 7.121: If using the 'Task Sequence' process type, can now define resource requirements for an individual processing task. Other miscellaneous maintenance updates.</ChangeDescription>
          <ChangeDescription Version="151">Version 7.122: 'PerformProcessingTask' process logic now uses new 'Seized Resources Filter' advanced option on the Release step when releasing the task's resources, to ensure that the resource capacity released is only capacity that was seized due to execution of the same processing task token.</ChangeDescription>
          <ChangeDescription Version="153">Version 7.123: In 'Secondary Resources' property category, added options to keep released resources reserved for possible later reuse by the same entity.</ChangeDescription>
          <ChangeDescription Version="157">Version 7.127: Updates to support new 'Release Quantity Type' property on Release step. Failures now suspend 'PerformProcessingTask' process. Added new 'Other Task Sequence Options' property category if process type is 'Task Sequence'.</ChangeDescription>
          <ChangeDescription Version="160">Version 7.130: Added 'Advanced Options -&gt; Obsolete Properties' property category. If using the 'Task Sequence' processing type, can now define material requirements for an individual processing task.</ChangeDescription>
          <ChangeDescription Version="166">Version 7.131: Required update due to BasicNode &amp; TransferNode object updates. 'Secondary Resources -&gt; Other Resource Releases' repeat groups include new 'Release Quantity Type' property.</ChangeDescription>
          <ChangeDescription Version="167">Version 8.133: Required update due to BasicNode &amp; TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="168">Version 8.134: Required update due to BasicNode &amp; TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="169">Version 8.135: Edited the default value of new 'ExpectedOperationTimeExpression' property.</ChangeDescription>
          <ChangeDescription Version="172">Version 8.136: Simplification of 'OnCapacityChanged', 'OnFailed', &amp; 'OnRepaired' process logic to use fewer Suspend &amp; Resume steps. Simplification of 'OnRunInitialized' process logic.</ChangeDescription>
          <ChangeDescription Version="175">Version 8.137: New 'Task Precedence Method' option for 'Task Sequence' process type. Simplification of 'OnFailed' process logic to use fewer Suspend &amp; Resume steps.</ChangeDescription>
          <ChangeDescription Version="176">Version 8.140: Added new 'Off Shift Rule' option to suspend processing or finish work already started is the server is at the end of a shift because of its specified work schedule.</ChangeDescription>
          <ChangeDescription Version="177">Version 8.141: Added new 'Material Requirements -&gt; Lot ID' property to 'Processing Tasks' repeat group.</ChangeDescription>
          <ChangeDescription Version="182">Version 8.143: Added 'Sequence Dependent Setup' task process type to 'Processing Tasks' repeat group.</ChangeDescription>
          <ChangeDescription Version="184">Version 8.144: Added 'Setup' and 'OffShiftSetup' resource state tracking.</ChangeDescription>
          <ChangeDescription Version="185">Version 8.145: 'Redirect Location Type' property of OutputBuffer station specified as 'ParentExternalNode' with redirect external node name 'Output'.</ChangeDescription>
          <ChangeDescription Version="186">Version 8.146: Renamed 'Buffer Capacity' property category to 'Buffer Logic'. Added input &amp; output buffer balking options.</ChangeDescription>
          <ChangeDescription Version="187">Version 8.147: Added new 'Table Row Referencing' property category. Added optional 'Before Processing' and 'After Processing' state assignments.</ChangeDescription>
          <ChangeDescription Version="191">Version 9.149: Added Buffer Logic -&gt; Balking &amp; Reneging Options -&gt; Renege Triggers. Added 'Failed' event &amp; changed scope of 'Repaired' event from private to public.</ChangeDescription>
          <ChangeDescription Version="192">Version 9.150: Added new 'Submodel Entity Creation Method' option for 'Submodel' task process type if using task sequences.</ChangeDescription>
          <ChangeDescription Version="194">Version 9.154: Failure-related timers now reset by a 'FailuresTimerReset' event (fired after Repair step in 'FailureOccurrenceLogic') instead of by the 'Repaired' event. The 'Uptime Between Failures' of the Processing Time Based failure type now includes time spent in the OffShiftProcessing and FailedProcesssing states.</ChangeDescription>
          <ChangeDescription Version="195">Version 9.155: Added new 'Must Simultaneously Seize' option for secondary resource related features.</ChangeDescription>
          <ChangeDescription Version="196">Version 9.158: Required update due to TransferNode object update.</ChangeDescription>
          <ChangeDescription Version="198">Version 9.159: LogResourceUsage property mapped down to LogTasks property of ProcessingTaskSequence element.</ChangeDescription>
          <ChangeDescription Version="199">Version 9.160: New OnCapacityChangedProcess property added to Seize step.</ChangeDescription>
          <ChangeDescription Version="200">Version 9.161: Property description updates.</ChangeDescription>
          <ChangeDescription Version="203">Version 9.162: Added new 'Off Shift Rule' option to suspend processing or finish work already started if a secondary resource is at the end of a shift because of its specified work schedule.</ChangeDescription>
          <ChangeDescription Version="209">Version 9.163: Made visible the new 'Off Shift Rule' options for secondary resources. Added new 'Task Ready' add-on process trigger option if using task sequence. Renamed 'SecondaryResourceForProcessingRequestVisit' property to 'SecondaryResourceForProcessingRequestMove'. Renamed 'SecondaryResourceForProcessingNodeName' to 'SecondaryResourceForProcessingDestinationNode'.</ChangeDescription>
          <ChangeDescription Version="215">Version 9.164: If the resource state is 'OffShiftProcessing' or 'OffShiftSetup' and a failure occurs, then the resource state is now set to 'Failed'. If the resource state is 'OffShiftProcessing' and all entities have finished processing and are trying to transfer out, then the resource state is now set to 'OffShift'. Secondary Resources -&gt; Other Resource Seizes properties - Renamed 'SecondaryResourceSeizesRequestVisit' properties to 'SecondaryResourceSeizesRequestMove'. Renamed 'SecondaryResourceSeizesNodeName' properties to 'SecondaryResourceSeizesDestinationNode'. Renamed 'SecondaryResourceSeizesVisitPriority' properties to 'SecondaryResourceSeizesMovePriority'.</ChangeDescription>
          <ChangeDescription Version="216">Version 10.171: Processing Tasks - Auto Cancel Trigger property description update.</ChangeDescription>
          <ChangeDescription Version="217">Version 10.172: OnSecondaryResourceCapacityChanged process -&gt; Decide 'IfOffShift' step -&gt; Use Object.Capacity.Previous function instead of Capacity.Previous.</ChangeDescription>
          <ChangeDescription Version="218">Version 10.172: Added Loopback Branches feature to Task Sequence process type. Added optional task state assignments.</ChangeDescription>
          <ChangeDescription Version="219">Version 10.173: Added optional task state assignments.</ChangeDescription>
          <ChangeDescription Version="220">Version 10.174: Required update due to TransferNode object update.</ChangeDescription>
          <ChangeDescription Version="221">Version 10.175: Added Processing Tasks -&gt; Material Requirements -&gt; InventorySiteType &amp; SiteObjectName properties.</ChangeDescription>
          <ChangeDescription Version="223">Version 10.179: Added OnConsumedProcess property to Consume step and RecordAsOrderReceivedCondition property to Produce step.</ChangeDescription>
          <ChangeDescription Version="227">Version 10.185: Added 'Switch Resources If Possible' off shift rule for secondary resources.</ChangeDescription>
          <ChangeDescription Version="229">Version 10.186: Fixes to 'Switch Resources If Possible' off shift rule for secondary resources.</ChangeDescription>
          <ChangeDescription Version="230">Version 10.187: Process logic implementation of 'Switch Resources If Possible' off shift rule for secondary resources no longer uses Delay epsilon steps.</ChangeDescription>
          <ChangeDescription Version="231">Version 11.188: Added new 'Immediately Try Seize' and 'Immediately Try Allocate When Released' options for the server and secondary resources.</ChangeDescription>
          <ChangeDescription Version="234">Version 11.190: Added new resource efficiency related properties.</ChangeDescription>
          <ChangeDescription Version="235">Version 11.191: Exposed new resource efficiency related properties.</ChangeDescription>
          <ChangeDescription Version="236">Version 11.192: Added new Secondary Resources -&gt; For Processing -&gt; Repeat Group option. Renamed 'SecondaryResourceForProcessingImmediatelyTrySeize' property to 'SecondaryResourcesForProcessingImmediatelyTrySeize'. Renamed 'SecondaryResourceForProcessingImmediatelyTryAllocateWhenReleased' property to 'SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased'.</ChangeDescription>
          <ChangeDescription Version="242">Version 11.192: Renamed 'SecondaryResourceForProcessingOffShiftRule' property to 'SecondaryResourcesForProcessingOffShiftRule'. Added 'Resource Efficiency' and 'Immediately Try Seize' properties to 'Secondary Resources -&gt; Other Resource Seizes' repeat groups. Added 'Immediately Try Allocate When Released' property to 'Secondary Resources -&gt; Other Resource Releases' repeat groups</ChangeDescription>
          <ChangeDescription Version="243">Version 11.193: Task Material Requirements - Optional 'Lot ID' property if producing or consuming material from an inventory site.</ChangeDescription>
          <ChangeDescription Version="247">Version 11.194: For greater compatibility with standard Overall Equipment Effectiveness (OEE) definition, changed the utilization calculation setting of the 'Setup' &amp; 'OffShiftSetup' resource states from IncludeUnitsAllocated to ExcludeUnitsAllocated. Secondary Resources - Added 'Skip Requirement If' property to optionally skip a secondary resource requirement. Secondary Resources -&gt; Other Resource Releases properties - Renamed 'Release Condition' properties to 'Selection Condition'. Task Material Requirements - Added 'Skip Requirement If' property to optionally skip a material requirement. Deprecated the Task Material Requirements -&gt; Production Delay Time property.</ChangeDescription>
          <ChangeDescription Version="249">Version 11.195: Misc property display category changes. Secondary Resources -&gt; Other Resource Seizes/Releases -&gt; Added 'Skip Seize/Release If' Properties.</ChangeDescription>
          <ChangeDescription Version="250">Version 11.198: Task Material Requirements - Added 'Must Simultaneously Consume' option.</ChangeDescription>
          <ChangeDescription Version="251">Version 11.199: Fixes to 'Switch Resources If Possible' off shift rule for secondary resources.</ChangeDescription>
          <ChangeDescription Version="252">Version 11.203: Added 'Seize Constraint Logic' property.</ChangeDescription>
          <ChangeDescription Version="254">Version 11.204: PerformProcessingTask process logic - Added ProcessingTaskToken.ExpectedSetupTime state assignment to get an expected setup time. Secondary Resource Requirements -&gt; Renamed 'SelectionExpression' properties to 'SelectionValueExpression'.</ChangeDescription>
          <ChangeDescription Version="256">Version 12.207: Renamed secondary resource-related properties 'ObjectType', 'ObjectName', 'ObjectListName', 'NumberOfObjects', &amp; 'UnitsPerObject' to 'ResourceType', 'ResourceName', 'ResourceListName', 'NumberOfResources',.&amp; 'UnitsPerResource' respectively.</ChangeDescription>
          <ChangeDescription Version="257">Version 12.212: Required update due to BasicNode and TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="258">Version 12.216: 'Units Per Resource' properties can now be specified as a candidate resource-dependent value.</ChangeDescription>
          <ChangeDescription Version="260">Version 14.225: Updated External View graphics to rotate with object.</ChangeDescription>
          <ChangeDescription Version="262">Version 14.231: Required update due to TransferNode object update.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="124" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
          <ChangeStringReplacement Version="128" RegularExpressionPattern="(^|[^\w_])(?i:ProcessedAddOnProcess)([^\w_]|$)" ReplacementString="$1AfterProcessingAddOnProcess$2" />
        </ChangeStringReplacements>
        <Lists>
          <StringList Name="ResourceStateName">
            <Items>
              <Item Value="Starved" />
              <Item Value="Processing" />
              <Item Value="Blocked" />
              <Item Value="Failed" />
              <Item Value="OffShift" />
              <Item Value="FailedProcessing" />
              <Item Value="OffShiftProcessing" />
              <Item Value="Setup" />
              <Item Value="OffShiftSetup" />
            </Items>
          </StringList>
          <StringList Name="OffShiftRuleName">
            <Items>
              <Item Value="SuspendProcessing" />
              <Item Value="FinishWorkAlreadyStarted" />
              <Item Value="SwitchResourcesIfPossible" />
            </Items>
          </StringList>
          <StringList Name="OnBalkingAssignConditionType">
            <Items>
              <Item Value="BalkingEnteringInputBuffer" />
              <Item Value="BalkingEnteringOutputBuffer" />
              <Item Value="CustomCondition" />
            </Items>
          </StringList>
          <StringList Name="OnRenegingAssignConditionType">
            <Items>
              <Item Value="RenegingFromInputBuffer" />
              <Item Value="RenegingFromOutputBuffer" />
              <Item Value="CustomCondition" />
            </Items>
          </StringList>
          <StringList Name="TaskStateAssignmentTrigger">
            <Items>
              <Item Value="TaskReady" />
              <Item Value="StartingTask" />
              <Item Value="FinishedTask" />
            </Items>
          </StringList>
          <StringList Name="ServerFailureType">
            <Items>
              <Item Value="NoFailures" />
              <Item Value="CalendarTimeBased" />
              <Item Value="ProcessingCountBased" />
              <Item Value="EventCountBased" />
              <Item Value="ProcessingTimeBased" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="Process Logic/Other Processing Options" Description="Process Logic/Other Processing Options" InitiallyExpanded="False" />
            <Category Name="Buffer Logic" Description="Buffer Logic" InitiallyExpanded="False" />
            <Category Name="Buffer Logic/Input Buffer" Description="Input Buffer Logic" />
            <Category Name="Buffer Logic/Input Buffer/Balking &amp; Reneging Options" Description="Input Buffer Balking &amp; Reneging Options" InitiallyExpanded="False" />
            <Category Name="Buffer Logic/Output Buffer" Description="Output Buffer Logic" />
            <Category Name="Buffer Logic/Output Buffer/Balking &amp; Reneging Options" Description="Output Buffer Balking &amp; Reneging Options" InitiallyExpanded="False" />
            <Category Name="Reliability Logic" Description="Reliability Logic" InitiallyExpanded="False" />
            <Category Name="Table Row Referencing" Description="Optional Table Row Reference Actions" InitiallyExpanded="False" />
            <Category Name="Table Row Referencing/Before Processing" Description="Table Row Reference Actions Before Processing" InitiallyExpanded="False" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Secondary Resources" Description="Optional Secondary Resource Requirements" InitiallyExpanded="False" />
            <Category Name="Secondary Resources/For Processing" Description="Secondary Resources/For Processing" />
            <Category Name="Secondary Resources/For Processing/Required Quantity &amp; Constraints" Description="Secondary Resources/For Processing/Required Quantity &amp; Constraints" InitiallyExpanded="False" />
            <Category Name="Secondary Resources/For Processing/Advanced Options" Description="Secondary Resources/For Processing/Advanced Options" InitiallyExpanded="False" />
            <Category Name="Secondary Resources/Other Resource Seizes" Description="Secondary Resources/Other Resource Seizes" InitiallyExpanded="False" />
            <Category Name="Secondary Resources/Other Resource Releases" Description="Secondary Resources/Other Resource Releases" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Buffer Costs" Description="Buffer Costs" InitiallyExpanded="False" />
            <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Deprecated Properties" Description="Advanced Options/Deprecated Properties" InitiallyExpanded="False" />
          </Categories>
          <ExpressionProperty Name="TransferInTime" DisplayName="Transfer-In Time" Description="The time required to transfer an entity into this object." Category="Process Logic" DefaultValue="0.0" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <EnumProperty Name="ProcessType" DisplayName="Process Type" Description="The method used to model the processing of an entity." Category="Process Logic" DefaultValue="Specific Time" NullString="null" EnumType="TaskProcessType">
            <Captions>
              <Caption Value="SpecificTime" Display="Specific Time" />
              <Caption Value="TaskSequence" Display="Task Sequence" />
              <Caption Value="ProcessName" Display="" Visible="False" />
              <Caption Value="Submodel" Display="" Visible="False" />
              <Caption Value="SequenceDependentSetup" Display="" Visible="False" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="ProcessingTime" DisplayName="Processing Time" Description="The time required to process an entity." Category="Process Logic" DefaultValue="Random.Triangular(.1,.2,.3)" NullString="null" UnitType="Time" DefaultUnits="Minutes">
            <Switch Property="ProcessType" Value="SpecificTime" />
          </ExpressionProperty>
          <RepeatingProperty Name="ProcessingTasks" DisplayName="Processing Tasks" Description="The set of tasks required to process an entity." Category="Process Logic" Required="False" NullString="null">
            <Switch Property="ProcessType" Value="TaskSequence" />
            <PropertyDefinitions>
              <Categories>
                <Category Name="Task Information" Description="Task Information" />
                <Category Name="Resource Requirements" Description="Resource Requirements" InitiallyExpanded="False" />
                <Category Name="Resource Requirements/Required Quantity &amp; Constraints" Description="Resource Requirements/Required Quantity &amp; Constraints" InitiallyExpanded="False" />
                <Category Name="Resource Requirements/Advanced Options" Description="Resource Requirements/Advanced Options" InitiallyExpanded="False" />
                <Category Name="Material Requirements" Description="Material Requirements" InitiallyExpanded="False" />
                <Category Name="Material Requirements/Required Quantity &amp; Constraints" Description="Material Requirements/Required Quantity &amp; Constraints" InitiallyExpanded="False" />
                <Category Name="Material Requirements/Advanced Options" Description="Material Requirements/Advanced Options" InitiallyExpanded="False" />
                <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
                <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
              </Categories>
              <IntegerProperty Name="TaskIDNumber" DisplayName="ID Number" Description="Integer number used to identify the task in the Immediate Predecessors or Immediate Successors field of another task." Category="Task Information" DefaultValue="1" NullString="null">
                <Switch Property="ProcessingTaskPrecedenceMethod" Comparison="NotEqual" Value="SequenceNumberMethod" />
              </IntegerProperty>
              <SequenceNumberProperty Name="TaskSequenceNumber" DisplayName="Sequence Number" Description="Sequence number used to define the task precedence constraints. To model a task sequence that is simply a serially ordered set of tasks, define the tasks with increasing sequence numbers (e.g., the first task is numbered '10', the second task is numbered '20', and so forth). Tasks with identical sequence numbers will be performed in parallel.&#xD;&#xA;&#xD;&#xA;For a more in-depth discussion on task sequence numbering including examples of how to model parallel subsequences, please refer to the Task Sequence element documentation." Category="Task Information" DefaultValue="10" Required="False" NullString="null">
                <Switch Property="ProcessingTaskPrecedenceMethod" Value="SequenceNumberMethod" />
              </SequenceNumberProperty>
              <StringProperty Name="TaskName" DisplayName="Name" Description="Name field for the task." Category="Task Information" Required="False" NullString="null" />
              <EnumProperty Name="TaskBranchType" DisplayName="Branch Type" Description="Indicates whether the task is always performed, or whether it is instead treated as the first task of a conditional or probabilistic branch in the process workflow.&#xD;&#xA;&#xD;&#xA;If the branch type is ‘Conditional’, then the task is performed if the specified logical condition evaluates to True. Otherwise, the task is cancelled.&#xD;&#xA;&#xD;&#xA;The ‘Probabilistic’ branch type may be used to identify the task as one of possibly several mutually exclusive alternatives at a probabilistic decision point. The sum of the branch probabilities at a probabilistic decision point cannot be greater than one.&#xD;&#xA;&#xD;&#xA;If the branch type is ‘Independent Probabilistic’, then the task’s specified probability is independent of and thus not affected by other probabilistic branching. For example, if a decision point has two task branches each with an ‘independent’ probability of 0.5 (50% chance), then that indicates either, both, or neither of the branches might be required to occur. And the probability of both branches being required is (0.5)*(0.5) = 0.25 (25% chance)." Category="Task Information" DefaultValue="Always" Required="False" NullString="null" EnumType="TaskBranchType">
                <Captions>
                  <Caption Value="IndependentProbabilistic" Display="Independent Probabilistic" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="TaskConditionOrProbability" DisplayName="Condition Or Probability" Description="The branch condition or probability specified as an expression. If a condition then enter the logical condition. If a probability then enter the chance of performing the task as a value between 0.0 (0%) and 1.0 (100%)." Category="Task Information" DefaultValue="0.0" Required="False" NullString="null">
                <Switch Property="TaskBranchType" Comparison="NotEqual" Value="Always" />
              </ExpressionProperty>
              <EnumProperty Name="TaskProcessType" DisplayName="Process Type" Description="The method used to model the processing of the task." Category="Task Information" DefaultValue="Specific Time" NullString="null" EnumType="TaskProcessType">
                <Captions>
                  <Caption Value="SpecificTime" Display="Specific Time" />
                  <Caption Value="TaskSequence" Display="" Visible="False" />
                  <Caption Value="ProcessName" Display="Process Name" />
                  <Caption Value="SequenceDependentSetup" Display="Sequence Dependent Setup" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="TaskProcessingTime" DisplayName="Processing Time" Description="The time required to perform the task." Category="Task Information" DefaultValue="Random.Triangular(.1,.2,.3)" NullString="null" UnitType="Time" DefaultUnits="Minutes">
                <Switch Property="TaskProcessType" Value="SpecificTime" />
              </ExpressionProperty>
              <ElementProperty Name="TaskProcessName" DisplayName="Process Name" Description="The name of the process that will be executed in order to perform the task. The task will be considered finished once this invoked process has ended." Category="Task Information" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process">
                <Switch Property="TaskProcessType" Value="ProcessName" />
              </ElementProperty>
              <EnumProperty Name="TaskSubmodelEntityCreationMethod" DisplayName="Submodel Entity Creation Method" Description="The method used to create an entity that will be sent to some other distinct part of the overall model. The task will be considered finished once this created submodel entity has ended its processing (i.e., been destroyed).&#xD;&#xA;&#xD;&#xA;If copying the original entity's attributes, then all possible state values and table references will be copied from the original entity to the created submodel entity." Category="Task Information" DefaultValue="Create New (No Copying)" NullString="null" EnumType="CreateType">
                <Switch Property="TaskProcessType" Value="Submodel" />
                <Captions>
                  <Caption Value="NewObject" Display="Create New (No Copying)" />
                  <Caption Value="CopyParentObject" Display="" Visible="False" />
                  <Caption Value="CopyAssociatedObject" Display="Copy Original Entity Attributes" />
                  <Caption Value="CopySpecificObject" Display="" Visible="False" />
                </Captions>
              </EnumProperty>
              <DynamicObjectInstanceProperty Name="TaskSubmodelEntityType" DisplayName="Submodel Entity Type" Description="The entity type of the created submodel entity." Category="Task Information" DefaultValue="Same As Original Entity" Required="False" NullString="Same As Original Entity" UseDefaultEntity="False" ValidObjectType="Agent" LocationType="Cartesian">
                <Switch Property="TaskProcessType" Value="Submodel" />
              </DynamicObjectInstanceProperty>
              <NodeProperty Name="TaskSubmodelStartingNode" DisplayName="Submodel Starting Node" Description="The facility node location that the created submodel entity will be sent to in order to start its processing." Category="Task Information" Required="False" NullString="null" ValidObjectType="Node" LocationType="Cartesian">
                <Switch Property="TaskProcessType" Value="Submodel" />
              </NodeProperty>
              <StateProperty Name="TaskSaveOriginalEntityReference" DisplayName="Save Original Entity Reference" Description="Optional entity reference state variable to save a reference to the original entity being processed at the server. Typically is a state variable defined on the created submodel entity, to allow easy access by that entity to the original entity's attributes." Category="Task Information" Required="False" NullString="null" ReferenceType="ObjectOrElementReferenceState" IsAssignable="True">
                <Switch Property="TaskProcessType" Value="Submodel" />
              </StateProperty>
              <ElementProperty Name="TaskChangeoverLogicName" DisplayName="Changeover Logic Name" Description="The name of the Changeover Logic element used to determine any sequence dependent setup times.&#xD;&#xA;&#xD;&#xA;Go to Definitions-&gt;Elements to add a new Changeover Logic element to the model." Category="Task Information" Required="False" NullString="null" Type="ChangeoverLogic">
                <Switch Property="TaskProcessType" Value="SequenceDependentSetup" />
              </ElementProperty>
              <EnumProperty Name="TaskResourceEfficiencyRule" DisplayName="Resource Efficiency Rule" Description="The processing rule used to alter the rate at which the task is performed if there are seized resources with defined efficiency values. The actual task duration is the planned task duration divided by the efficiency.&#xD;&#xA;&#xD;&#xA;If the rule is ‘None’, then seized resource efficiency is ignored.&#xD;&#xA;&#xD;&#xA;If the rule is ‘Average’, then the average seized resource efficiency value is used.&#xD;&#xA;&#xD;&#xA;If the rule is ‘Count’, then the number of seized resources with a defined efficiency value is used.&#xD;&#xA;&#xD;&#xA;If the rule is ‘Maximum’, then the largest efficiency value is used.&#xD;&#xA;&#xD;&#xA;If the rule is ‘Minimum’, then the smallest efficiency value is used.&#xD;&#xA;&#xD;&#xA;If the rule is ‘Sum’, then the sum of the seized resource efficiency values is used." Category="Task Information" DefaultValue="Minimum" NullString="null" EnumType="AggregateEfficiencyType">
                <Switch Property="TaskProcessType" Value="SpecificTime, SequenceDependentSetup" />
              </EnumProperty>
              <TaskDependencyProperty Name="TaskImmediatePredecessors" DisplayName="Immediate Predecessors" Description="Lists the ID numbers of the tasks which must be finished or cancelled before this task can start. To specify more than one predecessor, enter multiple task ID numbers separated by commas." Category="Task Information" Required="False" NullString="null">
                <Switch Property="ProcessingTaskPrecedenceMethod" Value="ImmediatePredecessorsMethod" />
              </TaskDependencyProperty>
              <TaskDependencyProperty Name="TaskImmediateSuccessors" DisplayName="Immediate Successors" Description="Lists the ID numbers of the tasks which can't start until this task is finished or cancelled. To specify more than one successor, enter multiple task ID numbers separated by commas." Category="Task Information" Required="False" NullString="null">
                <Switch Property="ProcessingTaskPrecedenceMethod" Value="ImmediateSuccessorsMethod" />
              </TaskDependencyProperty>
              <EnumProperty Name="TaskAutoCancelTrigger" DisplayName="Auto Cancel Trigger" Description="Event type that will trigger an automatic cancellation of the task.&#xD;&#xA;&#xD;&#xA;The default setting is 'All Immediate Predecessors Cancelled', which indicates the task will be automatically cancelled if all its immediate predecessors in the task sequence are cancelled. This default setting is recommended if you want conditional or probabilistic branching to automatically cancel all tasks in unselected branches.&#xD;&#xA;&#xD;&#xA;For a more in-depth discussion of this option including examples, please refer to the Task Sequence element documentation." Category="Task Information" DefaultValue="All Immediate Predecessors Cancelled" Required="False" NullString="null" EnumType="TaskAutoCancelTrigger">
                <Captions>
                  <Caption Value="AllImmediatePredecessorsCancelled" Display="All Immediate Predecessors Cancelled" />
                </Captions>
              </EnumProperty>
              <EnumProperty Name="TaskResourceRequirementsResourceType" DisplayName="Resource Type" Description="The method for specifying the resource object(s) to seize." Category="Resource Requirements" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="TaskResourceRequirementsResourceName" DisplayName="Resource Name" Description="The name of the resource object to seize." Category="Resource Requirements" Required="False" NullString="null" FilterMode="Resources" LocationType="Cartesian">
                <Switch Property="TaskResourceRequirementsResourceType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="TaskResourceRequirementsResourceListName" DisplayName="Resource List name" Description="The name of the object list from which to select the resource object(s) to seize." Category="Resource Requirements" Required="False" NullString="null" ListType="Object">
                <Switch Property="TaskResourceRequirementsResourceType" Value="FromList" />
              </ListNameProperty>
              <EnumProperty Name="TaskResourceRequirementsSelectionGoal" DisplayName="Selection Goal" Description="The rule used to select a resource object from multiple candidates." Category="Resource Requirements" DefaultValue="Preferred Order" NullString="null" EnumType="SeizeSelectionGoal">
                <Switch Property="TaskResourceRequirementsResourceType" Comparison="NotEqual" Value="ParentObject" />
                <Captions>
                  <Caption Value="SmallestDistance" Display="Smallest Distance" />
                  <Caption Value="LargestDistance" Display="Largest Distance" />
                  <Caption Value="PreferredOrder" Display="Preferred Order" />
                  <Caption Value="SmallestValue" Display="Smallest Value" />
                  <Caption Value="LargestValue" Display="Largest Value" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="TaskResourceRequirementsSelectionValueExpression" DisplayName="Value Expression" Description="The expression used to get the value for each candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Resource Requirements" DefaultValue="Candidate.Object.Capacity.Remaining" Required="False" Parent="TaskResourceRequirementsSelectionGoal" NullString="null" SupportForeign="True">
                <Switch Property="TaskResourceRequirementsSelectionGoal" Value="SmallestValue, LargestValue" />
              </ExpressionProperty>
              <EnumProperty Name="TaskResourceRequirementsRequestMove" DisplayName="Request Move" Description="Indicates whether a move to a specified node will be requested from the seized resource(s). The task will not be able to start until arrival of the resource(s) at the node location." Category="Resource Requirements" DefaultValue="None" NullString="null" EnumType="SeizeRequestVisitType">
                <Captions>
                  <Caption Value="ToNode" Display="To Node" />
                </Captions>
              </EnumProperty>
              <NodeProperty Name="TaskResourceRequirementsDestinationNode" DisplayName="Destination Node" Description="The name of the destination node that the seized resource(s) will be requested to move to." Category="Resource Requirements" Required="False" Parent="TaskResourceRequirementsRequestMove" NullString="null" ValidObjectType="Node" LocationType="Cartesian">
                <Switch Property="TaskResourceRequirementsRequestMove" Value="ToNode" />
              </NodeProperty>
              <ListProperty Name="TaskResourceRequirementsOffShiftRule" DisplayName="Off Shift Rule" Description="The processing rule used if a resource is at the end of a shift because of its specified work schedule.&#xD;&#xA;&#xD;&#xA;Suspend Processing - The processing of the task will be immediately suspended. Processing will resume at the start of the resource’s next shift.&#xD;&#xA;&#xD;&#xA;Finish Work Already Started - The processing of the task will be allowed to continue until finished. The resource will not be allowed to accept any new work.&#xD;&#xA;&#xD;&#xA;Switch Resources If Possible - The processing of the task will be immediately suspended. The affected entity will then try to resume the task’s processing as soon as possible by releasing the resource and seizing another available one that satisfies the same task resource requirements.&#xD;&#xA;&#xD;&#xA;NOTE: This property setting may vary from task to task but not from resource requirement to resource requirement for the same task. Thus, if using a table driven approach to define task sequence data, the value of this property may only be specified as a constant or by referencing a column in the table that defines each individual processing task." Category="Resource Requirements" DefaultValue="Suspend Processing" NullString="null" List="OffShiftRuleName">
                <Captions>
                  <Caption Value="SuspendProcessing" Display="Suspend Processing" />
                  <Caption Value="FinishWorkAlreadyStarted" Display="Finish Work Already Started" />
                  <Caption Value="SwitchResourcesIfPossible" Display="Switch Resources If Possible" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="TaskResourceRequirementsNumberOfResources" DisplayName="Number Of Resources" Description="The number of individual resource objects to seize capacity units of." Category="Resource Requirements/Required Quantity &amp; Constraints" DefaultValue="1" NullString="null">
                <Switch Property="TaskResourceRequirementsResourceType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ExpressionProperty Name="TaskResourceRequirementsUnitsPerResource" DisplayName="Units Per Resource" Description="The number of capacity units to seize per candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Resource Requirements/Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="TaskResourceRequirementsSelectionCondition" DisplayName="Selection Condition" Description="Optional condition evaluated for each candidate resource that must be true for the resource to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Resource Requirements/Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="TaskResourceRequirementsResourceEfficiency" DisplayName="Resource Efficiency" Description="Optional value that can alter the rate at which the task is performed using the seized resource(s), expressed as a fraction. The actual task duration is the planned task duration divided by the efficiency. Hence, an efficiency value greater than 1 shortens the time and a value less than 1 lengthens the time.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Set this property to blank to declare the resource efficiency as undefined." Category="Resource Requirements/Required Quantity &amp; Constraints" DefaultValue="1.0" Required="False" NullString="null" SupportForeign="True" />
              <BooleanProperty Name="TaskResourceRequirementsMustSimultaneouslySeize" DisplayName="Must Simultaneously Seize" Description="If multiple resources are required for the task, indicates whether all of the resources must be available before any can be seized.&#xD;&#xA;&#xD;&#xA;NOTE: This property setting may vary from task to task but not from resource requirement to resource requirement for the same task. Thus, if using a table driven approach to define task sequence data, the value of this property may only be specified as a constant or by referencing a column in the table that defines each individual processing task." Category="Resource Requirements/Required Quantity &amp; Constraints" DefaultValue="False" NullString="null" />
              <BooleanProperty Name="TaskResourceRequirementsImmediatelyTrySeize" DisplayName="Immediately Try Seize" Description="Indicates whether to immediately try seizing the task resource requirements before the execution of any other simulation logic in the system and, if successful, skipping the resource allocation queues.&#xD;&#xA;&#xD;&#xA;Setting this property to False will just insert the seize request into the resource allocation queues. An evaluation of those queues will then be scheduled on the simulation’s current event calendar as a late priority event.&#xD;&#xA;&#xD;&#xA;NOTE: This property setting may vary from task to task but not from resource requirement to resource requirement for the same task. Thus, if using a table driven approach to define task sequence data, the value of this property may only be specified as a constant or by referencing a column in the table that defines each individual processing task." Category="Resource Requirements/Advanced Options" DefaultValue="False" NullString="null" />
              <ExpressionProperty Name="TaskResourceRequirementsKeepReservedCondition" DisplayName="Keep Reserved If" Description="Once the task has completed and released the resource requirements, an optional condition indicating whether to keep the released resource capacity reserved for possible later reuse by the same entity. Other entities will be unable to use a reserved resource unless the reservation is cancelled.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the task resource object(s) being released (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Note that when an entity is attempting to select a resource from a group of candidates (e.g., from a list or from a population of some resource type), by default a preference will be given to select a resource that has already been reserved by that entity irrespective of the specified selection goal.&#xD;&#xA;&#xD;&#xA;Leaving this property blank (no condition) is equivalent to entering False." ComplexityLevel="Advanced" Category="Resource Requirements/Advanced Options" DefaultValue="True" Required="False" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="TaskResourceRequirementsReservationTimeout" DisplayName="Reservation Timeout" Description="If the keep reserved condition is true, then an optional wait time before automatically cancelling the reservation.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the task resource object(s) being released (e.g., Candidate.Object.Capacity)." ComplexityLevel="Advanced" Category="Resource Requirements/Advanced Options" DefaultValue="Math.Epsilon" Required="False" NullString="null" UnitType="Time" SupportForeign="True" />
              <BooleanProperty Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased" DisplayName="Immediately Try Allocate When Released" Description="Once the task has completed and released the resource requirements, indicates whether to immediately try allocating the released resource capacity to waiting seize requests before the execution of any other simulation logic in the system.&#xD;&#xA;&#xD;&#xA;Setting this property to False will skip immediate allocation. Instead, an evaluation of the resource allocation queues will be scheduled on the simulation’s current event calendar as a late priority event.&#xD;&#xA;&#xD;&#xA;NOTE: This property setting may vary from task to task but not from resource requirement to resource requirement for the same task. Thus, if using a table driven approach to define task sequence data, the value of this property may only be specified as a constant or by referencing a column in the table that defines each individual processing task." Category="Resource Requirements/Advanced Options" DefaultValue="False" NullString="null" />
              <ExpressionProperty Name="TaskResourceRequirementsSkipRequirementCondition" DisplayName="Skip Requirement If" Description="Optional condition indicating whether to skip the resource requirement. Is evaluated only once per task, at the start of execution of the underlying Seize step." Category="Resource Requirements/Advanced Options" Required="False" NullString="null" />
              <EnumProperty Name="TaskMaterialRequirementsActionType" DisplayName="Action Type" Description="The type of material-related action required." Category="Material Requirements" DefaultValue="Consume" NullString="null" EnumType="MaterialActionType" />
              <EnumProperty Name="TaskMaterialRequirementsConsumptionType" DisplayName="Consumption Type" Description="Indicates whether to consume a single material or a bill of materials. The material consumption will be required to start the processing of the task." Category="Material Requirements" DefaultValue="Material" NullString="null" EnumType="BOMActionRules">
                <Switch Property="TaskMaterialRequirementsActionType" Value="Consume" />
                <Captions>
                  <Caption Value="BillOfMaterials" Display="Bill Of Materials" />
                  <Caption Value="OperationSpecified" Display="" Visible="False" />
                </Captions>
              </EnumProperty>
              <EnumProperty Name="TaskMaterialRequirementsProductionType" DisplayName="Production Type" Description="Indicates whether to produce a single material or a bill of materials. The material production will occur after finishing the processing of the task." Category="Material Requirements" DefaultValue="Material" NullString="null" EnumType="BOMActionRules">
                <Switch Property="TaskMaterialRequirementsActionType" Value="Produce" />
                <Captions>
                  <Caption Value="BillOfMaterials" Display="Bill Of Materials" />
                  <Caption Value="OperationSpecified" Display="" Visible="False" />
                </Captions>
              </EnumProperty>
              <ElementProperty Name="TaskMaterialRequirementsMaterialName" DisplayName="Material Name" Description="The name of the material which is to be either specifically consumed or produced, or whose bill of materials is to be consumed or produced." Category="Material Requirements" Required="False" NullString="null" Type="Material" />
              <EnumProperty Name="TaskMaterialRequirementsInventorySiteType" DisplayName="Inventory Site Type" Description="Indicates the fixed object that is the inventory location. Applies only to material elements whose Location Based Inventory property is set to True.&#xD;&#xA;&#xD;&#xA;The 'ParentObject' setting may be used to indicate that the inventory site is the server, combiner, or separator." Category="Material Requirements" DefaultValue="None" NullString="null" EnumType="InventorySiteType">
                <Captions>
                  <Caption Value="AssociatedObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="TaskMaterialRequirementsSiteObjectName" DisplayName="Site Object Name" Description="The name of the fixed object that is the inventory location." Category="Material Requirements" Required="False" NullString="null" LocationType="Cartesian">
                <Switch Property="TaskMaterialRequirementsInventorySiteType" Value="SpecificObject" />
              </ObjectInstanceProperty>
              <ExpressionProperty Name="TaskMaterialRequirementsQuantity" DisplayName="Quantity" Description="The quantity to be consumed or produced." Category="Material Requirements/Required Quantity &amp; Constraints" DefaultValue="1.0" NullString="null" />
              <ExpressionProperty Name="TaskMaterialRequirementsLotID" DisplayName="Lot ID" Description="Optional string value indicating the lot identifier of the consumed or produced material." Category="Material Requirements/Required Quantity &amp; Constraints" Required="False" NullString="null" />
              <BooleanProperty Name="TaskMaterialRequirementsMustSimultaneouslyConsume" DisplayName="Must Simultaneously Consume" Description="Indicates whether all of the task's required materials must be available before any can be consumed.&#xD;&#xA;&#xD;&#xA;NOTE: This property setting may vary from task to task but not from material requirement to material requirement for the same task. Thus, if using a table driven approach to define task sequence data, the value of this property may only be specified as a constant or by referencing a column in the table that defines each individual processing task." Category="Material Requirements/Required Quantity &amp; Constraints" DefaultValue="False" NullString="null">
                <Switch Property="TaskMaterialRequirementsActionType" Value="Consume" />
              </BooleanProperty>
              <ExpressionProperty Name="TaskMaterialRequirementsProductionDelayTime" DisplayName="Production Delay Time" Description="Optional delay time after task is finished before producing the material and adding it to inventory.&#xD;&#xA;&#xD;&#xA;NOTE: This property has been deprecated. Use a Delay step or additional task instead. To edit a deprecated property, go to File-&gt;Settings-&gt;GUI-&gt;Display Deprecated Properties In Properties Window and change that setting to True." Category="Material Requirements/Advanced Options" DefaultValue="0.0" Deprecated="True" NullString="null" UnitType="Time">
                <Switch Property="TaskMaterialRequirementsActionType" Value="Produce" />
              </ExpressionProperty>
              <ExpressionProperty Name="TaskMaterialRequirementsSkipRequirementCondition" DisplayName="Skip Requirement If" Description="Optional condition indicating whether to skip the material requirement. Is evaluated only once per task, at the start of execution of the underlying Consume or Produce step." Category="Material Requirements/Advanced Options" Required="False" NullString="null" />
              <ListProperty Name="TaskStateAssignmentsTrigger" DisplayName="Assign When" Description="Indicates when to perform the state assignment.&#xD;&#xA;&#xD;&#xA;‘Task Ready’ is when all of the task’s predecessor dependencies have been satisfied and the entity is about to try seizing or consuming the resources and materials needed (if any) to perform the task.&#xD;&#xA;&#xD;&#xA;‘Starting Task’ is when all of the task's resource and material requirements (if any) have been satisfied and the processing of the task is about to begin.&#xD;&#xA;&#xD;&#xA;‘Finished Task’ is when the processing of the task has been finished." Category="State Assignments" DefaultValue="Task Ready" NullString="null" List="TaskStateAssignmentTrigger">
                <Captions>
                  <Caption Value="TaskReady" Display="Task Ready" />
                  <Caption Value="StartingTask" Display="Starting Task" />
                  <Caption Value="FinishedTask" Display="Finished Task" />
                </Captions>
              </ListProperty>
              <StateProperty Name="TaskStateAssignmentsStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="State Assignments" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="TaskStateAssignmentsNewValue" DisplayName="New Value" Description="The new value to assign." Category="State Assignments" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="TaskStateAssignmentsStateVariableName" />
              <ElementProperty Name="TaskReadyAddOnProcess" DisplayName="Task Ready" Description="Occurs when all of the task’s predecessor dependencies have been satisfied and the entity is about to try seizing or consuming the resources and materials needed (if any) to perform the task." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
              <ElementProperty Name="StartingTaskAddOnProcess" DisplayName="Starting Task" Description="Occurs when all of the task's resource and material requirements (if any) have been satisfied and the processing of the task is about to begin." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
              <ElementProperty Name="FinishedTaskAddOnProcess" DisplayName="Finished Task" Description="Occurs when the processing of the task has been finished." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="254" OldPropertyName="TaskResourceRequirementsSelectionExpression" NewPropertyName="TaskResourceRequirementsSelectionValueExpression" />
                <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsObjectType" NewPropertyName="TaskResourceRequirementsResourceType" />
                <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsObjectName" NewPropertyName="TaskResourceRequirementsResourceName" />
                <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsObjectListName" NewPropertyName="TaskResourceRequirementsResourceListName" />
                <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsNumberOfObjects" NewPropertyName="TaskResourceRequirementsNumberOfResources" />
                <PropertyReplacement Version="256" OldPropertyName="TaskResourceRequirementsUnitsPerObject" NewPropertyName="TaskResourceRequirementsUnitsPerResource" />
              </PropertyReplacements>
              <PropertyDefaultValueChanges>
                <PropertyDefaultValueChange Version="203" PropertyName="TaskResourceRequirementsOffShiftRule" OldDefaultValue="Finish Work Already Started" />
                <PropertyDefaultValueChange Version="231" PropertyName="TaskResourceRequirementsImmediatelyTrySeize" OldDefaultValue="True" />
                <PropertyDefaultValueChange Version="231" PropertyName="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased" OldDefaultValue="True" />
              </PropertyDefaultValueChanges>
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="ProcessingLoopbackBranches" DisplayName="Loopback Branches" Description="Conditional or probabilistic loopback branches in the task workflow." Category="Process Logic" Required="False" Parent="ProcessingTasks" NullString="null">
            <Switch Property="ProcessType" Value="TaskSequence" />
            <PropertyDefinitions>
              <Categories>
                <Category Name="Loopback Branch" Description="Loopback Branch" />
              </Categories>
              <IntegerProperty Name="LoopbackFromTaskIDNumber" DisplayName="From Task ID Number" Description="The task ID number that is the beginning of the loopback." Category="Loopback Branch" DefaultValue="1" Required="False" NullString="null">
                <Switch Property="ProcessingTaskPrecedenceMethod" Comparison="NotEqual" Value="SequenceNumberMethod" />
              </IntegerProperty>
              <IntegerProperty Name="LoopbackToTaskIDNumber" DisplayName="To Task ID Number" Description="The task ID number that is the end of the loopback." Category="Loopback Branch" DefaultValue="1" Required="False" NullString="null">
                <Switch Property="ProcessingTaskPrecedenceMethod" Comparison="NotEqual" Value="SequenceNumberMethod" />
              </IntegerProperty>
              <SequenceNumberProperty Name="LoopbackFromTaskSequenceNumber" DisplayName="From Task Sequence Number" Description="The task sequence number that is the beginning of the loopback." Category="Loopback Branch" DefaultValue="10" Required="False" NullString="null">
                <Switch Property="ProcessingTaskPrecedenceMethod" Value="SequenceNumberMethod" />
              </SequenceNumberProperty>
              <SequenceNumberProperty Name="LoopbackToTaskSequenceNumber" DisplayName="To Task Sequence Number" Description="The task sequence number that is the end of the loopback." Category="Loopback Branch" DefaultValue="10" Required="False" NullString="null">
                <Switch Property="ProcessingTaskPrecedenceMethod" Value="SequenceNumberMethod" />
              </SequenceNumberProperty>
              <EnumProperty Name="LoopbackBranchType" DisplayName="Branch Type" Description="Indicates whether the loopback is a conditional or probabilistic branch in the task workflow.&#xD;&#xA;&#xD;&#xA;If the branch type is 'Conditional', then the loopback occurs if the specified logical condition evaluates to True.&#xD;&#xA;&#xD;&#xA;The 'Probabilistic' branch type may be used to identify the loopback as one of possibly several mutually exclusive alternatives at a probabilistic decision point. The sum of the branch probabilities at a probabilistic decision point cannot be greater than one." Category="Loopback Branch" DefaultValue="Conditional" NullString="null" EnumType="LoopbackBranchType" />
              <ExpressionProperty Name="LoopbackConditionOrProbability" DisplayName="Condition Or Probability" Description="The branch condition or probability specified as an expression. If a condition then enter the logical condition. If a probability then enter the chance of the loopback as a value between 0.0 (0%) and 1.0 (100%)." Category="Loopback Branch" DefaultValue="0.0" NullString="null" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <EnumProperty Name="ProcessingTaskPrecedenceMethod" DisplayName="Task Precedence Method" Description="The method used to define the task precedence dependencies. Can be either by specifying task sequence numbers, specifying the immediate predecessors for each task, or specifying the immediate successors for each task." Category="Process Logic" DefaultValue="Sequence Number Method" Parent="ProcessingTasks" NullString="null" EnumType="TaskPrecedenceMethod">
            <Switch Property="ProcessType" Value="TaskSequence" />
            <Captions>
              <Caption Value="SequenceNumberMethod" Display="Sequence Number Method" />
              <Caption Value="ImmediatePredecessorsMethod" Display="Immediate Predecessors Method" />
              <Caption Value="ImmediateSuccessorsMethod" Display="Immediate Successors Method" />
            </Captions>
          </EnumProperty>
          <TableProperty Name="ProcessingTaskResourcesReferencedTableName" DisplayName="Task Resources Referenced Table Name" Description="The name of the data table to be used as the referenced data source for getting task resource requirements." Category="Process Logic" Required="False" Parent="ProcessingTasks" NullString="null">
            <Switch Property="ProcessType" Value="TaskSequence" />
          </TableProperty>
          <TableProperty Name="ProcessingTaskMaterialsReferencedTableName" DisplayName="Task Materials Referenced Table Name" Description="The name of the data table to be used as the referenced data source for getting task material requirements." Category="Process Logic" Required="False" Parent="ProcessingTasks" NullString="null">
            <Switch Property="ProcessType" Value="TaskSequence" />
          </TableProperty>
          <TableProperty Name="ProcessingTaskStateAssignmentsReferencedTableName" DisplayName="Task State Assignments Referenced Table Name" Description="The name of the data table to be used as the referenced data source for getting task state assignments." Category="Process Logic" Required="False" Parent="ProcessingTasks" NullString="null">
            <Switch Property="ProcessType" Value="TaskSequence" />
          </TableProperty>
          <ExpressionProperty Name="ProcessingTaskSequenceRandomNumberStream" DisplayName="Processing Task Sequence Random Number Stream" Description="The random number stream to be used if there is probabilistic branching in the task sequence." Category="Advanced Options" DefaultValue="0" NullString="null">
            <Switch Property="ProcessType" Value="TaskSequence" />
          </ExpressionProperty>
          <ListProperty Name="OffShiftRule" DisplayName="Off Shift Rule" Description="The processing rule used if the server is at the end of a shift because of its specified work schedule.&#xD;&#xA;&#xD;&#xA;Suspend Processing - The server will immediately suspend all processing and set its resource state to 'OffShift'. Processing will resume at the start of the next shift.&#xD;&#xA;&#xD;&#xA;Finish Work Already Started - The server will not accept any new entities but will continue processing if necessary to finish work already started. The server's resource state will be set to 'OffShiftProcessing' if processing entities during an off-shift period." Category="Process Logic" DefaultValue="Suspend Processing" NullString="null" List="OffShiftRuleName">
            <Captions>
              <Caption Value="SuspendProcessing" Display="Suspend Processing" />
              <Caption Value="FinishWorkAlreadyStarted" Display="Finish Work Already Started" />
              <Caption Value="SwitchResourcesIfPossible" Display="Switch Resources If Possible" Visible="False" />
            </Captions>
          </ListProperty>
          <EnumProperty Name="ResourceEfficiencyRule" DisplayName="Resource Efficiency Rule" Description="The processing rule used to alter the rate at which work is performed if there are seized resources with defined efficiency values. The actual work duration is the planned work duration divided by the efficiency.&#xD;&#xA;&#xD;&#xA;If the rule is ‘None’, then seized resource efficiency is ignored.&#xD;&#xA;&#xD;&#xA;If the rule is ‘Average’, then the average seized resource efficiency value is used.&#xD;&#xA;&#xD;&#xA;If the rule is ‘Count’, then the number of seized resources with a defined efficiency value is used.&#xD;&#xA;&#xD;&#xA;If the rule is ‘Maximum’, then the largest efficiency value is used.&#xD;&#xA;&#xD;&#xA;If the rule is ‘Minimum’, then the smallest efficiency value is used.&#xD;&#xA;&#xD;&#xA;If the rule is ‘Sum’, then the sum of the seized resource efficiency values is used." Category="Process Logic/Other Processing Options" DefaultValue="Minimum" NullString="null" EnumType="AggregateEfficiencyType">
            <Switch Property="ProcessType" Value="SpecificTime" />
          </EnumProperty>
          <RepeatingProperty Name="SeizeConstraintLogic" DisplayName="Seize Constraint Logic" Description="Constraint logic used to enforce additional constraints on an entity's request to seize the server.&#xD;&#xA;&#xD;&#xA;NOTE: This repeat group applies only if the server has an input buffer. Otherwise, if no input buffer, then this constraint logic will be ignored." Category="Process Logic/Other Processing Options" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Constraint Logic" Description="Constraint Logic" />
              </Categories>
              <ElementProperty Name="SeizeConstraintLogicName" DisplayName="Constraint Logic Name" Description="The name of the Constraint Logic element used to enforce additional constraints on an entity's request to seize the server." Category="Constraint Logic" Required="False" NullString="null" Type="ConstraintLogic" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <BooleanProperty Name="ImmediatelyTrySeize" DisplayName="Immediately Try Seize" Description="For an arriving entity, indicates whether to immediately try seizing the server before the execution of any other simulation logic in the system and, if successful, skipping the server’s allocation queue.&#xD;&#xA;&#xD;&#xA;Setting this property to False will just insert the seize request into the server’s allocation queue. An evaluation of that queue will then be scheduled on the simulation’s current event calendar as a late priority event.&#xD;&#xA;&#xD;&#xA;NOTE: This property setting applies only if the server has an input buffer. Otherwise, if no input buffer, then an arriving entity will always immediately try to enter the server’s processing station and seize it." Category="Process Logic/Other Processing Options" DefaultValue="False" NullString="null" />
          <BooleanProperty Name="ImmediatelyTryAllocateWhenReleased" DisplayName="Immediately Try Allocate When Released" Description="Once an entity has exited processing and released the server, indicates whether to immediately try allocating the released server capacity to waiting seize requests before the execution of any other simulation logic in the system.&#xD;&#xA;&#xD;&#xA;Setting this property to False will skip immediate allocation. Instead, an evaluation of the server’s allocation queue will be scheduled on the simulation’s current event calendar as a late priority event." Category="Process Logic/Other Processing Options" DefaultValue="True" NullString="null" />
          <IntegerProperty Name="InputBufferCapacity" DisplayName="Capacity" Description="The number of discrete entities that can be held in the buffer." Category="Buffer Logic/Input Buffer" DefaultValue="Infinity" NullString="null" />
          <EnumProperty Name="InputBufferBalkDecisionType" DisplayName="Balk Decision Type" Description="The method used by an entity to decide whether to balk at entering the buffer.&#xD;&#xA;&#xD;&#xA;If the decision type is ‘Blocked’, then an entity attempting to enter the buffer will balk if the buffer is full rather than be blocked. Or, if a zero capacity buffer, the entity will balk if its attempt to transfer directly into or out of the object is blocked." Category="Buffer Logic/Input Buffer/Balking &amp; Reneging Options" DefaultValue="None" NullString="null" EnumType="BalkEnteringDecisionType" />
          <ExpressionProperty Name="InputBufferBalkConditionOrProbability" DisplayName="Balk Condition Or Probability" Description="The balk condition or probability specified as an expression. If a probability then enter the chance of balking as a value between 0.0 (0%) and 1.0 (100%)." Category="Buffer Logic/Input Buffer/Balking &amp; Reneging Options" DefaultValue="0.0" NullString="null">
            <Switch Property="InputBufferBalkDecisionType" Comparison="GreaterThan" Value="Blocked" />
          </ExpressionProperty>
          <NodeProperty Name="InputBufferBalkNodeName" DisplayName="Balk Node Name" Description="Facility node location to send an entity that has balked at entering the buffer." Category="Buffer Logic/Input Buffer/Balking &amp; Reneging Options" DefaultValue="None (Destroy Entity)" Required="False" NullString="None (Destroy Entity)" ValidObjectType="Node" LocationType="Cartesian">
            <Switch Property="InputBufferBalkDecisionType" Comparison="NotEqual" Value="None" />
          </NodeProperty>
          <RepeatingProperty Name="InputBufferRenegeTriggers" DisplayName="Renege Triggers" Description="Optional time or event-driven triggers that can cause entities to abandon waiting in the buffer." Category="Buffer Logic/Input Buffer/Balking &amp; Reneging Options" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Renege Trigger" Description="Renege Trigger" />
                <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="InputBufferRenegeTriggerType" DisplayName="Trigger Type" Description="The type of trigger.&#xD;&#xA;&#xD;&#xA;A time based trigger can renege an entity from the buffer once a specified wait duration expires.&#xD;&#xA;&#xD;&#xA;An event based trigger can renege an entity from the buffer whenever a specified event occurs." Category="Renege Trigger" DefaultValue="Time Based" NullString="null" EnumType="RenegeTriggerType">
                <Captions>
                  <Caption Value="TimeBased" Display="Time Based" />
                  <Caption Value="EventBased" Display="Event Based" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="InputBufferRenegeWaitDuration" DisplayName="Wait Duration" Description="The wait duration until deciding whether to renege an entity from the buffer." Category="Renege Trigger" DefaultValue="0.0" NullString="null" UnitType="Time">
                <Switch Property="InputBufferRenegeTriggerType" Value="TimeBased" />
              </ExpressionProperty>
              <EventProperty Name="InputBufferRenegeTriggeringEventName" DisplayName="Triggering Event Name" Description="The name of the event whose occurrence will trigger a decision whether to renege an entity from the buffer." Category="Renege Trigger" Required="False" NullString="null">
                <Switch Property="InputBufferRenegeTriggerType" Value="EventBased" />
              </EventProperty>
              <EnumProperty Name="InputBufferRenegeDecisionType" DisplayName="Renege Decision Type" Description="The method used when the trigger has fired to decide whether to renege an entity from the buffer." Category="Renege Trigger" DefaultValue="Always" NullString="null" EnumType="RenegeDecisionType" />
              <ExpressionProperty Name="InputBufferRenegeConditionOrProbability" DisplayName="Renege Condition Or Probability" Description="The renege condition or probability specified as an expression. If a probability then enter the chance of reneging as a value between 0.0 (0%) and 1.0 (100%).&#xD;&#xA;&#xD;&#xA;NOTE: If it is necessary to check in a conditional expression whether an entity is currently waiting for a specific type of constraint, the entity ‘Queuing’ namespace provides several functions for that purpose (e.g., Entity.Queuing.IsWaitingRidePickupQueue)." Category="Renege Trigger" DefaultValue="0.0" NullString="null">
                <Switch Property="InputBufferRenegeDecisionType" Comparison="NotEqual" Value="Always" />
              </ExpressionProperty>
              <NodeProperty Name="InputBufferRenegeNodeName" DisplayName="Renege Node Name" Description="Facility node location to send a reneging entity." Category="Renege Trigger" DefaultValue="None (Destroy Entity)" Required="False" NullString="None (Destroy Entity)" ValidObjectType="Node" LocationType="Cartesian" />
              <EnumProperty Name="InputBufferRenegeTriggerStartBoundary" DisplayName="Trigger Start Boundary" Description="Indicates when the trigger becomes active for an entity occupying the buffer. Can be either immediately when the entity has entered the buffer or, alternatively, not until its transfer into the buffer has been ended (e.g., after a transfer-in time or any other entry related logic)." Category="Advanced Options" DefaultValue="Ended Transfer In" NullString="null" EnumType="RenegeTriggerStartBoundary">
                <Captions>
                  <Caption Value="EndedTransferIn" Display="Ended Transfer In" />
                </Captions>
              </EnumProperty>
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <IntegerProperty Name="OutputBufferCapacity" DisplayName="Capacity" Description="The number of discrete entities that can be held in the buffer." Category="Buffer Logic/Output Buffer" DefaultValue="Infinity" NullString="null" />
          <EnumProperty Name="OutputBufferBalkDecisionType" DisplayName="Balk Decision Type" Description="The method used by an entity to decide whether to balk at entering the buffer.&#xD;&#xA;&#xD;&#xA;If the decision type is ‘Blocked’, then an entity attempting to enter the buffer will balk if the buffer is full rather than be blocked. Or, if a zero capacity buffer, the entity will balk if its attempt to transfer directly into or out of the object is blocked." Category="Buffer Logic/Output Buffer/Balking &amp; Reneging Options" DefaultValue="None" NullString="null" EnumType="BalkEnteringDecisionType" />
          <ExpressionProperty Name="OutputBufferBalkConditionOrProbability" DisplayName="Balk Condition Or Probability" Description="The balk condition or probability specified as an expression. If a probability then enter the chance of balking as a value between 0.0 (0%) and 1.0 (100%)." Category="Buffer Logic/Output Buffer/Balking &amp; Reneging Options" DefaultValue="0.0" NullString="null">
            <Switch Property="OutputBufferBalkDecisionType" Comparison="GreaterThan" Value="Blocked" />
          </ExpressionProperty>
          <NodeProperty Name="OutputBufferBalkNodeName" DisplayName="Balk Node Name" Description="Facility node location to send an entity that has balked at entering the buffer." Category="Buffer Logic/Output Buffer/Balking &amp; Reneging Options" DefaultValue="None (Destroy Entity)" Required="False" NullString="None (Destroy Entity)" ValidObjectType="Node" LocationType="Cartesian">
            <Switch Property="OutputBufferBalkDecisionType" Comparison="NotEqual" Value="None" />
          </NodeProperty>
          <RepeatingProperty Name="OutputBufferRenegeTriggers" DisplayName="Renege Triggers" Description="Optional time or event-driven triggers that can cause entities to abandon waiting in the buffer." Category="Buffer Logic/Output Buffer/Balking &amp; Reneging Options" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Renege Trigger" Description="Renege Trigger" />
                <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="OutputBufferRenegeTriggerType" DisplayName="Trigger Type" Description="The type of trigger.&#xD;&#xA;&#xD;&#xA;A time based trigger can renege an entity from the buffer once a specified wait duration expires.&#xD;&#xA;&#xD;&#xA;An event based trigger can renege an entity from the buffer whenever a specified event occurs." Category="Renege Trigger" DefaultValue="Time Based" NullString="null" EnumType="RenegeTriggerType">
                <Captions>
                  <Caption Value="TimeBased" Display="Time Based" />
                  <Caption Value="EventBased" Display="Event Based" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="OutputBufferRenegeWaitDuration" DisplayName="Wait Duration" Description="The wait duration until deciding whether to renege an entity from the buffer." Category="Renege Trigger" DefaultValue="0.0" NullString="null" UnitType="Time">
                <Switch Property="OutputBufferRenegeTriggerType" Value="TimeBased" />
              </ExpressionProperty>
              <EventProperty Name="OutputBufferRenegeTriggeringEventName" DisplayName="Triggering Event Name" Description="The name of the event whose occurrence will trigger a decision whether to renege an entity from the buffer." Category="Renege Trigger" Required="False" NullString="null">
                <Switch Property="OutputBufferRenegeTriggerType" Value="EventBased" />
              </EventProperty>
              <EnumProperty Name="OutputBufferRenegeDecisionType" DisplayName="Renege Decision Type" Description="The method used when the trigger has fired to decide whether to renege an entity from the buffer." Category="Renege Trigger" DefaultValue="Always" NullString="null" EnumType="RenegeDecisionType" />
              <ExpressionProperty Name="OutputBufferRenegeConditionOrProbability" DisplayName="Renege Condition Or Probability" Description="The renege condition or probability specified as an expression. If a probability then enter the chance of reneging as a value between 0.0 (0%) and 1.0 (100%).&#xD;&#xA;&#xD;&#xA;NOTE: If it is necessary to check in a conditional expression whether an entity is currently waiting for a specific type of constraint, the entity ‘Queuing’ namespace provides several functions for that purpose (e.g., Entity.Queuing.IsWaitingRidePickupQueue)." Category="Renege Trigger" DefaultValue="0.0" NullString="null">
                <Switch Property="OutputBufferRenegeDecisionType" Comparison="NotEqual" Value="Always" />
              </ExpressionProperty>
              <NodeProperty Name="OutputBufferRenegeNodeName" DisplayName="Renege Node Name" Description="Facility node location to send a reneging entity." Category="Renege Trigger" DefaultValue="None (Destroy Entity)" Required="False" NullString="None (Destroy Entity)" ValidObjectType="Node" LocationType="Cartesian" />
              <EnumProperty Name="OutputBufferRenegeTriggerStartBoundary" DisplayName="Trigger Start Boundary" Description="Indicates when the trigger becomes active for an entity occupying the buffer. Can be either immediately when the entity has entered the buffer or, alternatively, not until its transfer into the buffer has been ended (e.g., after a transfer-in time or any other entry related logic)." Category="Advanced Options" DefaultValue="Ended Transfer In" NullString="null" EnumType="RenegeTriggerStartBoundary">
                <Captions>
                  <Caption Value="EndedTransferIn" Display="Ended Transfer In" />
                </Captions>
              </EnumProperty>
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ListProperty Name="FailureType" DisplayName="Failure Type" Description="Specifies whether this object has failures that affect the object's availability, and the method used to trigger the failure occurrences." Category="Reliability Logic" DefaultValue="No Failures" NullString="null" List="ServerFailureType">
            <Captions>
              <Caption Value="NoFailures" Display="No Failures" />
              <Caption Value="CalendarTimeBased" Display="Calendar Time Based" />
              <Caption Value="ProcessingCountBased" Display="Processing Count Based" />
              <Caption Value="EventCountBased" Display="Event Count Based" />
              <Caption Value="ProcessingTimeBased" Display="Processing Time Based" />
            </Captions>
          </ListProperty>
          <EventProperty Name="FailureEventName" DisplayName="Event Name" Description="The name of the event whose occurrences determine when the next failure occurs." Category="Reliability Logic" NullString="null">
            <Switch Property="FailureType" Value="EventCountBased" />
          </EventProperty>
          <ExpressionProperty Name="CountBetweenFailures" DisplayName="Count Between Failures" Description="The event or processing count between failure occurrences." Category="Reliability Logic" DefaultValue="Random.Uniform(100,200)" NullString="null">
            <Switch Property="FailureType" Value="ProcessingCountBased, EventCountBased" />
          </ExpressionProperty>
          <ExpressionProperty Name="UptimeBetweenFailures" DisplayName="Uptime Between Failures" Description="The uptime between failure occurrences." Category="Reliability Logic" DefaultValue="Random.Exponential(100)" NullString="null" UnitType="Time">
            <Switch Property="FailureType" Value="CalendarTimeBased, ProcessingTimeBased" />
          </ExpressionProperty>
          <ExpressionProperty Name="TimeToRepair" DisplayName="Time To Repair" Description="The time required to repair a failure when one occurs." Category="Reliability Logic" DefaultValue="Random.Triangular(0.5,1.0,1.5)" NullString="null" UnitType="Time">
            <Switch Property="FailureType" Comparison="NotEqual" Value="NoFailures" />
          </ExpressionProperty>
          <EnumProperty Name="TableRowReferenceBeforeProcessingActionType" DisplayName="Action Type" Description="The type of table row reference action to perform.&#xD;&#xA;&#xD;&#xA;The ‘Reference Existing Row’ action type may be used to set a reference to an existing row in a data table or sequence table. The row index into the table is specified by the Row Number property.&#xD;&#xA;&#xD;&#xA;The ‘Add New Row’ action type may be used to add a new row to an output table. A reference will be automatically set to the newly added row." Category="Table Row Referencing/Before Processing" DefaultValue="Reference Existing Row" NullString="null" EnumType="TableRowReferenceActionType">
            <Captions>
              <Caption Value="AddNewRow" Display="Add New Row" />
              <Caption Value="ReferenceExistingRow" Display="Reference Existing Row" />
            </Captions>
          </EnumProperty>
          <TableProperty Name="TableRowReferenceBeforeProcessingTableName" DisplayName="Table Name" Description="The name of the table." Category="Table Row Referencing/Before Processing" Required="False" NullString="null" />
          <ExpressionProperty Name="TableRowReferenceBeforeProcessingRowNumber" DisplayName="Row Number" Description="The one-based row index into the table." Category="Table Row Referencing/Before Processing" Required="False" NullString="null">
            <Switch Property="TableRowReferenceBeforeProcessingActionType" Value="ReferenceExistingRow" />
          </ExpressionProperty>
          <RepeatingProperty Name="AssignmentsOnEntering" DisplayName="On Entering" Description="Optional state assignments when an entity is entering the object." Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnEnteringStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnEnteringNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnEnteringStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsBeforeProcessing" DisplayName="Before Processing" Description="Optional state assignments when an entity has been allocated capacity to be processed at the object, but before entering (or ending transfer into) the object's processing station." Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsBeforeProcessingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsBeforeProcessingNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsBeforeProcessingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsAfterProcessing" DisplayName="After Processing" Description="Optional state assignments when an entity has completed its processing and is about to attempt its exit from the object's processing station." Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsAfterProcessingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsAfterProcessingNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsAfterProcessingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsBeforeExiting" DisplayName="Before Exiting" Description="Optional state assignments when an entity is ready to exit the object." Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsBeforeExitingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsBeforeExitingNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsBeforeExitingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnBalking" DisplayName="On Balking" Description="Optional state assignments when an entity is balking at entering an input or output buffer of the object." Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <ListProperty Name="AssignmentsOnBalkingAssignConditionType" DisplayName="Assign If" Description="Condition required to perform the assignment." Category="Basic Logic" DefaultValue="Balking Entering Input Buffer" NullString="null" List="OnBalkingAssignConditionType">
                <Captions>
                  <Caption Value="BalkingEnteringInputBuffer" Display="Balking Entering Input Buffer" />
                  <Caption Value="BalkingEnteringOutputBuffer" Display="Balking Entering Output Buffer" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="AssignmentsOnBalkingAssignCondition" DisplayName="Condition" Description="The condition required to perform the assignment." Category="Basic Logic" DefaultValue="0.0" Parent="AssignmentsOnBalkingAssignConditionType" NullString="null">
                <Switch Property="AssignmentsOnBalkingAssignConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <StateProperty Name="AssignmentsOnBalkingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnBalkingNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnBalkingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnReneging" DisplayName="On Reneging" Description="Optional state assignments when an entity is reneging from an input or output buffer of the object." Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <ListProperty Name="AssignmentsOnRenegingAssignConditionType" DisplayName="Assign If" Description="Condition required to perform the assignment." Category="Basic Logic" DefaultValue="Reneging From Input Buffer" NullString="null" List="OnRenegingAssignConditionType">
                <Captions>
                  <Caption Value="RenegingFromInputBuffer" Display="Reneging From Input Buffer" />
                  <Caption Value="RenegingFromOutputBuffer" Display="Reneging From Output Buffer" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="AssignmentsOnRenegingAssignCondition" DisplayName="Condition" Description="The condition required to perform the assignment." Category="Basic Logic" DefaultValue="0.0" Parent="AssignmentsOnRenegingAssignConditionType" NullString="null">
                <Switch Property="AssignmentsOnRenegingAssignConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <StateProperty Name="AssignmentsOnRenegingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnRenegingNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnRenegingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <BooleanProperty Name="SecondaryResourcesForProcessingIsRepeatGroup" DisplayName="Repeat Group" Description="Indicates whether a repeat group data structure is used to define the secondary resources for processing." Category="Secondary Resources/For Processing" DefaultValue="True" NullString="null" />
          <RepeatingProperty Name="SecondaryResourcesForProcessing" DisplayName="Resources For Processing" Description="The secondary resources required to process an entity." Category="Secondary Resources/For Processing" Required="False" NullString="null">
            <Switch Property="SecondaryResourcesForProcessingIsRepeatGroup" Value="True" />
            <PropertyDefinitions>
              <Categories>
                <Category Name="Resource Information" Description="Resource Information" />
                <Category Name="Required Quantity &amp; Constraints" Description="Required Quantity &amp; Constraints" InitiallyExpanded="False" />
                <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourcesForProcessingResourceType" DisplayName="Resource Type" Description="The method for specifying the resource object(s) to seize." Category="Resource Information" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourcesForProcessingResourceName" DisplayName="Resource Name" Description="The name of the resource object to seize." Category="Resource Information" Required="False" NullString="null" FilterMode="Resources" LocationType="Cartesian">
                <Switch Property="SecondaryResourcesForProcessingResourceType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourcesForProcessingResourceListName" DisplayName="Resource List Name" Description="The name of the object list from which to select the resource object(s) to seize." Category="Resource Information" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourcesForProcessingResourceType" Value="FromList" />
              </ListNameProperty>
              <EnumProperty Name="SecondaryResourcesForProcessingSelectionGoal" DisplayName="Selection Goal" Description="The rule used to select a resource object from multiple candidates." Category="Resource Information" DefaultValue="Preferred Order" NullString="null" EnumType="SeizeSelectionGoal">
                <Switch Property="SecondaryResourcesForProcessingResourceType" Comparison="NotEqual" Value="ParentObject" />
                <Captions>
                  <Caption Value="SmallestDistance" Display="Smallest Distance" />
                  <Caption Value="LargestDistance" Display="Largest Distance" />
                  <Caption Value="PreferredOrder" Display="Preferred Order" />
                  <Caption Value="SmallestValue" Display="Smallest Value" />
                  <Caption Value="LargestValue" Display="Largest Value" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourcesForProcessingSelectionValueExpression" DisplayName="Value Expression" Description="The expression used to get the value for each candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Resource Information" DefaultValue="Candidate.Object.Capacity.Remaining" Required="False" Parent="SecondaryResourcesForProcessingSelectionGoal" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourcesForProcessingSelectionGoal" Value="SmallestValue, LargestValue" />
              </ExpressionProperty>
              <EnumProperty Name="SecondaryResourcesForProcessingRequestMove" DisplayName="Request Move" Description="Indicates whether a move to a specified node will be requested from the seized resource(s). Processing will not be able to continue until arrival of the resources at the node location." Category="Resource Information" DefaultValue="None" NullString="null" EnumType="SeizeRequestVisitType">
                <Captions>
                  <Caption Value="ToNode" Display="To Node" />
                </Captions>
              </EnumProperty>
              <NodeProperty Name="SecondaryResourcesForProcessingDestinationNode" DisplayName="Destination Node" Description="The name of the destination node that the seized resource(s) will be requested to move to." Category="Resource Information" Required="False" Parent="SecondaryResourcesForProcessingRequestMove" NullString="null" ValidObjectType="Node" LocationType="Cartesian">
                <Switch Property="SecondaryResourcesForProcessingRequestMove" Value="ToNode" />
              </NodeProperty>
              <ExpressionProperty Name="SecondaryResourcesForProcessingNumberOfResources" DisplayName="Number Of Resources" Description="The number of individual resource objects to seize capacity units of." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" />
              <ExpressionProperty Name="SecondaryResourcesForProcessingUnitsPerResource" DisplayName="Units Per Resource" Description="The number of capacity units to seize per candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourcesForProcessingSelectionCondition" DisplayName="Selection Condition" Description="Optional condition evaluated for each candidate resource that must be true for the resource to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourcesForProcessingResourceEfficiency" DisplayName="Resource Efficiency" Description="Optional value that can alter the rate at which work is performed using the seized resource(s), expressed as a fraction. The actual work duration is the planned work duration divided by the efficiency. Hence, an efficiency value greater than 1 shortens the time and a value less than 1 lengthens the time.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Set this property to blank to declare the resource efficiency as undefined." Category="Required Quantity &amp; Constraints" DefaultValue="1.0" Required="False" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourcesForProcessingKeepReservedCondition" DisplayName="Keep Reserved If" Description="Once an entity has completed processing and released the resource requirements, an optional condition indicating whether to keep the released resource capacity reserved for possible later reuse by the same entity. Other entities will be unable to use a reserved resource unless the reservation is cancelled.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource object being released (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Note that when an entity is attempting to select a resource from a group of candidates (e.g., from a list or from a population of some resource type), by default a preference will be given to select a resource that has already been reserved by that entity irrespective of the specified selection goal.&#xD;&#xA;&#xD;&#xA;Leaving this property blank (no condition) is equivalent to entering False." Category="Advanced Options" Required="False" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourcesForProcessingReservationTimeout" DisplayName="Reservation Timeout" Description="If the keep reserved condition is true, then an optional wait time before automatically cancelling the reservation.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of resource object(s) being released (e.g., Candidate.Object.Capacity)." Category="Advanced Options" Required="False" NullString="null" UnitType="Time" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourcesForProcessingSkipRequirementCondition" DisplayName="Skip Requirement If" Description="Optional condition indicating whether to skip the resource requirement." Category="Advanced Options" Required="False" NullString="null" />
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="254" OldPropertyName="SecondaryResourcesForProcessingSelectionExpression" NewPropertyName="SecondaryResourcesForProcessingSelectionValueExpression" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourcesForProcessingObjectType" NewPropertyName="SecondaryResourcesForProcessingResourceType" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourcesForProcessingObjectName" NewPropertyName="SecondaryResourcesForProcessingResourceName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourcesForProcessingObjectListName" NewPropertyName="SecondaryResourcesForProcessingResourceListName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourcesForProcessingNumberOfObjects" NewPropertyName="SecondaryResourcesForProcessingNumberOfResources" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourcesForProcessingUnitsPerObject" NewPropertyName="SecondaryResourcesForProcessingUnitsPerResource" />
              </PropertyReplacements>
            </PropertyDefinitions>
          </RepeatingProperty>
          <EnumProperty Name="SecondaryResourceForProcessingResourceType" DisplayName="Resource Type" Description="The method for specifying the resource object(s) to seize." Category="Secondary Resources/For Processing" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
            <Switch Property="SecondaryResourcesForProcessingIsRepeatGroup" Value="False" />
            <Captions>
              <Caption Value="FromList" Display="Select From List" />
              <Caption Value="ParentObject" Visible="False" />
            </Captions>
          </EnumProperty>
          <ObjectInstanceProperty Name="SecondaryResourceForProcessingResourceName" DisplayName="Resource Name" Description="The name of the resource object to seize." Category="Secondary Resources/For Processing" Required="False" NullString="null" FilterMode="Resources" LocationType="Cartesian">
            <Switch Property="SecondaryResourceForProcessingResourceType" Value="Specific" />
          </ObjectInstanceProperty>
          <ListNameProperty Name="SecondaryResourceForProcessingResourceListName" DisplayName="Resource List Name" Description="The name of the object list from which to select the resource object(s) to seize." Category="Secondary Resources/For Processing" Required="False" NullString="null" ListType="Object">
            <Switch Property="SecondaryResourceForProcessingResourceType" Value="FromList" />
          </ListNameProperty>
          <EnumProperty Name="SecondaryResourceForProcessingSelectionGoal" DisplayName="Selection Goal" Description="The rule used to select a resource object from multiple candidates." Category="Secondary Resources/For Processing" DefaultValue="Preferred Order" NullString="null" EnumType="SeizeSelectionGoal">
            <Switch Property="SecondaryResourceForProcessingResourceType" Comparison="NotEqual" Value="ParentObject" />
            <Captions>
              <Caption Value="SmallestDistance" Display="Smallest Distance" />
              <Caption Value="LargestDistance" Display="Largest Distance" />
              <Caption Value="PreferredOrder" Display="Preferred Order" />
              <Caption Value="SmallestValue" Display="Smallest Value" />
              <Caption Value="LargestValue" Display="Largest Value" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="SecondaryResourceForProcessingSelectionValueExpression" DisplayName="Value Expression" Description="The expression used to get the value for each candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Secondary Resources/For Processing" DefaultValue="Candidate.Object.Capacity.Remaining" Required="False" Parent="SecondaryResourceForProcessingSelectionGoal" NullString="null" SupportForeign="True">
            <Switch Property="SecondaryResourceForProcessingSelectionGoal" Value="SmallestValue, LargestValue" />
          </ExpressionProperty>
          <EnumProperty Name="SecondaryResourceForProcessingRequestMove" DisplayName="Request Move" Description="Indicates whether a move to a specified node will be requested from the seized resource(s). Processing will not be able to continue until arrival of the resources at the node location." Category="Secondary Resources/For Processing" DefaultValue="None" NullString="null" EnumType="SeizeRequestVisitType">
            <Switch Property="SecondaryResourcesForProcessingIsRepeatGroup" Value="False" />
            <Captions>
              <Caption Value="ToNode" Display="To Node" />
            </Captions>
          </EnumProperty>
          <NodeProperty Name="SecondaryResourceForProcessingDestinationNode" DisplayName="Destination Node" Description="The name of the destination node that the seized resource(s) will be requested to move to." Category="Secondary Resources/For Processing" Required="False" Parent="SecondaryResourceForProcessingRequestMove" NullString="null" ValidObjectType="Node" LocationType="Cartesian">
            <Switch Property="SecondaryResourceForProcessingRequestMove" Value="ToNode" />
          </NodeProperty>
          <ListProperty Name="SecondaryResourcesForProcessingOffShiftRule" DisplayName="Off Shift Rule" Description="The processing rule used if a resource is at the end of a shift because of its specified work schedule.&#xD;&#xA;&#xD;&#xA;Suspend Processing - The processing of the entity that is using the resource will be immediately suspended. Processing will resume at the start of the resource’s next shift.&#xD;&#xA;&#xD;&#xA;Finish Work Already Started - The processing of the entity that is using the resource will be allowed to continue until finished. The resource will not be allowed to accept any new work.&#xD;&#xA;&#xD;&#xA;Switch Resources If Possible - The processing of the entity that is using the resource will be immediately suspended. The entity will then try to resume processing as soon as possible by releasing the resource and seizing another available one that satisfies the same resource requirements." Category="Secondary Resources/For Processing" DefaultValue="Suspend Processing" NullString="null" List="OffShiftRuleName">
            <Captions>
              <Caption Value="SuspendProcessing" Display="Suspend Processing" />
              <Caption Value="FinishWorkAlreadyStarted" Display="Finish Work Already Started" />
              <Caption Value="SwitchResourcesIfPossible" Display="Switch Resources If Possible" />
            </Captions>
          </ListProperty>
          <ExpressionProperty Name="SecondaryResourceForProcessingNumberOfResources" DisplayName="Number Of Resources" Description="The number of individual resource objects to seize capacity units of." Category="Secondary Resources/For Processing/Required Quantity &amp; Constraints" DefaultValue="1" NullString="null">
            <Switch Property="SecondaryResourcesForProcessingIsRepeatGroup" Value="False" />
          </ExpressionProperty>
          <ExpressionProperty Name="SecondaryResourceForProcessingUnitsPerResource" DisplayName="Units Per Resource" Description="The number of capacity units to seize per candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Secondary Resources/For Processing/Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" SupportForeign="True">
            <Switch Property="SecondaryResourcesForProcessingIsRepeatGroup" Value="False" />
          </ExpressionProperty>
          <ExpressionProperty Name="SecondaryResourceForProcessingSelectionCondition" DisplayName="Selection Condition" Description="Optional condition evaluated for each candidate resource that must be true for the resource to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Secondary Resources/For Processing/Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True">
            <Switch Property="SecondaryResourcesForProcessingIsRepeatGroup" Value="False" />
          </ExpressionProperty>
          <ExpressionProperty Name="SecondaryResourceForProcessingResourceEfficiency" DisplayName="Resource Efficiency" Description="Optional value that can alter the rate at which work is performed using the seized resource(s), expressed as a fraction. The actual work duration is the planned work duration divided by the efficiency. Hence, an efficiency value greater than 1 shortens the time and a value less than 1 lengthens the time.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Set this property to blank to declare the resource efficiency as undefined." Category="Secondary Resources/For Processing/Required Quantity &amp; Constraints" DefaultValue="1.0" Required="False" NullString="null" SupportForeign="True">
            <Switch Property="SecondaryResourcesForProcessingIsRepeatGroup" Value="False" />
          </ExpressionProperty>
          <BooleanProperty Name="SecondaryResourcesForProcessingMustSimultaneouslySeize" DisplayName="Must Simultaneously Seize" Description="If multiple resources are required, indicates whether all of the resources must be available before any can be seized." Category="Secondary Resources/For Processing/Required Quantity &amp; Constraints" DefaultValue="False" NullString="null" />
          <BooleanProperty Name="SecondaryResourcesForProcessingImmediatelyTrySeize" DisplayName="Immediately Try Seize" Description="Indicates whether to immediately try seizing the resource requirements before the execution of any other simulation logic in the system and, if successful, skipping the resource allocation queues.&#xD;&#xA;&#xD;&#xA;Setting this property to False will just insert the seize request into the resource allocation queues. An evaluation of those queues will then be scheduled on the simulation’s current event calendar as a late priority event." Category="Secondary Resources/For Processing/Advanced Options" DefaultValue="False" NullString="null" />
          <ExpressionProperty Name="SecondaryResourceForProcessingKeepReservedCondition" DisplayName="Keep Reserved If" Description="Once an entity has completed processing and released the resource requirements, an optional condition indicating whether to keep the released resource capacity reserved for possible later reuse by the same entity. Other entities will be unable to use a reserved resource unless the reservation is cancelled.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource object being released (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Note that when an entity is attempting to select a resource from a group of candidates (e.g., from a list or from a population of some resource type), by default a preference will be given to select a resource that has already been reserved by that entity irrespective of the specified selection goal.&#xD;&#xA;&#xD;&#xA;Leaving this property blank (no condition) is equivalent to entering False." Category="Secondary Resources/For Processing/Advanced Options" Required="False" NullString="null" SupportForeign="True">
            <Switch Property="SecondaryResourcesForProcessingIsRepeatGroup" Value="False" />
          </ExpressionProperty>
          <ExpressionProperty Name="SecondaryResourceForProcessingReservationTimeout" DisplayName="Reservation Timeout" Description="If the keep reserved condition is true, then an optional wait time before automatically cancelling the reservation.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of resource object(s) being released (e.g., Candidate.Object.Capacity)." Category="Secondary Resources/For Processing/Advanced Options" Required="False" NullString="null" UnitType="Time" SupportForeign="True">
            <Switch Property="SecondaryResourcesForProcessingIsRepeatGroup" Value="False" />
          </ExpressionProperty>
          <BooleanProperty Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased" DisplayName="Immediately Try Allocate When Released" Description="Once an entity has completed processing and released the resource requirements, indicates whether to immediately try allocating the released resource capacity to waiting seize requests before the execution of any other simulation logic in the system.&#xD;&#xA;&#xD;&#xA;Setting this property to False will skip immediate allocation. Instead, an evaluation of the resource allocation queues will be scheduled on the simulation’s current event calendar as a late priority event." Category="Secondary Resources/For Processing/Advanced Options" DefaultValue="False" NullString="null" />
          <ExpressionProperty Name="SecondaryResourceForProcessingSkipRequirementCondition" DisplayName="Skip Requirement If" Description="Optional condition indicating whether to skip the resource requirement." Category="Secondary Resources/For Processing/Advanced Options" Required="False" NullString="null">
            <Switch Property="SecondaryResourcesForProcessingIsRepeatGroup" Value="False" />
          </ExpressionProperty>
          <RepeatingProperty Name="SecondaryResourceSeizesOnEntering" DisplayName="On Entering" Description="Resource seizes when an entity is entering the object." Category="Secondary Resources/Other Resource Seizes" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Resource Information" Description="Resource Information" />
                <Category Name="Required Quantity &amp; Constraints" Description="Required Quantity &amp; Constraints" InitiallyExpanded="False" />
                <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceSeizesOnEnteringResourceType" DisplayName="Resource Type" Description="The method for specifying the resource object(s) to seize." Category="Resource Information" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceSeizesOnEnteringResourceName" DisplayName="Resource Name" Description="The name of the resource object to seize." Category="Resource Information" Required="False" NullString="null" FilterMode="Resources" LocationType="Cartesian">
                <Switch Property="SecondaryResourceSeizesOnEnteringResourceType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceSeizesOnEnteringResourceListName" DisplayName="Resource List Name" Description="The name of the object list from which to select the resource object(s) to seize." Category="Resource Information" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceSeizesOnEnteringResourceType" Value="FromList" />
              </ListNameProperty>
              <EnumProperty Name="SecondaryResourceSeizesOnEnteringSelectionGoal" DisplayName="Selection Goal" Description="The rule used to select a resource object from multiple candidates." Category="Resource Information" DefaultValue="Preferred Order" Required="False" NullString="null" EnumType="SeizeSelectionGoal">
                <Switch Property="SecondaryResourceSeizesOnEnteringResourceType" Comparison="NotEqual" Value="ParentObject" />
                <Captions>
                  <Caption Value="SmallestDistance" Display="Smallest Distance" />
                  <Caption Value="LargestDistance" Display="Largest Distance" />
                  <Caption Value="PreferredOrder" Display="Preferred Order" />
                  <Caption Value="SmallestValue" Display="Smallest Value" />
                  <Caption Value="LargestValue" Display="Largest Value" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringSelectionValueExpression" DisplayName="Value Expression" Description="The expression used to get the value for each candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Resource Information" DefaultValue="Candidate.Object.Capacity.Remaining" Required="False" Parent="SecondaryResourceSeizesOnEnteringSelectionGoal" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceSeizesOnEnteringSelectionGoal" Value="SmallestValue, LargestValue" />
              </ExpressionProperty>
              <EnumProperty Name="SecondaryResourceSeizesOnEnteringRequestMove" DisplayName="Request Move" Description="Indicates whether a move to a specified node will be requested from the seized resource(s). Processing will not be able to continue until arrival of the resources at the node location." Category="Resource Information" DefaultValue="None" NullString="null" EnumType="SeizeRequestVisitType">
                <Captions>
                  <Caption Value="ToNode" Display="To Node" />
                </Captions>
              </EnumProperty>
              <NodeProperty Name="SecondaryResourceSeizesOnEnteringDestinationNode" DisplayName="Destination Node" Description="The name of the destination node that the seized resource(s) will be requested to move to." Category="Resource Information" Required="False" Parent="SecondaryResourceSeizesOnEnteringRequestMove" NullString="null" ValidObjectType="Node" LocationType="Cartesian">
                <Switch Property="SecondaryResourceSeizesOnEnteringRequestMove" Value="ToNode" />
              </NodeProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringMovePriority" DisplayName="Move Priority" Description="The priority of the move request if a resource is selecting from multiple candidates." Category="Resource Information" DefaultValue="Entity.Priority" Required="False" Deprecated="True" Parent="SecondaryResourceSeizesOnEnteringRequestMove" NullString="null">
                <Switch Property="SecondaryResourceSeizesOnEnteringRequestMove" Comparison="NotEqual" Value="None" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringNumberOfResources" DisplayName="Number Of Resources" Description="The number of individual resource objects to seize capacity units of." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" />
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringUnitsPerResource" DisplayName="Units Per Resource" Description="The number of capacity units to seize per candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringSelectionCondition" DisplayName="Selection Condition" Description="Optional condition evaluated for each candidate resource that must be true for the resource to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringResourceEfficiency" DisplayName="Resource Efficiency" Description="Optional value that can alter the rate at which work is performed using the seized resource(s), expressed as a fraction. The actual work duration is the planned work duration divided by the efficiency. Hence, an efficiency value greater than 1 shortens the time and a value less than 1 lengthens the time.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Set this property to blank to declare the resource efficiency as undefined." Category="Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True" />
              <ElementProperty Name="SecondaryResourceSeizesOnEnteringOnSeizedProcess" DisplayName="On Seized Process" Description="Optional process to be executed when a resource is seized." Category="Advanced Options" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
              <ExpressionProperty Name="SecondaryResourceSeizesOnEnteringSkipSeizeCondition" DisplayName="Skip Seize If" Description="Optional condition indicating whether to skip the seize requirement." Category="Advanced Options" Required="False" NullString="null" />
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="214" OldPropertyName="SecondaryResourceSeizesOnEnteringRequestVisit" NewPropertyName="SecondaryResourceSeizesOnEnteringRequestMove" />
                <PropertyReplacement Version="214" OldPropertyName="SecondaryResourceSeizesOnEnteringNodeName" NewPropertyName="SecondaryResourceSeizesOnEnteringDestinationNode" />
                <PropertyReplacement Version="214" OldPropertyName="SecondaryResourceSeizesOnEnteringVisitPriority" NewPropertyName="SecondaryResourceSeizesOnEnteringMovePriority" />
                <PropertyReplacement Version="254" OldPropertyName="SecondaryResourceSeizesOnEnteringSelectionExpression" NewPropertyName="SecondaryResourceSeizesOnEnteringSelectionValueExpression" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesOnEnteringObjectType" NewPropertyName="SecondaryResourceSeizesOnEnteringResourceType" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesOnEnteringObjectName" NewPropertyName="SecondaryResourceSeizesOnEnteringResourceName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesOnEnteringObjectListName" NewPropertyName="SecondaryResourceSeizesOnEnteringResourceListName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesOnEnteringNumberOfObjects" NewPropertyName="SecondaryResourceSeizesOnEnteringNumberOfResources" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesOnEnteringUnitsPerObject" NewPropertyName="SecondaryResourceSeizesOnEnteringUnitsPerResource" />
              </PropertyReplacements>
            </PropertyDefinitions>
          </RepeatingProperty>
          <BooleanProperty Name="SecondaryResourceSeizesOnEnteringMustSimultaneouslySeize" DisplayName="Must Simultaneously Seize" Description="If multiple resources are required, indicates whether all of the resources must be available before any can be seized." Category="Secondary Resources/Other Resource Seizes" DefaultValue="False" Parent="SecondaryResourceSeizesOnEntering" NullString="null" />
          <BooleanProperty Name="SecondaryResourceSeizesOnEnteringImmediatelyTrySeize" DisplayName="Immediately Try Seize" Description="Indicates whether to immediately try seizing the resource requirements before the execution of any other simulation logic in the system and, if successful, skipping the resource allocation queues.&#xD;&#xA;&#xD;&#xA;Setting this property to False will just insert the seize request into the resource allocation queues. An evaluation of those queues will then be scheduled on the simulation’s current event calendar as a late priority event." Category="Secondary Resources/Other Resource Seizes" DefaultValue="True" Parent="SecondaryResourceSeizesOnEntering" NullString="null" />
          <RepeatingProperty Name="SecondaryResourceSeizesBeforeProcessing" DisplayName="Before Processing" Description="Resource seizes when an entity has been allocated capacity to be processed at the object, but before entering (or ending transfer into) the object's processing station." Category="Secondary Resources/Other Resource Seizes" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Resource Information" Description="Resource Information" />
                <Category Name="Required Quantity &amp; Constraints" Description="Required Quantity &amp; Constraints" InitiallyExpanded="False" />
                <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceSeizesBeforeProcessingResourceType" DisplayName="Resource Type" Description="The method for specifying the resource object(s) to seize." Category="Resource Information" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceSeizesBeforeProcessingResourceName" DisplayName="Resource Name" Description="The name of the resource object to seize." Category="Resource Information" Required="False" NullString="null" FilterMode="Resources" LocationType="Cartesian">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingResourceType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceSeizesBeforeProcessingResourceListName" DisplayName="Resource List Name" Description="The name of the object list from which to select the resource object(s) to seize." Category="Resource Information" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingResourceType" Value="FromList" />
              </ListNameProperty>
              <EnumProperty Name="SecondaryResourceSeizesBeforeProcessingSelectionGoal" DisplayName="Selection Goal" Description="The rule used to select a resource object from multiple candidates." Category="Resource Information" DefaultValue="Preferred Order" Required="False" NullString="null" EnumType="SeizeSelectionGoal">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingResourceType" Comparison="NotEqual" Value="ParentObject" />
                <Captions>
                  <Caption Value="SmallestDistance" Display="Smallest Distance" />
                  <Caption Value="LargestDistance" Display="Largest Distance" />
                  <Caption Value="PreferredOrder" Display="Preferred Order" />
                  <Caption Value="SmallestValue" Display="Smallest Value" />
                  <Caption Value="LargestValue" Display="Largest Value" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingSelectionValueExpression" DisplayName="Value Expression" Description="The expression used to get the value for each candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Resource Information" DefaultValue="Candidate.Object.Capacity.Remaining" Required="False" Parent="SecondaryResourceSeizesBeforeProcessingSelectionGoal" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingSelectionGoal" Value="SmallestValue, LargestValue" />
              </ExpressionProperty>
              <EnumProperty Name="SecondaryResourceSeizesBeforeProcessingRequestMove" DisplayName="Request Move" Description="Indicates whether a move to a specified node will be requested from the seized resource(s). Processing will not be able to continue until arrival of the resources at the node location." Category="Resource Information" DefaultValue="None" NullString="null" EnumType="SeizeRequestVisitType">
                <Captions>
                  <Caption Value="ToNode" Display="To Node" />
                </Captions>
              </EnumProperty>
              <NodeProperty Name="SecondaryResourceSeizesBeforeProcessingDestinationNode" DisplayName="Destination Node" Description="The name of the destination node that the seized resource(s) will be requested to move to." Category="Resource Information" Required="False" Parent="SecondaryResourceSeizesBeforeProcessingRequestMove" NullString="null" ValidObjectType="Node" LocationType="Cartesian">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingRequestMove" Value="ToNode" />
              </NodeProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingMovePriority" DisplayName="Move Priority" Description="The priority of the move request if a resource is selecting from multiple candidates." Category="Resource Information" DefaultValue="Entity.Priority" Required="False" Deprecated="True" Parent="SecondaryResourceSeizesBeforeProcessingRequestMove" NullString="null">
                <Switch Property="SecondaryResourceSeizesBeforeProcessingRequestMove" Comparison="NotEqual" Value="None" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingNumberOfResources" DisplayName="Number Of Resources" Description="The number of individual resource objects to seize capacity units of." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" />
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingUnitsPerResource" DisplayName="Units Per Resource" Description="The number of capacity units to seize per candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingSelectionCondition" DisplayName="Selection Condition" Description="Optional condition evaluated for each candidate resource that must be true for the resource to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingResourceEfficiency" DisplayName="Resource Efficiency" Description="Optional value that can alter the rate at which work is performed using the seized resource(s), expressed as a fraction. The actual work duration is the planned work duration divided by the efficiency. Hence, an efficiency value greater than 1 shortens the time and a value less than 1 lengthens the time.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Set this property to blank to declare the resource efficiency as undefined." Category="Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True" />
              <ElementProperty Name="SecondaryResourceSeizesBeforeProcessingOnSeizedProcess" DisplayName="On Seized Process" Description="Optional process to be executed when a resource is seized." Category="Advanced Options" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
              <ExpressionProperty Name="SecondaryResourceSeizesBeforeProcessingSkipSeizeCondition" DisplayName="Skip Seize If" Description="Optional condition indicating whether to skip the seize requirement." Category="Advanced Options" Required="False" NullString="null" />
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="214" OldPropertyName="SecondaryResourceSeizesBeforeProcessingRequestVisit" NewPropertyName="SecondaryResourceSeizesBeforeProcessingRequestMove" />
                <PropertyReplacement Version="214" OldPropertyName="SecondaryResourceSeizesBeforeProcessingNodeName" NewPropertyName="SecondaryResourceSeizesBeforeProcessingDestinationNode" />
                <PropertyReplacement Version="214" OldPropertyName="SecondaryResourceSeizesBeforeProcessingVisitPriority" NewPropertyName="SecondaryResourceSeizesBeforeProcessingMovePriority" />
                <PropertyReplacement Version="254" OldPropertyName="SecondaryResourceSeizesBeforeProcessingSelectionExpression" NewPropertyName="SecondaryResourceSeizesBeforeProcessingSelectionValueExpression" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesBeforeProcessingObjectType" NewPropertyName="SecondaryResourceSeizesBeforeProcessingResourceType" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesBeforeProcessingObjectName" NewPropertyName="SecondaryResourceSeizesBeforeProcessingResourceName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesBeforeProcessingObjectListName" NewPropertyName="SecondaryResourceSeizesBeforeProcessingResourceListName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesBeforeProcessingNumberOfObjects" NewPropertyName="SecondaryResourceSeizesBeforeProcessingNumberOfResources" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesBeforeProcessingUnitsPerObject" NewPropertyName="SecondaryResourceSeizesBeforeProcessingUnitsPerResource" />
              </PropertyReplacements>
            </PropertyDefinitions>
          </RepeatingProperty>
          <BooleanProperty Name="SecondaryResourceSeizesBeforeProcessingMustSimultaneouslySeize" DisplayName="Must Simultaneously Seize" Description="If multiple resources are required, indicates whether all of the resources must be available before any can be seized." Category="Secondary Resources/Other Resource Seizes" DefaultValue="False" Parent="SecondaryResourceSeizesBeforeProcessing" NullString="null" />
          <BooleanProperty Name="SecondaryResourceSeizesBeforeProcessingImmediatelyTrySeize" DisplayName="Immediately Try Seize" Description="Indicates whether to immediately try seizing the resource requirements before the execution of any other simulation logic in the system and, if successful, skipping the resource allocation queues.&#xD;&#xA;&#xD;&#xA;Setting this property to False will just insert the seize request into the resource allocation queues. An evaluation of those queues will then be scheduled on the simulation’s current event calendar as a late priority event." Category="Secondary Resources/Other Resource Seizes" DefaultValue="True" Parent="SecondaryResourceSeizesBeforeProcessing" NullString="null" />
          <RepeatingProperty Name="SecondaryResourceSeizesAfterProcessing" DisplayName="After Processing" Description="Resource List Name" Category="Secondary Resources/Other Resource Seizes" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Resource Information" Description="Resource Information" />
                <Category Name="Required Quantity &amp; Constraints" Description="Required Quantity &amp; Constraints" InitiallyExpanded="False" />
                <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceSeizesAfterProcessingResourceType" DisplayName="Resource Type" Description="The method for specifying the resource object(s) to seize." Category="Resource Information" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceSeizesAfterProcessingResourceName" DisplayName="Resource Name" Description="The name of the resource object to seize." Category="Resource Information" Required="False" NullString="null" FilterMode="Resources" LocationType="Cartesian">
                <Switch Property="SecondaryResourceSeizesAfterProcessingResourceType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceSeizesAfterProcessingResourceListName" DisplayName="Resource List Name" Description="The name of the object list from which to select the resource object(s) to seize." Category="Resource Information" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceSeizesAfterProcessingResourceType" Value="FromList" />
              </ListNameProperty>
              <EnumProperty Name="SecondaryResourceSeizesAfterProcessingSelectionGoal" DisplayName="Selection Goal" Description="The rule used to select a resource object from multiple candidates." Category="Resource Information" DefaultValue="Preferred Order" Required="False" NullString="null" EnumType="SeizeSelectionGoal">
                <Switch Property="SecondaryResourceSeizesAfterProcessingResourceType" Comparison="NotEqual" Value="ParentObject" />
                <Captions>
                  <Caption Value="SmallestDistance" Display="Smallest Distance" />
                  <Caption Value="LargestDistance" Display="Largest Distance" />
                  <Caption Value="PreferredOrder" Display="Preferred Order" />
                  <Caption Value="SmallestValue" Display="Smallest Value" />
                  <Caption Value="LargestValue" Display="Largest Value" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingSelectionValueExpression" DisplayName="Value Expression" Description="The expression used to get the value for each candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Resource Information" DefaultValue="Candidate.Object.Capacity.Remaining" Required="False" Parent="SecondaryResourceSeizesAfterProcessingSelectionGoal" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceSeizesAfterProcessingSelectionGoal" Value="SmallestValue, LargestValue" />
              </ExpressionProperty>
              <EnumProperty Name="SecondaryResourceSeizesAfterProcessingRequestMove" DisplayName="Request Move" Description="Indicates whether a move to a specified node will be requested from the seized resource(s). Processing will not be able to continue until arrival of the resources at the node location." Category="Resource Information" DefaultValue="None" NullString="null" EnumType="SeizeRequestVisitType">
                <Captions>
                  <Caption Value="ToNode" Display="To Node" />
                </Captions>
              </EnumProperty>
              <NodeProperty Name="SecondaryResourceSeizesAfterProcessingDestinationNode" DisplayName="Destination Node" Description="The name of the destination node that the seized resource(s) will be requested to move to." Category="Resource Information" Required="False" Parent="SecondaryResourceSeizesAfterProcessingRequestMove" NullString="null" ValidObjectType="Node" LocationType="Cartesian">
                <Switch Property="SecondaryResourceSeizesAfterProcessingRequestMove" Value="ToNode" />
              </NodeProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingMovePriority" DisplayName="Move Priority" Description="The priority of the move request if a resource is selecting from multiple candidates." Category="Resource Information" DefaultValue="Entity.Priority" Required="False" Deprecated="True" Parent="SecondaryResourceSeizesAfterProcessingRequestMove" NullString="null">
                <Switch Property="SecondaryResourceSeizesAfterProcessingRequestMove" Comparison="NotEqual" Value="None" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingNumberOfResources" DisplayName="Number Of Resources" Description="The number of individual resource objects to seize capacity units of." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" />
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingUnitsPerResource" DisplayName="Units Per Resource" Description="The number of capacity units to seize per candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingSelectionCondition" DisplayName="Selection Condition" Description="Optional condition evaluated for each candidate resource that must be true for the resource to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingResourceEfficiency" DisplayName="Resource Efficiency" Description="Optional value that can alter the rate at which work is performed using the seized resource(s), expressed as a fraction. The actual work duration is the planned work duration divided by the efficiency. Hence, an efficiency value greater than 1 shortens the time and a value less than 1 lengthens the time.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Set this property to blank to declare the resource efficiency as undefined." Category="Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True" />
              <ElementProperty Name="SecondaryResourceSeizesAfterProcessingOnSeizedProcess" DisplayName="On Seized Process" Description="Optional process to be executed when a resource is seized." Category="Advanced Options" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
              <ExpressionProperty Name="SecondaryResourceSeizesAfterProcessingSkipSeizeCondition" DisplayName="Skip Seize If" Description="Optional condition indicating whether to skip the seize requirement." Category="Advanced Options" Required="False" NullString="null" />
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="214" OldPropertyName="SecondaryResourceSeizesAfterProcessingRequestVisit" NewPropertyName="SecondaryResourceSeizesAfterProcessingRequestMove" />
                <PropertyReplacement Version="214" OldPropertyName="SecondaryResourceSeizesAfterProcessingNodeName" NewPropertyName="SecondaryResourceSeizesAfterProcessingDestinationNode" />
                <PropertyReplacement Version="214" OldPropertyName="SecondaryResourceSeizesAfterProcessingVisitPriority" NewPropertyName="SecondaryResourceSeizesAfterProcessingMovePriority" />
                <PropertyReplacement Version="254" OldPropertyName="SecondaryResourceSeizesAfterProcessingSelectionExpression" NewPropertyName="SecondaryResourceSeizesAfterProcessingSelectionValueExpression" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesAfterProcessingObjectType" NewPropertyName="SecondaryResourceSeizesAfterProcessingResourceType" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesAfterProcessingObjectName" NewPropertyName="SecondaryResourceSeizesAfterProcessingResourceName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesAfterProcessingObjectListName" NewPropertyName="SecondaryResourceSeizesAfterProcessingResourceListName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesAfterProcessingNumberOfObjects" NewPropertyName="SecondaryResourceSeizesAfterProcessingNumberOfResources" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceSeizesAfterProcessingUnitsPerObject" NewPropertyName="SecondaryResourceSeizesAfterProcessingUnitsPerResource" />
              </PropertyReplacements>
            </PropertyDefinitions>
          </RepeatingProperty>
          <BooleanProperty Name="SecondaryResourceSeizesAfterProcessingMustSimultaneouslySeize" DisplayName="Must Simultaneously Seize" Description="If multiple resources are required, indicates whether all of the resources must be available before any can be seized." Category="Secondary Resources/Other Resource Seizes" DefaultValue="False" Parent="SecondaryResourceSeizesAfterProcessing" NullString="null" />
          <BooleanProperty Name="SecondaryResourceSeizesAfterProcessingImmediatelyTrySeize" DisplayName="Immediately Try Seize" Description="Indicates whether to immediately try seizing the resource requirements before the execution of any other simulation logic in the system and, if successful, skipping the resource allocation queues.&#xD;&#xA;&#xD;&#xA;Setting this property to False will just insert the seize request into the resource allocation queues. An evaluation of those queues will then be scheduled on the simulation’s current event calendar as a late priority event." Category="Secondary Resources/Other Resource Seizes" DefaultValue="True" Parent="SecondaryResourceSeizesAfterProcessing" NullString="null" />
          <RepeatingProperty Name="SecondaryResourceReleasesOnEntering" DisplayName="On Entering" Description="Resource releases when an entity is entering the object." Category="Secondary Resources/Other Resource Releases" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Resource Information" Description="Resource Information" />
                <Category Name="Required Quantity &amp; Constraints" Description="Required Quantity &amp; Constraints" InitiallyExpanded="False" />
                <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceReleasesOnEnteringResourceType" DisplayName="Resource Type" Description="The method for specifying the resource object(s) to release." Category="Resource Information" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceReleasesOnEnteringResourceName" DisplayName="Resource Name" Description="The name of the resource object to release." Category="Resource Information" Required="False" NullString="null" FilterMode="Resources" LocationType="Cartesian">
                <Switch Property="SecondaryResourceReleasesOnEnteringResourceType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceReleasesOnEnteringResourceListName" DisplayName="Resource List Name" Description="The name of the object list from which to select the resource object(s) to release." Category="Resource Information" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceReleasesOnEnteringResourceType" Value="FromList" />
              </ListNameProperty>
              <EnumProperty Name="SecondaryResourceReleasesOnEnteringQuantityType" DisplayName="Quantity Type" Description="Indicates the type of resource quantity to release.&#xD;&#xA;&#xD;&#xA;Specific – Is the exact quantities entered in the Number Of Objects and Units Per Object properties.&#xD;&#xA;&#xD;&#xA;All – Is all currently seized resources of the specified resource type." Category="Required Quantity &amp; Constraints" DefaultValue="Specific" NullString="null" EnumType="ReleaseQuantityType" />
              <ExpressionProperty Name="SecondaryResourceReleasesOnEnteringNumberOfResources" DisplayName="Number Of Resources" Description="The number of individual resource objects to release capacity units of." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null">
                <Switch Property="SecondaryResourceReleasesOnEnteringQuantityType" Value="Specific" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesOnEnteringUnitsPerResource" DisplayName="Units Per Resource" Description="The number of capacity units to release per candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceReleasesOnEnteringQuantityType" Value="Specific" />
              </ExpressionProperty>
              <EnumProperty Name="SecondaryResourceReleasesOnEnteringReleaseOrder" DisplayName="Release Order" Description="The order in which to release the resources that have been seized by the entity." Category="Required Quantity &amp; Constraints" DefaultValue="First Seized First" NullString="null" EnumType="ObjectReleaseOrder">
                <Switch Property="SecondaryResourceReleasesOnEnteringResourceType" Comparison="NotEqual" Value="ParentObject" />
                <Captions>
                  <Caption Value="FirstSeizedFirst" Display="First Seized First" />
                  <Caption Value="LastSeizedFirst" Display="Last Seized First" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesOnEnteringSelectionCondition" DisplayName="Selection Condition" Description="Optional condition evaluated for each seized resource that must be true for the resource to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceReleasesOnEnteringResourceType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesOnEnteringKeepReservedCondition" DisplayName="Keep Reserved If" Description="Optional condition indicating whether to keep the released resource capacity reserved for possible later reuse by the same entity. Other entities will be unable to use a reserved resource unless the reservation is cancelled.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource object(s) being released (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Note that when an entity is attempting to select a resource from a group of candidates (e.g., from a list or from a population of some resource type), by default a preference will be given to select a resource that has already been reserved by that owner irrespective of the specified selection goal.&#xD;&#xA;&#xD;&#xA;Leaving this property blank (no condition) is equivalent to entering False." Category="Advanced Options" Required="False" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourceReleasesOnEnteringReservationTimeout" DisplayName="Reservation Timeout" Description="If the keep reserved condition is true, then an optional wait time before automatically cancelling the reservation.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the resource object(s) being released (e.g., Candidate.Object.Capacity)." Category="Advanced Options" Required="False" NullString="null" UnitType="Time" SupportForeign="True" />
              <ElementProperty Name="SecondaryResourceReleasesOnEnteringOnReleasedProcess" DisplayName="On Released Process" Description="Optional process to be executed when a resource is released." Category="Advanced Options" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
              <ExpressionProperty Name="SecondaryResourceReleasesOnEnteringSkipReleaseCondition" DisplayName="Skip Release If" Description="Optional condition indicating whether to skip the release requirement." Category="Advanced Options" Required="False" NullString="null" />
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="247" OldPropertyName="SecondaryResourceReleasesOnEnteringReleaseCondition" NewPropertyName="SecondaryResourceReleasesOnEnteringSelectionCondition" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesOnEnteringObjectType" NewPropertyName="SecondaryResourceReleasesOnEnteringResourceType" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesOnEnteringObjectName" NewPropertyName="SecondaryResourceReleasesOnEnteringResourceName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesOnEnteringObjectListName" NewPropertyName="SecondaryResourceReleasesOnEnteringResourceListName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesOnEnteringReleaseQuantityType" NewPropertyName="SecondaryResourceReleasesOnEnteringQuantityType" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesOnEnteringNumberOfObjects" NewPropertyName="SecondaryResourceReleasesOnEnteringNumberOfResources" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesOnEnteringUnitsPerObject" NewPropertyName="SecondaryResourceReleasesOnEnteringUnitsPerResource" />
              </PropertyReplacements>
            </PropertyDefinitions>
          </RepeatingProperty>
          <BooleanProperty Name="SecondaryResourceReleasesOnEnteringImmediatelyTryAllocateWhenReleased" DisplayName="Immediately Try Allocate When Released" Description="Indicates whether to immediately try allocating the released resource capacity to waiting seize requests before the execution of any other simulation logic in the system.&#xD;&#xA;&#xD;&#xA;Setting this property to False will skip immediate allocation. Instead, an evaluation of the resource allocation queues will be scheduled on the simulation’s current event calendar as a late priority event." Category="Secondary Resources/Other Resource Releases" DefaultValue="True" Parent="SecondaryResourceReleasesOnEntering" NullString="null" />
          <RepeatingProperty Name="SecondaryResourceReleasesBeforeProcessing" DisplayName="Before Processing" Description="Resource releases when an entity has been allocated capacity to be processed at the object, but before entering (or ending transfer into) the object's processing station." Category="Secondary Resources/Other Resource Releases" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Resource Information" Description="Resource Information" />
                <Category Name="Required Quantity &amp; Constraints" Description="Required Quantity &amp; Constraints" InitiallyExpanded="False" />
                <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceReleasesBeforeProcessingResourceType" DisplayName="Resource Type" Description="The method for specifying the resource object(s) to release." Category="Resource Information" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceReleasesBeforeProcessingResourceName" DisplayName="Resource Name" Description="The name of the resource object to release." Category="Resource Information" Required="False" NullString="null" FilterMode="Resources" LocationType="Cartesian">
                <Switch Property="SecondaryResourceReleasesBeforeProcessingResourceType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceReleasesBeforeProcessingResourceListName" DisplayName="Resource List Name" Description="The name of the object list from which to select the resource object(s) to release." Category="Resource Information" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceReleasesBeforeProcessingResourceType" Value="FromList" />
              </ListNameProperty>
              <EnumProperty Name="SecondaryResourceReleasesBeforeProcessingQuantityType" DisplayName="Quantity Type" Description="Indicates the type of resource quantity to release.&#xD;&#xA;&#xD;&#xA;Specific – Is the exact quantities entered in the Number Of Objects and Units Per Object properties.&#xD;&#xA;&#xD;&#xA;All – Is all currently seized resources of the specified resource type." Category="Required Quantity &amp; Constraints" DefaultValue="Specific" NullString="null" EnumType="ReleaseQuantityType" />
              <ExpressionProperty Name="SecondaryResourceReleasesBeforeProcessingNumberOfResources" DisplayName="Number Of Resources" Description="The number of individual resource objects to release capacity units of." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null">
                <Switch Property="SecondaryResourceReleasesBeforeProcessingQuantityType" Value="Specific" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesBeforeProcessingUnitsPerResource" DisplayName="Units Per Resource" Description="The number of capacity units to release per candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceReleasesBeforeProcessingQuantityType" Value="Specific" />
              </ExpressionProperty>
              <EnumProperty Name="SecondaryResourceReleasesBeforeProcessingReleaseOrder" DisplayName="Release Order" Description="The order in which to release the resources that have been seized by the entity." Category="Required Quantity &amp; Constraints" DefaultValue="First Seized First" NullString="null" EnumType="ObjectReleaseOrder">
                <Switch Property="SecondaryResourceReleasesBeforeProcessingResourceType" Comparison="NotEqual" Value="ParentObject" />
                <Captions>
                  <Caption Value="FirstSeizedFirst" Display="First Seized First" />
                  <Caption Value="LastSeizedFirst" Display="Last Seized First" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesBeforeProcessingSelectionCondition" DisplayName="Selection Condition" Description="Optional condition evaluated for each seized resource that must be true for the resource to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceReleasesBeforeProcessingResourceType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesBeforeProcessingKeepReservedCondition" DisplayName="Keep Reserved If" Description="Optional condition indicating whether to keep the released resource capacity reserved for possible later reuse by the same entity. Other entities will be unable to use a reserved resource unless the reservation is cancelled.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource object(s) being released (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Note that when an entity is attempting to select a resource from a group of candidates (e.g., from a list or from a population of some resource type), by default a preference will be given to select a resource that has already been reserved by that owner irrespective of the specified selection goal.&#xD;&#xA;&#xD;&#xA;Leaving this property blank (no condition) is equivalent to entering False." Category="Advanced Options" Required="False" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourceReleasesBeforeProcessingReservationTimeout" DisplayName="Reservation Timeout" Description="If the keep reserved condition is true, then an optional wait time before automatically cancelling the reservation.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the resource object(s) being released (e.g., Candidate.Object.Capacity)." Category="Advanced Options" Required="False" NullString="null" UnitType="Time" SupportForeign="True" />
              <ElementProperty Name="SecondaryResourceReleasesBeforeProcessingOnReleasedProcess" DisplayName="On Released Process" Description="Optional process to be executed when a resource is released." Category="Advanced Options" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
              <ExpressionProperty Name="SecondaryResourceReleasesBeforeProcessingSkipReleaseCondition" DisplayName="Skip Release If" Description="Optional condition indicating whether to skip the release requirement." Category="Advanced Options" Required="False" NullString="null" />
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="247" OldPropertyName="SecondaryResourceReleasesBeforeProcessingReleaseCondition" NewPropertyName="SecondaryResourceReleasesBeforeProcessingSelectionCondition" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesBeforeProcessingObjectType" NewPropertyName="SecondaryResourceReleasesBeforeProcessingResourceType" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesBeforeProcessingObjectName" NewPropertyName="SecondaryResourceReleasesBeforeProcessingResourceName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesBeforeProcessingObjectListName" NewPropertyName="SecondaryResourceReleasesBeforeProcessingResourceListName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesBeforeProcessingReleaseQuantityType" NewPropertyName="SecondaryResourceReleasesBeforeProcessingQuantityType" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesBeforeProcessingNumberOfObjects" NewPropertyName="SecondaryResourceReleasesBeforeProcessingNumberOfResources" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesBeforeProcessingUnitsPerObject" NewPropertyName="SecondaryResourceReleasesBeforeProcessingUnitsPerResource" />
              </PropertyReplacements>
            </PropertyDefinitions>
          </RepeatingProperty>
          <BooleanProperty Name="SecondaryResourceReleasesBeforeProcessingImmediatelyTryAllocateWhenReleased" DisplayName="Immediately Try Allocate When Released" Description="Indicates whether to immediately try allocating the released resource capacity to waiting seize requests before the execution of any other simulation logic in the system.&#xD;&#xA;&#xD;&#xA;Setting this property to False will skip immediate allocation. Instead, an evaluation of the resource allocation queues will be scheduled on the simulation’s current event calendar as a late priority event." Category="Secondary Resources/Other Resource Releases" DefaultValue="True" Parent="SecondaryResourceReleasesBeforeProcessing" NullString="null" />
          <RepeatingProperty Name="SecondaryResourceReleasesAfterProcessing" DisplayName="After Processing" Description="Resource releases when an entity has completed its processing and is about to attempt its exit from the object's processing station." Category="Secondary Resources/Other Resource Releases" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Resource Information" Description="Resource Information" />
                <Category Name="Required Quantity &amp; Constraints" Description="Required Quantity &amp; Constraints" InitiallyExpanded="False" />
                <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="SecondaryResourceReleasesAfterProcessingResourceType" DisplayName="Resource Type" Description="The method for specifying the resource object(s) to release." Category="Resource Information" DefaultValue="Specific" NullString="null" EnumType="ObjectSeizeType">
                <Captions>
                  <Caption Value="FromList" Display="Select From List" />
                  <Caption Value="ParentObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="SecondaryResourceReleasesAfterProcessingResourceName" DisplayName="Resource Name" Description="The name of the resource object to release." Category="Resource Information" Required="False" NullString="null" FilterMode="Resources" LocationType="Cartesian">
                <Switch Property="SecondaryResourceReleasesAfterProcessingResourceType" Value="Specific" />
              </ObjectInstanceProperty>
              <ListNameProperty Name="SecondaryResourceReleasesAfterProcessingResourceListName" DisplayName="Resource List Name" Description="The name of the object list from which to select the resource object(s) to release." Category="Resource Information" Required="False" NullString="null" ListType="Object">
                <Switch Property="SecondaryResourceReleasesAfterProcessingResourceType" Value="FromList" />
              </ListNameProperty>
              <EnumProperty Name="SecondaryResourceReleasesAfterProcessingQuantityType" DisplayName="Quantity Type" Description="Indicates the type of resource quantity to release.&#xD;&#xA;&#xD;&#xA;Specific – Is the exact quantities entered in the Number Of Objects and Units Per Object properties.&#xD;&#xA;&#xD;&#xA;All – Is all currently seized resources of the specified resource type." Category="Required Quantity &amp; Constraints" DefaultValue="Specific" NullString="null" EnumType="ReleaseQuantityType" />
              <ExpressionProperty Name="SecondaryResourceReleasesAfterProcessingNumberOfResources" DisplayName="Number Of Resources" Description="The number of individual resource objects to release capacity units of." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null">
                <Switch Property="SecondaryResourceReleasesAfterProcessingQuantityType" Value="Specific" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesAfterProcessingUnitsPerResource" DisplayName="Units Per Resource" Description="The number of capacity units to release per candidate resource.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" DefaultValue="1" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceReleasesAfterProcessingQuantityType" Value="Specific" />
              </ExpressionProperty>
              <EnumProperty Name="SecondaryResourceReleasesAfterProcessingReleaseOrder" DisplayName="Release Order" Description="The order in which to release the resources that have been seized by the entity." Category="Required Quantity &amp; Constraints" DefaultValue="First Seized First" NullString="null" EnumType="ObjectReleaseOrder">
                <Switch Property="SecondaryResourceReleasesAfterProcessingResourceType" Comparison="NotEqual" Value="ParentObject" />
                <Captions>
                  <Caption Value="FirstSeizedFirst" Display="First Seized First" />
                  <Caption Value="LastSeizedFirst" Display="Last Seized First" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesAfterProcessingSelectionCondition" DisplayName="Selection Condition" Description="Optional condition evaluated for each seized resource that must be true for the resource to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource objects (e.g., Candidate.Object.Capacity)." Category="Required Quantity &amp; Constraints" Required="False" NullString="null" SupportForeign="True">
                <Switch Property="SecondaryResourceReleasesAfterProcessingResourceType" Comparison="NotEqual" Value="ParentObject" />
              </ExpressionProperty>
              <ExpressionProperty Name="SecondaryResourceReleasesAfterProcessingKeepReservedCondition" DisplayName="Keep Reserved If" Description="Optional condition indicating whether to keep the released resource capacity reserved for possible later reuse by the same entity. Other entities will be unable to use a reserved resource unless the reservation is cancelled.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the candidate resource object(s) being released (e.g., Candidate.Object.Capacity).&#xD;&#xA;&#xD;&#xA;Note that when an entity is attempting to select a resource from a group of candidates (e.g., from a list or from a population of some resource type), by default a preference will be given to select a resource that has already been reserved by that owner irrespective of the specified selection goal.&#xD;&#xA;&#xD;&#xA;Leaving this property blank (no condition) is equivalent to entering False." Category="Advanced Options" Required="False" NullString="null" SupportForeign="True" />
              <ExpressionProperty Name="SecondaryResourceReleasesAfterProcessingReservationTimeout" DisplayName="Reservation Timeout" Description="If the keep reserved condition is true, then an optional wait time before automatically cancelling the reservation.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[ObjectClass].[Attribute] to reference an attribute of the resource object(s) being released (e.g., Candidate.Object.Capacity)." Category="Advanced Options" Required="False" NullString="null" UnitType="Time" SupportForeign="True" />
              <ElementProperty Name="SecondaryResourceReleasesAfterProcessingOnReleasedProcess" DisplayName="On Released Process" Description="Optional process to be executed when a resource is released." Category="Advanced Options" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
              <ExpressionProperty Name="SecondaryResourceReleasesAfterProcessingSkipReleaseCondition" DisplayName="Skip Release If" Description="Optional condition indicating whether to skip the release requirement." Category="Advanced Options" Required="False" NullString="null" />
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="247" OldPropertyName="SecondaryResourceReleasesAfterProcessingReleaseCondition" NewPropertyName="SecondaryResourceReleasesAfterProcessingSelectionCondition" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesAfterProcessingObjectType" NewPropertyName="SecondaryResourceReleasesAfterProcessingResourceType" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesAfterProcessingObjectName" NewPropertyName="SecondaryResourceReleasesAfterProcessingResourceName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesAfterProcessingObjectListName" NewPropertyName="SecondaryResourceReleasesAfterProcessingResourceListName" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesAfterProcessingReleaseQuantityType" NewPropertyName="SecondaryResourceReleasesAfterProcessingQuantityType" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesAfterProcessingNumberOfObjects" NewPropertyName="SecondaryResourceReleasesAfterProcessingNumberOfResources" />
                <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceReleasesAfterProcessingUnitsPerObject" NewPropertyName="SecondaryResourceReleasesAfterProcessingUnitsPerResource" />
              </PropertyReplacements>
            </PropertyDefinitions>
          </RepeatingProperty>
          <BooleanProperty Name="SecondaryResourceReleasesAfterProcessingImmediatelyTryAllocateWhenReleased" DisplayName="Immediately Try Allocate When Released" Description="Indicates whether to immediately try allocating the released resource capacity to waiting seize requests before the execution of any other simulation logic in the system.&#xD;&#xA;&#xD;&#xA;Setting this property to False will skip immediate allocation. Instead, an evaluation of the resource allocation queues will be scheduled on the simulation’s current event calendar as a late priority event." Category="Secondary Resources/Other Resource Releases" DefaultValue="True" Parent="SecondaryResourceReleasesAfterProcessing" NullString="null" />
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="EnteredAddOnProcess" DisplayName="Entered" Description="Occurs immediately after an entity has entered this object and is about to start the 'Transfer-In Time'." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="BeforeProcessingAddOnProcess" DisplayName="Before Processing" Description="Occurs when an entity has been allocated Server capacity, but before entering (or ending transfer into) its processing station." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="ProcessingAddOnProcess" DisplayName="Processing" Description="Occurs when an entity has been allocated Server capacity, ended transfer into the Server's processing station, and is now about to start the processing time." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="AfterProcessingAddOnProcess" DisplayName="After Processing" Description="Occurs when an entity has completed the processing time and is about to attempt its exit from the Server's processing station." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="ExitedAddOnProcess" DisplayName="Exited" Description="Occurs when an entity has exited this object." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="FailedAddOnProcess" DisplayName="Failed" Description="Occurs when this object has failed." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="RepairedAddOnProcess" DisplayName="Repaired" Description="Occurs when a failure is repaired at this object." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="EvaluatingSeizeRequestAddOnProcess" DisplayName="Evaluating Seize Request" Description="Occurs when this Server object is evaluating whether to accept or reject a request to seize capacity of the server. In the executed decision process, assigning a non-positive value to the executing token's ReturnValue state indicates that the seize request is rejected." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="OnShiftAddOnProcess" DisplayName="On Shift" Description="Occurs when the server is at the start of a shift because of its specified work schedule." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="OffShiftAddOnProcess" DisplayName="Off Shift" Description="Occurs when the server is at the end of a shift because of its specified work schedule." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ExpressionProperty Name="CapitalCost" DisplayName="Capital Cost" Description="The initial one-time setup cost to add this object to the system." Category="Financials" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <ExpressionProperty Name="InputBufferCostPerUse" DisplayName="Cost Per Use" Description="The cost to hold an entity in this buffer irrespective of the waiting time." Category="Financials/Buffer Costs/Input Buffer" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <ExpressionProperty Name="InputBufferHoldingCostRate" DisplayName="Holding Cost Rate" Description="The cost per unit time to hold an entity in this buffer." Category="Financials/Buffer Costs/Input Buffer" DefaultValue="0.0" NullString="null" UnitType="CurrencyPerTimeUnit" />
          <ExpressionProperty Name="OutputBufferCostPerUse" DisplayName="Cost Per Use" Description="The cost to hold an entity in this buffer irrespective of the waiting time." Category="Financials/Buffer Costs/Output Buffer" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <ExpressionProperty Name="OutputBufferHoldingCostRate" DisplayName="Holding Cost Rate" Description="The cost per unit time to hold an entity in this buffer." Category="Financials/Buffer Costs/Output Buffer" DefaultValue="0.0" NullString="null" UnitType="CurrencyPerTimeUnit" />
          <ElementProperty Name="RepairingAddOnProcess" DisplayName="Repairing" Description="Occurs when the repair time for a failure at this object is about to begin.&#xD;&#xA;&#xD;&#xA;NOTE: This property has been deprecated. Use the 'Add-On Process Triggers -&gt; Failed' property instead." Category="Advanced Options/Deprecated Properties" Required="False" Deprecated="True" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <Overrides>
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="True" Description="The cost per unit time that is charged for each unutilized scheduled capacity unit of the server." />
            <Override Name="ResourceCostPerUse" Visible="True" Description="The one-time cost per capacity unit that is charged each time the server is used, regardless of the usage duration. Is charged to the cost of the entity that seized the server." />
            <Override Name="ResourceUsageCostRate" Visible="True" Description="The cost per unit time that is charged for each utilized capacity unit of the server. Is charged to the cost of the entity that seized the server." />
            <Override Name="LogResourceUsage" Visible="True" />
            <Override Name="DisplayCategory" Visible="True" />
            <Override Name="DisplayColor" Visible="True" />
            <Override Name="IncludeInPlanResourceConstraints" Visible="True" />
            <Override Name="CapacityType" Visible="True" />
            <Override Name="InitialWorkSchedule" Visible="True" />
            <Override Name="WorkDayExceptions" Visible="True" />
            <Override Name="WorkPeriodExceptions" Visible="True" />
            <Override Name="InitialCapacity" Visible="True" />
            <Override Name="RankingRule" Visible="True" />
            <Override Name="RankingExpression" Visible="True" DefaultValue="Entity.Priority" />
            <Override Name="DynamicSelectionRule" Visible="True" />
            <Override Name="CurrentSizeIndex" DefaultValue="$(DefinitionName).ResourceState" />
            <Override Name="TransferOutConstraintsType" DefaultValue="Disable" />
            <Override Name="ExpectedOperationTimeExpression" DefaultValue="$(DefinitionName).ProcessingTime" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="123" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
            <PropertyReplacement Version="113" OldPropertyName="ProcessingAddOnProcess" NewPropertyName="BeforeProcessingAddOnProcess" />
            <PropertyReplacement Version="125" OldPropertyName="EventName" NewPropertyName="FailureEventName" />
            <PropertyReplacement Version="128" OldPropertyName="ProcessedAddOnProcess" NewPropertyName="AfterProcessingAddOnProcess" />
            <PropertyReplacement Version="208" OldPropertyName="SecondaryResourceForProcessingRequestVisit" NewPropertyName="SecondaryResourceForProcessingRequestMove" />
            <PropertyReplacement Version="208" OldPropertyName="SecondaryResourceForProcessingNodeName" NewPropertyName="SecondaryResourceForProcessingDestinationNode" />
            <PropertyReplacement Version="236" OldPropertyName="SecondaryResourceForProcessingImmediatelyTrySeize" NewPropertyName="SecondaryResourcesForProcessingImmediatelyTrySeize" />
            <PropertyReplacement Version="236" OldPropertyName="SecondaryResourceForProcessingImmediatelyTryAllocateWhenReleased" NewPropertyName="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased" />
            <PropertyReplacement Version="242" OldPropertyName="SecondaryResourceForProcessingOffShiftRule" NewPropertyName="SecondaryResourcesForProcessingOffShiftRule" />
            <PropertyReplacement Version="254" OldPropertyName="SecondaryResourceForProcessingSelectionExpression" NewPropertyName="SecondaryResourceForProcessingSelectionValueExpression" />
            <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceForProcessingObjectType" NewPropertyName="SecondaryResourceForProcessingResourceType" />
            <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceForProcessingObjectName" NewPropertyName="SecondaryResourceForProcessingResourceName" />
            <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceForProcessingObjectListName" NewPropertyName="SecondaryResourceForProcessingResourceListName" />
            <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceForProcessingNumberOfObjects" NewPropertyName="SecondaryResourceForProcessingNumberOfResources" />
            <PropertyReplacement Version="256" OldPropertyName="SecondaryResourceForProcessingUnitsPerObject" NewPropertyName="SecondaryResourceForProcessingUnitsPerResource" />
          </PropertyReplacements>
          <PropertyDefaultValueChanges>
            <PropertyDefaultValueChange Version="203" PropertyName="SecondaryResourcesForProcessingOffShiftRule" OldDefaultValue="Finish Work Already Started" />
            <PropertyDefaultValueChange Version="231" PropertyName="ImmediatelyTrySeize" OldDefaultValue="True" />
            <PropertyDefaultValueChange Version="231" PropertyName="ImmediatelyTryAllocateWhenReleased" OldDefaultValue="True" />
            <PropertyDefaultValueChange Version="231" PropertyName="SecondaryResourcesForProcessingImmediatelyTrySeize" OldDefaultValue="True" />
            <PropertyDefaultValueChange Version="231" PropertyName="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased" OldDefaultValue="True" />
            <PropertyDefaultValueChange Version="242" PropertyName="SecondaryResourcesForProcessingIsRepeatGroup" OldDefaultValue="False" />
          </PropertyDefaultValueChanges>
        </PropertyDefinitions>
        <States>
          <ListState Name="ResourceState" Description="Gets the current resource state of the object.&#xD;&#xA;&#xD;&#xA;Possible Values: Starved = 0, Processing = 1, Blocked = 2, Failed = 3, OffShift = 4, FailedProcessing = 5, OffShiftProcessing = 6, Setup = 7, OffShiftSetup = 8" List="ResourceStateName" AutomaticAssignment="ResourceAutoStates" ResourceUtilizationCalculation="Custom">
            <AutoStates>
              <AutoState Label="FailedProcessing" State="Failed AutoState" />
              <AutoState Label="OffShiftProcessing" State="OffShift AutoState" />
              <AutoState Label="Setup" State="Busy AutoState" />
              <AutoState Label="OffShiftSetup" State="OffShift AutoState" />
            </AutoStates>
            <ResourceUtilizationCalculationSettings>
              <ResourceUtilizationCalculationSetting StateName="Starved" Setting="NotUtilized" />
              <ResourceUtilizationCalculationSetting StateName="Processing" Setting="Utilized" />
              <ResourceUtilizationCalculationSetting StateName="Blocked" Setting="NotUtilized" />
              <ResourceUtilizationCalculationSetting StateName="Failed" Setting="NotUtilized" />
              <ResourceUtilizationCalculationSetting StateName="OffShift" Setting="NotUtilized" />
              <ResourceUtilizationCalculationSetting StateName="FailedProcessing" Setting="Utilized" />
              <ResourceUtilizationCalculationSetting StateName="OffShiftProcessing" Setting="Utilized" />
              <ResourceUtilizationCalculationSetting StateName="Setup" Setting="NotUtilized" />
              <ResourceUtilizationCalculationSetting StateName="OffShiftSetup" Setting="NotUtilized" />
            </ResourceUtilizationCalculationSettings>
          </ListState>
        </States>
        <Events>
          <Event Name="Failed" Description="The Failed event provides notification that this resource has failed." />
          <Event Name="Repaired" Description="The Repaired event provides notification that a failure at this resource has been repaired." />
          <Event Name="FailuresTimerReset" Description="The FailuresTimerReset event provides notification to reset the built-in failure stream timer(s) of this resource." Public="False" />
        </Events>
        <UsedObjects>
          <UsedObject Name="TransferNode" />
          <UsedObject Name="BasicNode" />
        </UsedObjects>
        <Elements>
          <Element Type="Station" Name="InputBuffer" Scope="Public" Description="The location inside the server where entities wait to be processed.">
            <Properties>
              <Property Name="InitialCapacity">InputBufferCapacity</Property>
              <Property Name="EntryRankingRule">RankingRule</Property>
              <Property Name="EntryRankingExpression">RankingExpression</Property>
              <Property Name="EntryDynamicSelectionRule">
                <Value>None</Value>
              </Property>
              <Property Name="BalkEnteringDecisionType">InputBufferBalkDecisionType</Property>
              <Property Name="BalkConditionOrProbability">InputBufferBalkConditionOrProbability</Property>
              <Property Name="OnBalkedEnteringProcess">
                <Value>OnBalkedEnteringInputBuffer</Value>
              </Property>
              <Property Name="RedirectLocationType">Station</Property>
              <Property Name="RedirectStationName">
                <Value>Processing</Value>
              </Property>
              <Property Name="ContentsRankingRule">RankingRule</Property>
              <Property Name="ContentsRankingExpression">RankingExpression</Property>
              <Property Name="RenegeTriggers">
                <Value>InputBufferRenegeTriggers</Value>
                <Rows>
                  <Properties>
                    <Property Name="RenegeTriggerType">InputBufferRenegeTriggerType</Property>
                    <Property Name="RenegeWaitDuration">InputBufferRenegeWaitDuration</Property>
                    <Property Name="RenegeTriggeringEventName">InputBufferRenegeTriggeringEventName</Property>
                    <Property Name="RenegeDecisionType">InputBufferRenegeDecisionType</Property>
                    <Property Name="RenegeConditionOrProbability">InputBufferRenegeConditionOrProbability</Property>
                    <Property Name="OnRenegedProcess">
                      <Value>OnRenegedFromInputBuffer</Value>
                    </Property>
                    <Property Name="RenegeTriggerStartBoundary">InputBufferRenegeTriggerStartBoundary</Property>
                  </Properties>
                </Rows>
              </Property>
              <Property Name="CostPerUse" Units="USD">InputBufferCostPerUse</Property>
              <Property Name="HoldingCostRate" Units="USD per Hour">InputBufferHoldingCostRate</Property>
            </Properties>
          </Element>
          <Element Type="Station" Name="Processing" Scope="Public" Description="The location inside the server where entities are processed.">
            <Properties>
              <Property Name="InitialCapacity">CurrentCapacity</Property>
              <Property Name="EntryRankingRule">RankingRule</Property>
              <Property Name="EntryRankingExpression">RankingExpression</Property>
              <Property Name="EntryDynamicSelectionRule">
                <Value>DynamicSelectionRule</Value>
              </Property>
              <Property Name="CostPerUse" Units="USD">0.0</Property>
              <Property Name="HoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
          </Element>
          <Element Type="Station" Name="OutputBuffer" Scope="Public" Description="The location inside the server where entities wait to exit the object after being processed.">
            <Properties>
              <Property Name="InitialCapacity">OutputBufferCapacity</Property>
              <Property Name="EntryDynamicSelectionRule">
                <Value>None</Value>
              </Property>
              <Property Name="BalkEnteringDecisionType">OutputBufferBalkDecisionType</Property>
              <Property Name="BalkConditionOrProbability">OutputBufferBalkConditionOrProbability</Property>
              <Property Name="OnBalkedEnteringProcess">
                <Value>OnBalkedEnteringOutputBuffer</Value>
              </Property>
              <Property Name="RedirectLocationType">ParentExternalNode</Property>
              <Property Name="RedirectExternalNodeName">Output</Property>
              <Property Name="RenegeTriggers">
                <Value>OutputBufferRenegeTriggers</Value>
                <Rows>
                  <Properties>
                    <Property Name="RenegeTriggerType">OutputBufferRenegeTriggerType</Property>
                    <Property Name="RenegeWaitDuration">OutputBufferRenegeWaitDuration</Property>
                    <Property Name="RenegeTriggeringEventName">OutputBufferRenegeTriggeringEventName</Property>
                    <Property Name="RenegeDecisionType">OutputBufferRenegeDecisionType</Property>
                    <Property Name="RenegeConditionOrProbability">OutputBufferRenegeConditionOrProbability</Property>
                    <Property Name="OnRenegedProcess">
                      <Value>OnRenegedFromOutputBuffer</Value>
                    </Property>
                    <Property Name="RenegeTriggerStartBoundary">OutputBufferRenegeTriggerStartBoundary</Property>
                  </Properties>
                </Rows>
              </Property>
              <Property Name="CostPerUse" Units="USD">OutputBufferCostPerUse</Property>
              <Property Name="HoldingCostRate" Units="USD per Hour">OutputBufferHoldingCostRate</Property>
            </Properties>
          </Element>
          <Element Type="Failure" Name="Failure" Scope="Public" Description="The failure occurrences for this object.">
            <Properties>
              <Property Name="ReportStatistics">False</Property>
              <Property Name="OnFailedProcess">
                <Value>OnFailed</Value>
              </Property>
              <Property Name="OnRepairedProcess">
                <Value>OnRepaired</Value>
              </Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="CalendarTimeBasedFailures">
            <Properties>
              <Property Name="TimeOffset">UptimeBetweenFailures</Property>
              <Property Name="TimeInterval">UptimeBetweenFailures</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEventName">FailuresTimerReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="ProcessingCountBasedFailures">
            <Properties>
              <Property Name="IntervalType">EventCount</Property>
              <Property Name="TriggeringEventName">Processing.Exited</Property>
              <Property Name="TriggeringEventCount">CountBetweenFailures</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEventName">FailuresTimerReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="EventCountBasedFailures">
            <Properties>
              <Property Name="IntervalType">EventCount</Property>
              <Property Name="TriggeringEventName">FailureEventName</Property>
              <Property Name="TriggeringEventCount">CountBetweenFailures</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEventName">FailuresTimerReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="ProcessingTimeBasedFailures">
            <Properties>
              <Property Name="IntervalType">TimeInState</Property>
              <Property Name="TimeOffset">UptimeBetweenFailures</Property>
              <Property Name="TimeInterval">UptimeBetweenFailures</Property>
              <Property Name="StateVariableName">
                <Value>ResourceState</Value>
              </Property>
              <Property Name="StateValue">Math.If(ResourceState==List.ResourceStateName.Processing || ResourceState==List.ResourceStateName.OffShiftProcessing || ResourceState==List.ResourceStateName.FailedProcessing, ResourceState, Math.NaN)</Property>
              <Property Name="MaximumEvents">1</Property>
              <Property Name="ResetEventName">FailuresTimerReset</Property>
              <Property Name="InitiallyEnabled">False</Property>
            </Properties>
          </Element>
          <Element Type="CostCenter" Name="CapitalCosts">
            <Properties>
              <Property Name="InitialCost" Units="USD">CapitalCost</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DataSource">[Object]</Property>
              <Property Name="DataItem">"CapitalCost"</Property>
            </Properties>
          </Element>
          <Element Type="TaskSequence" Name="ProcessingTaskSequence">
            <Properties>
              <Property Name="TaskPrecedenceMethod">ProcessingTaskPrecedenceMethod</Property>
              <Property Name="Tasks">
                <Value>ProcessingTasks</Value>
                <Rows>
                  <Properties>
                    <Property Name="TaskIDNumber">TaskIDNumber</Property>
                    <Property Name="TaskSequenceNumber">TaskSequenceNumber</Property>
                    <Property Name="TaskName">TaskName</Property>
                    <Property Name="TaskBranchType">TaskBranchType</Property>
                    <Property Name="TaskConditionOrProbability">TaskConditionOrProbability</Property>
                    <Property Name="TaskProcessName">
                      <Value>PerformProcessingTask</Value>
                    </Property>
                    <Property Name="TaskImmediatePredecessors">TaskImmediatePredecessors</Property>
                    <Property Name="TaskImmediateSuccessors">TaskImmediateSuccessors</Property>
                    <Property Name="TaskAutoCancelTrigger">TaskAutoCancelTrigger</Property>
                  </Properties>
                </Rows>
              </Property>
              <Property Name="LoopbackBranches">
                <Value>ProcessingLoopbackBranches</Value>
                <Rows>
                  <Properties>
                    <Property Name="LoopbackFromTaskIDNumber">LoopbackFromTaskIDNumber</Property>
                    <Property Name="LoopbackToTaskIDNumber">LoopbackToTaskIDNumber</Property>
                    <Property Name="LoopbackFromTaskSequenceNumber">LoopbackFromTaskSequenceNumber</Property>
                    <Property Name="LoopbackToTaskSequenceNumber">LoopbackToTaskSequenceNumber</Property>
                    <Property Name="LoopbackBranchType">LoopbackBranchType</Property>
                    <Property Name="LoopbackConditionOrProbability">LoopbackConditionOrProbability</Property>
                  </Properties>
                </Rows>
              </Property>
              <Property Name="LogTasks">LogResourceUsage</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ToEnableFailures" ExclusionExpression="FailureType == List.ServerFailureType.NoFailures" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>CalendarTimeBasedFailures.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Run.RandomnessDisabled==False</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">FailureType!=List.ServerFailureType.CalendarTimeBased</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ProcessingCountBasedFailures.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Run.RandomnessDisabled==False</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">FailureType!=List.ServerFailureType.ProcessingCountBased</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>EventCountBasedFailures.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Run.RandomnessDisabled==False</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">FailureType!=List.ServerFailureType.EventCountBased</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ProcessingTimeBasedFailures.Enabled</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Run.RandomnessDisabled==False</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">FailureType!=List.ServerFailureType.ProcessingTimeBased</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Subscribe" Name="ToFailureEvents" ExclusionExpression="FailureType == List.ServerFailureType.NoFailures" ID="3">
                <Properties>
                  <Property Name="EventName">CalendarTimeBasedFailures.Event</Property>
                  <Property Name="ProcessName">
                    <Value>FailureOccurrenceLogic</Value>
                  </Property>
                  <Property Name="Events">
                    <Rows>
                      <Properties>
                        <Property Name="EventsEventName">ProcessingCountBasedFailures.Event</Property>
                        <Property Name="EventsProcessName">
                          <Value>FailureOccurrenceLogic</Value>
                        </Property>
                      </Properties>
                      <Properties>
                        <Property Name="EventsEventName">EventCountBasedFailures.Event</Property>
                        <Property Name="EventsProcessName">
                          <Value>FailureOccurrenceLogic</Value>
                        </Property>
                      </Properties>
                      <Properties>
                        <Property Name="EventsEventName">ProcessingTimeBasedFailures.Event</Property>
                        <Property Name="EventsProcessName">
                          <Value>FailureOccurrenceLogic</Value>
                        </Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="RunInitializedAddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunInitializedAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Decide" Name="IfOnShift" ExclusionExpression="Math.If(OnShiftAddOnProcess.HasValue, 0, 2)" ID="5">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">ResourceState!=List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ExclusionExpression="Math.If(OffShiftAddOnProcess.HasValue, 0, 2)" ID="6">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">ResourceState==List.ResourceStateName.OffShift</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Execute" Name="OffShiftAddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>OffShiftAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="OnShiftAddOnProcess" ID="8">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>OnShiftAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCapacityReleased" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnCapacityReleased" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ResourceState" ExclusionExpression="OffShiftRule == List.OffShiftRuleName.SuspendProcessing" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If((Capacity==0)&amp;&amp;(ResourceOwners==0), List.ResourceStateName.OffShift, ResourceState)</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEvaluatingSeizeRequest" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnEvaluatingSeizeRequest" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfServerAvailable" ExclusionExpression="FailureType == List.ServerFailureType.NoFailures" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">!Failure.Active &amp;&amp; (ProcessingCountBasedFailures.EventCount==0) &amp;&amp; (EventCountBasedFailures.EventCount==0) &amp;&amp; (CalendarTimeBasedFailures.EventCount==0) &amp;&amp; (ProcessingTimeBasedFailures.EventCount==0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="4" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Assign" Name="RejectSeizeRequest" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Token.ReturnValue</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
              </Step>
              <Step Type="Execute" Name="EvaluatingSeizeRequestAddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>EvaluatingSeizeRequestAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnCapacityChanged" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnCapacityChanged" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ProcessingCapacity" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>Processing.CurrentCapacity</Value>
                  </Property>
                  <Property Name="NewValue">Capacity</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfOnShift" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">(Capacity.Previous==0)&amp;&amp;(Capacity&gt;0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">(Capacity.Previous&gt;0)&amp;&amp;(Capacity==0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Suspend" Name="Processing" ExclusionExpression="OffShiftRule == List.OffShiftRuleName.FinishWorkAlreadyStarted" ID="5">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>OnEnteredProcessing</Value>
                  </Property>
                  <Property Name="SuspendActions">
                    <Rows>
                      <Properties>
                        <Property Name="SuspendActionsProcessName">
                          <Value>PerformProcessingTask</Value>
                        </Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Assign" Name="ResourceState" ExclusionExpression="OffShiftRule == List.OffShiftRuleName.SuspendProcessing" ID="6">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If((ResourceOwners==0)||(ResourceOwners==Processing.NumberTransferringOut), List.ResourceStateName.OffShift, Failure.Active, List.ResourceStateName.Failed, HasActiveChangeover, List.ResourceStateName.OffShiftSetup, List.ResourceStateName.OffShiftProcessing)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Execute" Name="OffShiftAddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>OffShiftAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
              <Step Type="Resume" Name="Processing" ExclusionExpression="OffShiftRule == List.OffShiftRuleName.FinishWorkAlreadyStarted" ID="8">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>OnEnteredProcessing</Value>
                  </Property>
                  <Property Name="ResumeActions">
                    <Rows>
                      <Properties>
                        <Property Name="ResumeActionsProcessName">
                          <Value>PerformProcessingTask</Value>
                        </Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Assign" Name="ResourceState" ExclusionExpression="OffShiftRule == List.OffShiftRuleName.SuspendProcessing" ID="9">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If((!Failure.Active)&amp;&amp;(ResourceOwners&gt;0)&amp;&amp;((Capacity.Remaining&gt;0)||(ResourceOwners&gt;Processing.NumberTransferringOut))&amp;&amp;(!HasActiveChangeover), List.ResourceStateName.Processing, (!Failure.Active)&amp;&amp;(ResourceOwners&gt;0)&amp;&amp;(HasActiveChangeover), List.ResourceStateName.Setup, ResourceState)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Execute" Name="OnShiftAddOnProcess" ID="10">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>OnShiftAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEndingAddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunEndingAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnBalkedEnteringInputBuffer" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnBalkingAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnBalking</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnBalkingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnBalkingNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">Math.If(AssignmentsOnBalking.AssignmentsOnBalkingAssignConditionType==List.OnBalkingAssignConditionType.CustomCondition, AssignmentsOnBalking.AssignmentsOnBalkingAssignCondition&lt;=0.0, AssignmentsOnBalking.AssignmentsOnBalkingAssignConditionType!=List.OnBalkingAssignConditionType.BalkingEnteringInputBuffer)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfDestroyEntity" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">!InputBufferBalkNodeName.HasValue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="4">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="5" />
                <Exit Name="Failed" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="SetNode" Name="BalkNodeName" ID="5">
                <Properties>
                  <Property Name="NodeName">InputBufferBalkNodeName</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToBalkNodeName" ID="6">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="NodeName">InputBufferBalkNodeName</Property>
                </Properties>
              </Step>
              <Step Type="Destroy" Name="Entity" ID="7">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredInputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">InputBuffer.Entered</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ID="3">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourceSeizesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceSeizesOnEnteringResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceSeizesOnEnteringResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceSeizesOnEnteringResourceListName</Property>
                        <Property Name="NumberOfResources">SecondaryResourceSeizesOnEnteringNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceSeizesOnEnteringUnitsPerResource</Property>
                        <Property Name="SelectionGoal">SecondaryResourceSeizesOnEnteringSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">SecondaryResourceSeizesOnEnteringSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceSeizesOnEnteringSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">SecondaryResourceSeizesOnEnteringResourceEfficiency</Property>
                        <Property Name="RequestMove">SecondaryResourceSeizesOnEnteringRequestMove</Property>
                        <Property Name="DestinationNode">SecondaryResourceSeizesOnEnteringDestinationNode</Property>
                        <Property Name="MovePriority">SecondaryResourceSeizesOnEnteringMovePriority</Property>
                        <Property Name="OnSeizedProcess">
                          <Value>SecondaryResourceSeizesOnEnteringOnSeizedProcess</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">SecondaryResourceSeizesOnEnteringSkipSeizeCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">SecondaryResourceSeizesOnEnteringMustSimultaneouslySeize</Property>
                  <Property Name="ImmediatelyTrySeize">SecondaryResourceSeizesOnEnteringImmediatelyTrySeize</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ID="4">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>SecondaryResourceReleasesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceReleasesOnEnteringResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceReleasesOnEnteringResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceReleasesOnEnteringResourceListName</Property>
                        <Property Name="QuantityType">SecondaryResourceReleasesOnEnteringQuantityType</Property>
                        <Property Name="NumberOfResources">SecondaryResourceReleasesOnEnteringNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceReleasesOnEnteringUnitsPerResource</Property>
                        <Property Name="ReleaseOrder">SecondaryResourceReleasesOnEnteringReleaseOrder</Property>
                        <Property Name="SelectionCondition">SecondaryResourceReleasesOnEnteringSelectionCondition</Property>
                        <Property Name="KeepReservedCondition">SecondaryResourceReleasesOnEnteringKeepReservedCondition</Property>
                        <Property Name="ReservationTimeout">SecondaryResourceReleasesOnEnteringReservationTimeout</Property>
                        <Property Name="OnReleasedProcess">
                          <Value>SecondaryResourceReleasesOnEnteringOnReleasedProcess</Value>
                        </Property>
                        <Property Name="SkipReleaseCondition">SecondaryResourceReleasesOnEnteringSkipReleaseCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="ImmediatelyTryAllocate">SecondaryResourceReleasesOnEnteringImmediatelyTryAllocateWhenReleased</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Execute" Name="EnteredAddOnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>EnteredAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Delay" Name="TransferInTime" ID="6">
                <Properties>
                  <Property Name="DelayTime">TransferInTime</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="EndTransfer" Name="IntoInputBuffer" ID="7">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Seize" Name="Server" ID="8">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">ParentObject</Property>
                        <Property Name="SelectionGoal"></Property>
                        <Property Name="SelectionValueExpression"></Property>
                        <Property Name="PerUseCostAccrualMethod">AtNextStation</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="SeizeConstraintLogic">
                    <Value>SeizeConstraintLogic</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ConstraintLogicName">
                          <Value>SeizeConstraintLogic.SeizeConstraintLogicName</Value>
                        </Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="ImmediatelyTrySeize">ImmediatelyTrySeize</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ExclusionExpression="SecondaryResourcesForProcessingIsRepeatGroup == True" ID="9">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceForProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceForProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceForProcessingResourceListName</Property>
                        <Property Name="NumberOfResources">SecondaryResourceForProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceForProcessingUnitsPerResource</Property>
                        <Property Name="SelectionGoal">SecondaryResourceForProcessingSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">SecondaryResourceForProcessingSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceForProcessingSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">SecondaryResourceForProcessingResourceEfficiency</Property>
                        <Property Name="RequestMove">SecondaryResourceForProcessingRequestMove</Property>
                        <Property Name="DestinationNode">SecondaryResourceForProcessingDestinationNode</Property>
                        <Property Name="PerUseCostAccrualMethod">AtNextStation</Property>
                        <Property Name="OnCapacityChangedProcess">
                          <Value>OnSecondaryResourceCapacityChanged</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">SecondaryResourceForProcessingSkipRequirementCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">SecondaryResourcesForProcessingMustSimultaneouslySeize</Property>
                  <Property Name="ImmediatelyTrySeize">SecondaryResourcesForProcessingImmediatelyTrySeize</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ExclusionExpression="SecondaryResourcesForProcessingIsRepeatGroup == False" ID="10">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourcesForProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourcesForProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourcesForProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourcesForProcessingResourceListName</Property>
                        <Property Name="NumberOfResources">SecondaryResourcesForProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourcesForProcessingUnitsPerResource</Property>
                        <Property Name="SelectionGoal">SecondaryResourcesForProcessingSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">SecondaryResourcesForProcessingSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourcesForProcessingSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">SecondaryResourcesForProcessingResourceEfficiency</Property>
                        <Property Name="RequestMove">SecondaryResourcesForProcessingRequestMove</Property>
                        <Property Name="DestinationNode">SecondaryResourcesForProcessingDestinationNode</Property>
                        <Property Name="PerUseCostAccrualMethod">AtNextStation</Property>
                        <Property Name="OnCapacityChangedProcess">
                          <Value>OnSecondaryResourceCapacityChanged</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">SecondaryResourcesForProcessingSkipRequirementCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">SecondaryResourcesForProcessingMustSimultaneouslySeize</Property>
                  <Property Name="ImmediatelyTrySeize">SecondaryResourcesForProcessingImmediatelyTrySeize</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ID="11">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourceSeizesBeforeProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceSeizesBeforeProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceSeizesBeforeProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceSeizesBeforeProcessingResourceListName</Property>
                        <Property Name="NumberOfResources">SecondaryResourceSeizesBeforeProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceSeizesBeforeProcessingUnitsPerResource</Property>
                        <Property Name="SelectionGoal">SecondaryResourceSeizesBeforeProcessingSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">SecondaryResourceSeizesBeforeProcessingSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceSeizesBeforeProcessingSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">SecondaryResourceSeizesBeforeProcessingResourceEfficiency</Property>
                        <Property Name="RequestMove">SecondaryResourceSeizesBeforeProcessingRequestMove</Property>
                        <Property Name="DestinationNode">SecondaryResourceSeizesBeforeProcessingDestinationNode</Property>
                        <Property Name="MovePriority">SecondaryResourceSeizesBeforeProcessingMovePriority</Property>
                        <Property Name="PerUseCostAccrualMethod">AtNextStation</Property>
                        <Property Name="OnSeizedProcess">
                          <Value>SecondaryResourceSeizesBeforeProcessingOnSeizedProcess</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">SecondaryResourceSeizesBeforeProcessingSkipSeizeCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">SecondaryResourceSeizesBeforeProcessingMustSimultaneouslySeize</Property>
                  <Property Name="ImmediatelyTrySeize">SecondaryResourceSeizesBeforeProcessingImmediatelyTrySeize</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ID="12">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>SecondaryResourceReleasesBeforeProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceReleasesBeforeProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceReleasesBeforeProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceReleasesBeforeProcessingResourceListName</Property>
                        <Property Name="QuantityType">SecondaryResourceReleasesBeforeProcessingQuantityType</Property>
                        <Property Name="NumberOfResources">SecondaryResourceReleasesBeforeProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceReleasesBeforeProcessingUnitsPerResource</Property>
                        <Property Name="ReleaseOrder">SecondaryResourceReleasesBeforeProcessingReleaseOrder</Property>
                        <Property Name="SelectionCondition">SecondaryResourceReleasesBeforeProcessingSelectionCondition</Property>
                        <Property Name="KeepReservedCondition">SecondaryResourceReleasesBeforeProcessingKeepReservedCondition</Property>
                        <Property Name="ReservationTimeout">SecondaryResourceReleasesBeforeProcessingReservationTimeout</Property>
                        <Property Name="OnReleasedProcess">
                          <Value>SecondaryResourceReleasesBeforeProcessingOnReleasedProcess</Value>
                        </Property>
                        <Property Name="SkipReleaseCondition">SecondaryResourceReleasesBeforeProcessingSkipReleaseCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="ImmediatelyTryAllocate">SecondaryResourceReleasesBeforeProcessingImmediatelyTryAllocateWhenReleased</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="AddRow" Name="BeforeProcessing" ID="13">
                <Properties>
                  <Property Name="TableName">TableRowReferenceBeforeProcessingTableName</Property>
                  <Property Name="AddRowCondition">TableRowReferenceBeforeProcessingActionType == Enum.TableRowReferenceActionType.AddNewRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="14" />
              </Step>
              <Step Type="SetRow" Name="BeforeProcessing" ID="14">
                <Properties>
                  <Property Name="TableName">TableRowReferenceBeforeProcessingTableName</Property>
                  <Property Name="RowNumber">TableRowReferenceBeforeProcessingRowNumber</Property>
                  <Property Name="SetRowCondition">TableRowReferenceBeforeProcessingActionType == Enum.TableRowReferenceActionType.ReferenceExistingRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Assign" Name="BeforeProcessingAssignments" ID="15">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeProcessingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeProcessingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="16" />
              </Step>
              <Step Type="Execute" Name="BeforeProcessingAddOnProcess" ID="16">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>BeforeProcessingAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="17" />
              </Step>
              <Step Type="Transfer" Name="ToProcessing" ID="17">
                <Properties>
                  <Property Name="FromType">CurrentStation</Property>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">
                    <Value>Processing</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRenegedFromInputBuffer" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnRenegingAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnReneging</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnRenegingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnRenegingNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">Math.If(AssignmentsOnReneging.AssignmentsOnRenegingAssignConditionType==List.OnRenegingAssignConditionType.CustomCondition, AssignmentsOnReneging.AssignmentsOnRenegingAssignCondition&lt;=0.0, AssignmentsOnReneging.AssignmentsOnRenegingAssignConditionType!=List.OnRenegingAssignConditionType.RenegingFromInputBuffer)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfDestroyEntity" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">!InputBufferRenegeTriggers.InputBufferRenegeNodeName.HasValue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="4">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="5" />
                <Exit Name="Failed" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="SetNode" Name="RenegeNodeName" ID="5">
                <Properties>
                  <Property Name="NodeName">InputBufferRenegeTriggers.InputBufferRenegeNodeName</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToRenegeNodeName" ID="6">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="NodeName">InputBufferRenegeTriggers.InputBufferRenegeNodeName</Property>
                </Properties>
              </Step>
              <Step Type="Destroy" Name="Entity" ID="7">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredProcessing" ShowAsUserExecutableProcess="False" BeginStepID="11" Scope="Public">
            <Properties>
              <Property Name="TriggeringEventName">Processing.Entered</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ID="3">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourceSeizesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceSeizesOnEnteringResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceSeizesOnEnteringResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceSeizesOnEnteringResourceListName</Property>
                        <Property Name="NumberOfResources">SecondaryResourceSeizesOnEnteringNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceSeizesOnEnteringUnitsPerResource</Property>
                        <Property Name="SelectionGoal">SecondaryResourceSeizesOnEnteringSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">SecondaryResourceSeizesOnEnteringSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceSeizesOnEnteringSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">SecondaryResourceSeizesOnEnteringResourceEfficiency</Property>
                        <Property Name="RequestMove">SecondaryResourceSeizesOnEnteringRequestMove</Property>
                        <Property Name="DestinationNode">SecondaryResourceSeizesOnEnteringDestinationNode</Property>
                        <Property Name="MovePriority">SecondaryResourceSeizesOnEnteringMovePriority</Property>
                        <Property Name="OnSeizedProcess">
                          <Value>SecondaryResourceSeizesOnEnteringOnSeizedProcess</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">SecondaryResourceSeizesOnEnteringSkipSeizeCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">SecondaryResourceSeizesOnEnteringMustSimultaneouslySeize</Property>
                  <Property Name="ImmediatelyTrySeize">SecondaryResourceSeizesOnEnteringImmediatelyTrySeize</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ID="4">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>SecondaryResourceReleasesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceReleasesOnEnteringResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceReleasesOnEnteringResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceReleasesOnEnteringResourceListName</Property>
                        <Property Name="QuantityType">SecondaryResourceReleasesOnEnteringQuantityType</Property>
                        <Property Name="NumberOfResources">SecondaryResourceReleasesOnEnteringNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceReleasesOnEnteringUnitsPerResource</Property>
                        <Property Name="ReleaseOrder">SecondaryResourceReleasesOnEnteringReleaseOrder</Property>
                        <Property Name="SelectionCondition">SecondaryResourceReleasesOnEnteringSelectionCondition</Property>
                        <Property Name="KeepReservedCondition">SecondaryResourceReleasesOnEnteringKeepReservedCondition</Property>
                        <Property Name="ReservationTimeout">SecondaryResourceReleasesOnEnteringReservationTimeout</Property>
                        <Property Name="OnReleasedProcess">
                          <Value>SecondaryResourceReleasesOnEnteringOnReleasedProcess</Value>
                        </Property>
                        <Property Name="SkipReleaseCondition">SecondaryResourceReleasesOnEnteringSkipReleaseCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="ImmediatelyTryAllocate">SecondaryResourceReleasesOnEnteringImmediatelyTryAllocateWhenReleased</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="23" />
              </Step>
              <Step Type="Delay" Name="TransferInTime" ID="5">
                <Properties>
                  <Property Name="DelayTime">TransferInTime</Property>
                  <Property Name="Interruptible">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Delay" Name="ProcessingTime" ID="6">
                <Properties>
                  <Property Name="DelayTime">ProcessingTime</Property>
                  <Property Name="DelayMultiplier">Math.If(Token.AssociatedObject==Nothing, 1.0, Math.IsNaN(Entity.SeizedResources.AggregateEfficiency(ResourceEfficiencyRule)), 1.0, Entity.SeizedResources.AggregateEfficiency(ResourceEfficiencyRule)^-1)</Property>
                  <Property Name="Interruptible">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="30" />
              </Step>
              <Step Type="EndTransfer" Name="IntoProcessing" ID="7">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="19" />
              </Step>
              <Step Type="Assign" Name="ResourceState" ExclusionExpression="OffShiftRule == List.OffShiftRuleName.SuspendProcessing" ID="8">
                <Properties>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ResourceState</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">List.ResourceStateName.OffShift</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">(Capacity&gt;0)||((ResourceOwners-Processing.NumberTransferringOut)&gt;1)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Transfer" Name="ToOutputBuffer" ID="9">
                <Properties>
                  <Property Name="FromType">CurrentStation</Property>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">
                    <Value>OutputBuffer</Value>
                  </Property>
                </Properties>
              </Step>
              <Step Type="Assign" Name="BeforeExitingAssignments" ExclusionExpression="OutputBufferCapacity &gt; 0" ID="10">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeExiting</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeExitingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeExitingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Decide" Name="IfInputBuffer" ExclusionExpression="Math.If(InputBufferCapacity &gt; 0, 1, 2)" ID="11">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">InputBufferCapacity&gt;0</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="2" />
              </Step>
              <Step Type="Seize" Name="Server" ID="12">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">ParentObject</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ExclusionExpression="SecondaryResourcesForProcessingIsRepeatGroup == True" ID="13">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceForProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceForProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceForProcessingResourceListName</Property>
                        <Property Name="NumberOfResources">SecondaryResourceForProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceForProcessingUnitsPerResource</Property>
                        <Property Name="SelectionGoal">SecondaryResourceForProcessingSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">SecondaryResourceForProcessingSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceForProcessingSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">SecondaryResourceForProcessingResourceEfficiency</Property>
                        <Property Name="RequestMove">SecondaryResourceForProcessingRequestMove</Property>
                        <Property Name="DestinationNode">SecondaryResourceForProcessingDestinationNode</Property>
                        <Property Name="OnCapacityChangedProcess">
                          <Value>OnSecondaryResourceCapacityChanged</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">SecondaryResourceForProcessingSkipRequirementCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">SecondaryResourcesForProcessingMustSimultaneouslySeize</Property>
                  <Property Name="ImmediatelyTrySeize">SecondaryResourcesForProcessingImmediatelyTrySeize</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="14" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ExclusionExpression="SecondaryResourcesForProcessingIsRepeatGroup == False" ID="14">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourcesForProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourcesForProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourcesForProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourcesForProcessingResourceListName</Property>
                        <Property Name="NumberOfResources">SecondaryResourcesForProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourcesForProcessingUnitsPerResource</Property>
                        <Property Name="SelectionGoal">SecondaryResourcesForProcessingSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">SecondaryResourcesForProcessingSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourcesForProcessingSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">SecondaryResourcesForProcessingResourceEfficiency</Property>
                        <Property Name="RequestMove">SecondaryResourcesForProcessingRequestMove</Property>
                        <Property Name="DestinationNode">SecondaryResourcesForProcessingDestinationNode</Property>
                        <Property Name="OnCapacityChangedProcess">
                          <Value>OnSecondaryResourceCapacityChanged</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">SecondaryResourcesForProcessingSkipRequirementCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">SecondaryResourcesForProcessingMustSimultaneouslySeize</Property>
                  <Property Name="ImmediatelyTrySeize">SecondaryResourcesForProcessingImmediatelyTrySeize</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ID="15">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourceSeizesBeforeProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceSeizesBeforeProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceSeizesBeforeProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceSeizesBeforeProcessingResourceListName</Property>
                        <Property Name="NumberOfResources">SecondaryResourceSeizesBeforeProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceSeizesBeforeProcessingUnitsPerResource</Property>
                        <Property Name="SelectionGoal">SecondaryResourceSeizesBeforeProcessingSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">SecondaryResourceSeizesBeforeProcessingSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceSeizesBeforeProcessingSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">SecondaryResourceSeizesBeforeProcessingResourceEfficiency</Property>
                        <Property Name="RequestMove">SecondaryResourceSeizesBeforeProcessingRequestMove</Property>
                        <Property Name="DestinationNode">SecondaryResourceSeizesBeforeProcessingDestinationNode</Property>
                        <Property Name="MovePriority">SecondaryResourceSeizesBeforeProcessingMovePriority</Property>
                        <Property Name="OnSeizedProcess">
                          <Value>SecondaryResourceSeizesBeforeProcessingOnSeizedProcess</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">SecondaryResourceSeizesBeforeProcessingSkipSeizeCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">SecondaryResourceSeizesBeforeProcessingMustSimultaneouslySeize</Property>
                  <Property Name="ImmediatelyTrySeize">SecondaryResourceSeizesBeforeProcessingImmediatelyTrySeize</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="18" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ExclusionExpression="SecondaryResourcesForProcessingIsRepeatGroup == True" ID="16">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceForProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceForProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceForProcessingResourceListName</Property>
                        <Property Name="QuantityType">All</Property>
                        <Property Name="KeepReservedCondition">SecondaryResourceForProcessingKeepReservedCondition</Property>
                        <Property Name="ReservationTimeout">SecondaryResourceForProcessingReservationTimeout</Property>
                        <Property Name="SkipReleaseCondition">SecondaryResourceForProcessingSkipRequirementCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="UseStrictListReferencing">True</Property>
                  <Property Name="ImmediatelyTryAllocate">SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="17" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ExclusionExpression="SecondaryResourcesForProcessingIsRepeatGroup == False" ID="17">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>SecondaryResourcesForProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourcesForProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourcesForProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourcesForProcessingResourceListName</Property>
                        <Property Name="QuantityType">All</Property>
                        <Property Name="KeepReservedCondition">SecondaryResourcesForProcessingKeepReservedCondition</Property>
                        <Property Name="ReservationTimeout">SecondaryResourcesForProcessingReservationTimeout</Property>
                        <Property Name="SkipReleaseCondition">SecondaryResourcesForProcessingSkipRequirementCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="UseStrictListReferencing">True</Property>
                  <Property Name="ImmediatelyTryAllocate">SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ID="18">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>SecondaryResourceReleasesBeforeProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceReleasesBeforeProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceReleasesBeforeProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceReleasesBeforeProcessingResourceListName</Property>
                        <Property Name="QuantityType">SecondaryResourceReleasesBeforeProcessingQuantityType</Property>
                        <Property Name="NumberOfResources">SecondaryResourceReleasesBeforeProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceReleasesBeforeProcessingUnitsPerResource</Property>
                        <Property Name="ReleaseOrder">SecondaryResourceReleasesBeforeProcessingReleaseOrder</Property>
                        <Property Name="SelectionCondition">SecondaryResourceReleasesBeforeProcessingSelectionCondition</Property>
                        <Property Name="KeepReservedCondition">SecondaryResourceReleasesBeforeProcessingKeepReservedCondition</Property>
                        <Property Name="ReservationTimeout">SecondaryResourceReleasesBeforeProcessingReservationTimeout</Property>
                        <Property Name="OnReleasedProcess">
                          <Value>SecondaryResourceReleasesBeforeProcessingOnReleasedProcess</Value>
                        </Property>
                        <Property Name="SkipReleaseCondition">SecondaryResourceReleasesBeforeProcessingSkipReleaseCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="ImmediatelyTryAllocate">SecondaryResourceReleasesBeforeProcessingImmediatelyTryAllocateWhenReleased</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="27" />
              </Step>
              <Step Type="Execute" Name="ProcessingAddOnProcess" ID="19">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ProcessingAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="25" />
              </Step>
              <Step Type="Execute" Name="AfterProcessingAddOnProcess" ID="20">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>AfterProcessingAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="21" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ID="21">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourceSeizesAfterProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceSeizesAfterProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceSeizesAfterProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceSeizesAfterProcessingResourceListName</Property>
                        <Property Name="NumberOfResources">SecondaryResourceSeizesAfterProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceSeizesAfterProcessingUnitsPerResource</Property>
                        <Property Name="SelectionGoal">SecondaryResourceSeizesAfterProcessingSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">SecondaryResourceSeizesAfterProcessingSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceSeizesAfterProcessingSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">SecondaryResourceSeizesAfterProcessingResourceEfficiency</Property>
                        <Property Name="RequestMove">SecondaryResourceSeizesAfterProcessingRequestMove</Property>
                        <Property Name="DestinationNode">SecondaryResourceSeizesAfterProcessingDestinationNode</Property>
                        <Property Name="MovePriority">SecondaryResourceSeizesAfterProcessingMovePriority</Property>
                        <Property Name="OnSeizedProcess">
                          <Value>SecondaryResourceSeizesAfterProcessingOnSeizedProcess</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">SecondaryResourceSeizesAfterProcessingSkipSeizeCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">SecondaryResourceSeizesAfterProcessingMustSimultaneouslySeize</Property>
                  <Property Name="ImmediatelyTrySeize">SecondaryResourceSeizesAfterProcessingImmediatelyTrySeize</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="22" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ID="22">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>SecondaryResourceReleasesAfterProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceReleasesAfterProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceReleasesAfterProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceReleasesAfterProcessingResourceListName</Property>
                        <Property Name="QuantityType">SecondaryResourceReleasesAfterProcessingQuantityType</Property>
                        <Property Name="NumberOfResources">SecondaryResourceReleasesAfterProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceReleasesAfterProcessingUnitsPerResource</Property>
                        <Property Name="ReleaseOrder">SecondaryResourceReleasesAfterProcessingReleaseOrder</Property>
                        <Property Name="SelectionCondition">SecondaryResourceReleasesAfterProcessingSelectionCondition</Property>
                        <Property Name="KeepReservedCondition">SecondaryResourceReleasesAfterProcessingKeepReservedCondition</Property>
                        <Property Name="ReservationTimeout">SecondaryResourceReleasesAfterProcessingReservationTimeout</Property>
                        <Property Name="OnReleasedProcess">
                          <Value>SecondaryResourceReleasesAfterProcessingOnReleasedProcess</Value>
                        </Property>
                        <Property Name="SkipReleaseCondition">SecondaryResourceReleasesAfterProcessingSkipReleaseCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="ImmediatelyTryAllocate">SecondaryResourceReleasesAfterProcessingImmediatelyTryAllocateWhenReleased</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="16" />
              </Step>
              <Step Type="Execute" Name="EnteredAddOnProcess" ID="23">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>EnteredAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Execute" Name="BeforeProcessingAddOnProcess" ID="24">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>BeforeProcessingAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfProcessTypeSpecificTime" ID="25">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">ProcessType==Enum.TaskProcessType.SpecificTime</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="26" />
              </Step>
              <Step Type="StartTasks" Name="ProcessingTasks" ID="26">
                <Properties>
                  <Property Name="TaskSequenceName">
                    <Value>ProcessingTaskSequence</Value>
                  </Property>
                  <Property Name="RandomNumberStream">ProcessingTaskSequenceRandomNumberStream</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="30" />
              </Step>
              <Step Type="AddRow" Name="BeforeProcessing" ID="27">
                <Properties>
                  <Property Name="TableName">TableRowReferenceBeforeProcessingTableName</Property>
                  <Property Name="AddRowCondition">TableRowReferenceBeforeProcessingActionType == Enum.TableRowReferenceActionType.AddNewRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="28" />
              </Step>
              <Step Type="SetRow" Name="BeforeProcessing" ID="28">
                <Properties>
                  <Property Name="TableName">TableRowReferenceBeforeProcessingTableName</Property>
                  <Property Name="RowNumber">TableRowReferenceBeforeProcessingRowNumber</Property>
                  <Property Name="SetRowCondition">TableRowReferenceBeforeProcessingActionType == Enum.TableRowReferenceActionType.ReferenceExistingRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="29" />
              </Step>
              <Step Type="Assign" Name="BeforeProcessingAssignments" ID="29">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeProcessingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeProcessingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="24" />
              </Step>
              <Step Type="Assign" Name="AfterProcessingAssignments" ID="30">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsAfterProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsAfterProcessingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsAfterProcessingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="20" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnBalkedEnteringOutputBuffer" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnBalkingAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnBalking</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnBalkingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnBalkingNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">Math.If(AssignmentsOnBalking.AssignmentsOnBalkingAssignConditionType==List.OnBalkingAssignConditionType.CustomCondition, AssignmentsOnBalking.AssignmentsOnBalkingAssignCondition&lt;=0.0, AssignmentsOnBalking.AssignmentsOnBalkingAssignConditionType!=List.OnBalkingAssignConditionType.BalkingEnteringOutputBuffer)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfDestroyEntity" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">!OutputBufferBalkNodeName.HasValue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="4">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="5" />
                <Exit Name="Failed" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="SetNode" Name="BalkNodeName" ID="5">
                <Properties>
                  <Property Name="NodeName">OutputBufferBalkNodeName</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToBalkNodeName" ID="6">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="NodeName">OutputBufferBalkNodeName</Property>
                </Properties>
              </Step>
              <Step Type="Destroy" Name="Entity" ID="7">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredOutputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">OutputBuffer.Entered</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="EndTransfer" Name="IntoOutputBuffer" ID="2">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Release" Name="Server" ID="3">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">ParentObject</Property>
                        <Property Name="QuantityType">All</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="ImmediatelyTryAllocate">ImmediatelyTryAllocateWhenReleased</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="BeforeExitingAssignments" ID="4">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeExiting</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeExitingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeExitingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Transfer" Name="ToOutputNode" ID="5">
                <Properties>
                  <Property Name="FromType">CurrentStation</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">Output</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRenegedFromOutputBuffer" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnRenegingAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnReneging</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnRenegingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnRenegingNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">Math.If(AssignmentsOnReneging.AssignmentsOnRenegingAssignConditionType==List.OnRenegingAssignConditionType.CustomCondition, AssignmentsOnReneging.AssignmentsOnRenegingAssignCondition&lt;=0.0, AssignmentsOnReneging.AssignmentsOnRenegingAssignConditionType!=List.OnRenegingAssignConditionType.RenegingFromOutputBuffer)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfDestroyEntity" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">!OutputBufferRenegeTriggers.OutputBufferRenegeNodeName.HasValue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="4">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="5" />
                <Exit Name="Failed" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="SetNode" Name="RenegeNodeName" ID="5">
                <Properties>
                  <Property Name="NodeName">OutputBufferRenegeTriggers.OutputBufferRenegeNodeName</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToRenegeNodeName" ID="6">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="NodeName">OutputBufferRenegeTriggers.OutputBufferRenegeNodeName</Property>
                </Properties>
              </Step>
              <Step Type="Destroy" Name="Entity" ID="7">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExitedOutputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">OutputBuffer.Exited</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="ExitedAddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ExitedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExitedProcessing" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">Processing.Exited</Property>
            </Properties>
            <Steps>
              <Step Type="Decide" Name="IfTokenAssociatedObject" ExclusionExpression="Math.If(OutputBufferCapacity &gt; 0, 2, 0)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">Token.AssociatedObject != Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="3" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Release" Name="Server" ExclusionExpression="OutputBufferCapacity &gt; 0" ID="3">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">ParentObject</Property>
                        <Property Name="QuantityType">All</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="ImmediatelyTryAllocate">ImmediatelyTryAllocateWhenReleased</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="ExitedAddOnProcess" ExclusionExpression="OutputBufferCapacity &gt; 0" ID="4">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ExitedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="FailureOccurrenceLogic" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Fail" Name="Server" ID="2">
                <Properties>
                  <Property Name="FailureName">
                    <Value>Failure</Value>
                  </Property>
                  <Property Name="TokenWaitAction">WaitUntilOnFailedProcessCompleted</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Delay" Name="TimeToRepair" ID="3">
                <Properties>
                  <Property Name="DelayTime">TimeToRepair</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Repair" Name="Server" ID="4">
                <Properties>
                  <Property Name="FailureName">
                    <Value>Failure</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="FailuresTimerResetEvent" ID="5">
                <Properties>
                  <Property Name="EventName">FailuresTimerReset</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Allocate" Name="Server" ID="6">
                <Properties>
                  <Property Name="ResourceType">ParentObject</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnFailed" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Suspend" Name="Processing" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>OnEnteredProcessing</Value>
                  </Property>
                  <Property Name="SuspendActions">
                    <Rows>
                      <Properties>
                        <Property Name="SuspendActionsProcessName">
                          <Value>PerformProcessingTask</Value>
                        </Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="ResourceState" ExclusionExpression="OffShiftRule == List.OffShiftRuleName.SuspendProcessing" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If((Capacity==0)&amp;&amp;(ResourceOwners&gt;Processing.NumberTransferringOut), List.ResourceStateName.Failed, ResourceState)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="OnFailedAssignments" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">False</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="FailedEvent" ID="5">
                <Properties>
                  <Property Name="EventName">Failed</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Execute" Name="FailedAddOnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>FailedAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Execute" Name="RepairingAddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RepairingAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRepaired" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Resume" Name="Processing" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>OnEnteredProcessing</Value>
                  </Property>
                  <Property Name="ResumeActions">
                    <Rows>
                      <Properties>
                        <Property Name="ResumeActionsProcessName">
                          <Value>PerformProcessingTask</Value>
                        </Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="ResourceState" ExclusionExpression="OffShiftRule == List.OffShiftRuleName.SuspendProcessing" ID="3">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ResourceState</Value>
                  </Property>
                  <Property Name="NewValue">Math.If((Capacity==0)&amp;&amp;(ResourceOwners&gt;Processing.NumberTransferringOut)&amp;&amp;(!HasActiveChangeover), List.ResourceStateName.OffShiftProcessing, (Capacity==0)&amp;&amp;(HasActiveChangeover), List.ResourceStateName.OffShiftSetup, ResourceState)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Assign" Name="OnRepairedAssignments" ID="4">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OnEvaluatingSeizeRequest.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">True</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OnEvaluatingSeizeRequest.ReturnValue</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">True</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Fire" Name="RepairedEvent" ID="5">
                <Properties>
                  <Property Name="EventName">Repaired</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Execute" Name="RepairedAddOnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RepairedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="PerformProcessingTask" BeginStepID="2">
            <Properties>
              <Property Name="TokenClassName">ProcessingTaskToken</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="ResourceState" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ResourceState</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(Capacity==0, List.ResourceStateName.OffShiftSetup, List.ResourceStateName.Setup)</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">ProcessingTasks.TaskProcessType!=Enum.TaskProcessType.SequenceDependentSetup</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ProcessingTaskToken.ExpectedSetupTime</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ProcessingTasks.TaskChangeoverLogicName.ExpectedSetupTime(ParentObject, Entity)</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">(ProcessingTasks.TaskProcessType!=Enum.TaskProcessType.SequenceDependentSetup)||(ProcessingTasks.TaskChangeoverLogicName.HasValue==False)||((Math.If(ProcessingTaskResourcesReferencedTableName.HasValue, ProcessingTaskResourcesReferencedTableName.AvailableRowCount&gt;0, ProcessingTasks.TaskResourceRequirementsResourceName.HasValue||ProcessingTasks.TaskResourceRequirementsResourceListName.HasValue)==False)&amp;&amp;(Math.If(ProcessingTaskMaterialsReferencedTableName.HasValue, ProcessingTaskMaterialsReferencedTableName.AvailableRowCount&gt;0, (ProcessingTasks.TaskMaterialRequirementsActionType==Enum.MaterialActionType.Consume)&amp;&amp;ProcessingTasks.TaskMaterialRequirementsMaterialName.HasValue)==False))</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="TaskReadyAssignments" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Value>ProcessingTaskStateAssignmentsReferencedTableName</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ProcessingTasks.TaskStateAssignmentsStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ProcessingTasks.TaskStateAssignmentsNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">ProcessingTasks.TaskStateAssignmentsTrigger!=List.TaskStateAssignmentTrigger.TaskReady</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="TaskReadyAddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ProcessingTasks.TaskReadyAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Seize" Name="TaskResources" ID="5">
                <Properties>
                  <Property Name="ResourceSeizes">
                    <Value>ProcessingTaskResourcesReferencedTableName</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">ProcessingTasks.TaskResourceRequirementsResourceType</Property>
                        <Property Name="ResourceName">ProcessingTasks.TaskResourceRequirementsResourceName</Property>
                        <Property Name="ResourceListName">ProcessingTasks.TaskResourceRequirementsResourceListName</Property>
                        <Property Name="NumberOfResources">ProcessingTasks.TaskResourceRequirementsNumberOfResources</Property>
                        <Property Name="UnitsPerResource">ProcessingTasks.TaskResourceRequirementsUnitsPerResource</Property>
                        <Property Name="SelectionGoal">ProcessingTasks.TaskResourceRequirementsSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">ProcessingTasks.TaskResourceRequirementsSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">ProcessingTasks.TaskResourceRequirementsSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">ProcessingTasks.TaskResourceRequirementsResourceEfficiency</Property>
                        <Property Name="RequestMove">ProcessingTasks.TaskResourceRequirementsRequestMove</Property>
                        <Property Name="DestinationNode">ProcessingTasks.TaskResourceRequirementsDestinationNode</Property>
                        <Property Name="OnCapacityChangedProcess">
                          <Value>OnSecondaryResourceCapacityChanged</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">Math.If(ProcessingTasks.TaskResourceRequirementsSkipRequirementCondition, True, ProcessingTasks.TaskProcessType==Enum.TaskProcessType.SequenceDependentSetup, ProcessingTaskToken.ExpectedSetupTime==0.0, False)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">ProcessingTasks.TaskResourceRequirementsMustSimultaneouslySeize</Property>
                  <Property Name="ImmediatelyTrySeize">ProcessingTasks.TaskResourceRequirementsImmediatelyTrySeize</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Consume" Name="TaskMaterials" ID="6">
                <Properties>
                  <Property Name="Materials">
                    <Value>ProcessingTaskMaterialsReferencedTableName</Value>
                    <Rows>
                      <Properties>
                        <Property Name="MaterialsConsumptionType">ProcessingTasks.TaskMaterialRequirementsConsumptionType</Property>
                        <Property Name="MaterialsMaterialName">
                          <Value>ProcessingTasks.TaskMaterialRequirementsMaterialName</Value>
                        </Property>
                        <Property Name="MaterialsInventorySiteType">ProcessingTasks.TaskMaterialRequirementsInventorySiteType</Property>
                        <Property Name="MaterialsSiteObjectName">ProcessingTasks.TaskMaterialRequirementsSiteObjectName</Property>
                        <Property Name="MaterialsQuantity">ProcessingTasks.TaskMaterialRequirementsQuantity</Property>
                        <Property Name="MaterialsLotID">ProcessingTasks.TaskMaterialRequirementsLotID</Property>
                        <Property Name="MaterialsSkipConsumptionCondition">Math.If(ProcessingTasks.TaskMaterialRequirementsActionType==Enum.MaterialActionType.Produce, True, ProcessingTasks.TaskMaterialRequirementsSkipRequirementCondition, True,ProcessingTasks.TaskProcessType==Enum.TaskProcessType.SequenceDependentSetup, ProcessingTaskToken.ExpectedSetupTime==0.0, False)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslyConsume">ProcessingTasks.TaskMaterialRequirementsMustSimultaneouslyConsume</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Assign" Name="StartingTaskAssignments" ID="7">
                <Properties>
                  <Property Name="Assignments">
                    <Value>ProcessingTaskStateAssignmentsReferencedTableName</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ProcessingTasks.TaskStateAssignmentsStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ProcessingTasks.TaskStateAssignmentsNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">ProcessingTasks.TaskStateAssignmentsTrigger!=List.TaskStateAssignmentTrigger.StartingTask</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Execute" Name="StartingTaskAddOnProcess" ID="8">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ProcessingTasks.StartingTaskAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Decide" Name="IfProcessTypeSpecificTime" ID="9">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">ProcessingTasks.TaskProcessType==Enum.TaskProcessType.SpecificTime</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="21" />
                <Exit Name="False" Type="Alternate" NextID="10" />
              </Step>
              <Step Type="Decide" Name="IfProcessTypeProcessName" ID="10">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">ProcessingTasks.TaskProcessType==Enum.TaskProcessType.ProcessName</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="20" />
                <Exit Name="False" Type="Alternate" NextID="11" />
              </Step>
              <Step Type="Decide" Name="IfProcessTypeSequenceDependentSetup" ID="11">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">ProcessingTasks.TaskProcessType==Enum.TaskProcessType.SequenceDependentSetup</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="19" />
                <Exit Name="False" Type="Alternate" NextID="12" />
              </Step>
              <Step Type="Assign" Name="SubmodelEntityType" ID="12">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ProcessingTaskToken.SubmodelEntityType</Value>
                  </Property>
                  <Property Name="NewValue">Math.If(ProcessingTasks.TaskSubmodelEntityType.HasValue, ProcessingTasks.TaskSubmodelEntityType, Entity.EntityType)</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Create" Name="SubmodelEntity" ID="13">
                <Properties>
                  <Property Name="CreateType">ProcessingTasks.TaskSubmodelEntityCreationMethod</Property>
                  <Property Name="EntityType">ProcessingTaskToken.SubmodelEntityType</Property>
                  <Property Name="SaveCreatedEntityReference">
                    <Value>ProcessingTaskToken.SubmodelEntity</Value>
                  </Property>
                </Properties>
                <Exit Name="Original" Type="Primary" NextID="17" />
                <Exit Name="Created" Type="Alternate" NextID="14" />
              </Step>
              <Step Type="Assign" Name="OriginalEntityReference" ID="14">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>ProcessingTasks.TaskSaveOriginalEntityReference</Value>
                  </Property>
                  <Property Name="NewValue">ProcessingTaskToken.TaskInfo.AssociatedObject</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="15" />
              </Step>
              <Step Type="SetNode" Name="SubmodelStartingNode" ID="15">
                <Properties>
                  <Property Name="NodeName">ProcessingTasks.TaskSubmodelStartingNode</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="16" />
              </Step>
              <Step Type="Transfer" Name="ToSubmodelStartingNode" ID="16">
                <Properties>
                  <Property Name="NodeName">ProcessingTasks.TaskSubmodelStartingNode</Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfActiveSubmodelEntity" ID="17">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">ProcessingTaskToken.SubmodelEntity!=Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="18" />
                <Exit Name="False" Type="Alternate" NextID="22" />
              </Step>
              <Step Type="Wait" Name="UntilSubmodelEntityDestroyed" ID="18">
                <Properties>
                  <Property Name="EventName">ProcessingTaskToken.SubmodelEntity.Destroyed</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="22" />
              </Step>
              <Step Type="Changeover" Name="SetupTime" ID="19">
                <Properties>
                  <Property Name="ResourceName">ParentObject</Property>
                  <Property Name="ChangeoverLogicName">
                    <Value>ProcessingTasks.TaskChangeoverLogicName</Value>
                  </Property>
                  <Property Name="DelayMultiplier">Math.If(Math.IsNaN(Token.Task.SeizedResources.AggregateEfficiency(ProcessingTasks.TaskResourceEfficiencyRule)), 1.0, Token.Task.SeizedResources.AggregateEfficiency(ProcessingTasks.TaskResourceEfficiencyRule) ^ -1)</Property>
                  <Property Name="SaveSetupTime">
                    <Value>ProcessingTaskToken.IncurredSetupTime</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="22" />
              </Step>
              <Step Type="Execute" Name="ProcessName" ID="20">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ProcessingTasks.TaskProcessName</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="22" />
              </Step>
              <Step Type="Delay" Name="ProcessingTime" ID="21">
                <Properties>
                  <Property Name="DelayTime">ProcessingTasks.TaskProcessingTime</Property>
                  <Property Name="DelayMultiplier">Math.If(Math.IsNaN(Token.Task.SeizedResources.AggregateEfficiency(ProcessingTasks.TaskResourceEfficiencyRule)), 1.0, Token.Task.SeizedResources.AggregateEfficiency(ProcessingTasks.TaskResourceEfficiencyRule) ^ -1)</Property>
                  <Property Name="Interruptible">True</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="22" />
              </Step>
              <Step Type="Assign" Name="FinishedTaskAssignments" ID="22">
                <Properties>
                  <Property Name="Assignments">
                    <Value>ProcessingTaskStateAssignmentsReferencedTableName</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ProcessingTasks.TaskStateAssignmentsStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">ProcessingTasks.TaskStateAssignmentsNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">ProcessingTasks.TaskStateAssignmentsTrigger!=List.TaskStateAssignmentTrigger.FinishedTask</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="23" />
              </Step>
              <Step Type="Execute" Name="FinishedTaskAddOnProcess" ID="23">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ProcessingTasks.FinishedTaskAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="24" />
              </Step>
              <Step Type="Produce" Name="TaskMaterials" ID="24">
                <Properties>
                  <Property Name="Materials">
                    <Value>ProcessingTaskMaterialsReferencedTableName</Value>
                    <Rows>
                      <Properties>
                        <Property Name="MaterialsProductionType">ProcessingTasks.TaskMaterialRequirementsProductionType</Property>
                        <Property Name="MaterialsMaterialName">
                          <Value>ProcessingTasks.TaskMaterialRequirementsMaterialName</Value>
                        </Property>
                        <Property Name="MaterialsInventorySiteType">ProcessingTasks.TaskMaterialRequirementsInventorySiteType</Property>
                        <Property Name="MaterialsSiteObjectName">ProcessingTasks.TaskMaterialRequirementsSiteObjectName</Property>
                        <Property Name="MaterialsQuantity">ProcessingTasks.TaskMaterialRequirementsQuantity</Property>
                        <Property Name="MaterialsLotID">ProcessingTasks.TaskMaterialRequirementsLotID</Property>
                        <Property Name="MaterialsProductionDelayTime">ProcessingTasks.TaskMaterialRequirementsProductionDelayTime</Property>
                        <Property Name="MaterialsSkipProductionCondition">Math.If(ProcessingTasks.TaskMaterialRequirementsActionType==Enum.MaterialActionType.Consume, True, ProcessingTasks.TaskMaterialRequirementsSkipRequirementCondition, True,ProcessingTasks.TaskProcessType==Enum.TaskProcessType.SequenceDependentSetup, ProcessingTaskToken.IncurredSetupTime==0.0, False)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="25" />
              </Step>
              <Step Type="Release" Name="TaskResources" ID="25">
                <Properties>
                  <Property Name="ResourceReleases">
                    <Value>ProcessingTaskResourcesReferencedTableName</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">ProcessingTasks.TaskResourceRequirementsResourceType</Property>
                        <Property Name="ResourceName">ProcessingTasks.TaskResourceRequirementsResourceName</Property>
                        <Property Name="ResourceListName">ProcessingTasks.TaskResourceRequirementsResourceListName</Property>
                        <Property Name="QuantityType">All</Property>
                        <Property Name="KeepReservedCondition">ProcessingTasks.TaskResourceRequirementsKeepReservedCondition</Property>
                        <Property Name="ReservationTimeout">ProcessingTasks.TaskResourceRequirementsReservationTimeout</Property>
                        <Property Name="SkipReleaseCondition">ProcessingTasks.TaskResourceRequirementsSkipRequirementCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="SeizedResourcesFilterType">Token</Property>
                  <Property Name="SeizedResourcesFilterToken">Token</Property>
                  <Property Name="UseStrictListReferencing">True</Property>
                  <Property Name="ImmediatelyTryAllocate">ProcessingTasks.TaskResourceRequirementsImmediatelyTryAllocateWhenReleased</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="26" />
              </Step>
              <Step Type="Assign" Name="ResourceState" ID="26">
                <Properties>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>ResourceState</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Math.If(Capacity==0, List.ResourceStateName.OffShiftProcessing, List.ResourceStateName.Processing)</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">ProcessingTasks.TaskProcessType!=Enum.TaskProcessType.SequenceDependentSetup || HasActiveChangeover</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnSecondaryResourceCapacityChanged" BeginStepID="2">
            <Properties>
              <Property Name="TokenClassName">OffShiftRuleToken</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="ObjectReferences" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>OffShiftRuleToken.Resource</Value>
                  </Property>
                  <Property Name="NewValue">Token.AssociatedObject</Property>
                  <Property Name="Assignments">
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OffShiftRuleToken.Entity</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">Token.ContextObject</Property>
                      </Properties>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>OffShiftRuleToken.DestinationNode</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">OffShiftRuleToken.Entity.SeizedResources.DestinationNodeFor(OffShiftRuleToken.Resource)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfOnShift" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">(OffShiftRuleToken.Resource.Capacity.Previous==0)&amp;&amp;(OffShiftRuleToken.Resource.Capacity&gt;0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="14" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Decide" Name="IfOffShift" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">(OffShiftRuleToken.Resource.Capacity.Previous&gt;0)&amp;&amp;(OffShiftRuleToken.Resource.Capacity==0)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Suspend" Name="Processing" ID="5">
                <Properties>
                  <Property Name="SuspendActions">
                    <Rows>
                      <Properties>
                        <Property Name="SuspendActionsProcessName">
                          <Value>OnEnteredInputBuffer</Value>
                        </Property>
                        <Property Name="SuspendActionsTokenMatchCondition">Candidate.Entity==OffShiftRuleToken.Entity</Property>
                        <Property Name="SuspendActionsObjectType"></Property>
                        <Property Name="SuspendActionsSkipSuspendCondition">Math.If(Token.Task!=Nothing, True, SecondaryResourcesForProcessingOffShiftRule==List.OffShiftRuleName.FinishWorkAlreadyStarted)</Property>
                      </Properties>
                      <Properties>
                        <Property Name="SuspendActionsProcessName">
                          <Value>OnEnteredProcessing</Value>
                        </Property>
                        <Property Name="SuspendActionsTokenMatchCondition">Candidate.Entity==OffShiftRuleToken.Entity</Property>
                        <Property Name="SuspendActionsObjectType"></Property>
                        <Property Name="SuspendActionsSkipSuspendCondition">Math.If(Token.Task!=Nothing, True, SecondaryResourcesForProcessingOffShiftRule==List.OffShiftRuleName.FinishWorkAlreadyStarted)</Property>
                      </Properties>
                      <Properties>
                        <Property Name="SuspendActionsProcessName">
                          <Value>PerformProcessingTask</Value>
                        </Property>
                        <Property Name="SuspendActionsTokenMatchCondition">Math.If(Token.Task!=Nothing, Candidate.Token.Task==Token.Task, Candidate.Entity==OffShiftRuleToken.Entity)</Property>
                        <Property Name="SuspendActionsObjectType"></Property>
                        <Property Name="SuspendActionsSkipSuspendCondition">Math.If(Token.Task!=Nothing, ProcessingTasks.TaskResourceRequirementsOffShiftRule==List.OffShiftRuleName.FinishWorkAlreadyStarted, SecondaryResourcesForProcessingOffShiftRule==List.OffShiftRuleName.FinishWorkAlreadyStarted)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfSwitchResources" ID="6">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">Math.If(Token.Task!=Nothing, ProcessingTasks.TaskResourceRequirementsOffShiftRule==List.OffShiftRuleName.SwitchResourcesIfPossible, SecondaryResourcesForProcessingOffShiftRule==List.OffShiftRuleName.SwitchResourcesIfPossible)</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Create" Name="EntityToken" ID="7">
                <Properties>
                  <Property Name="CreateType">NewToken</Property>
                  <Property Name="TokenAssociatedObject">OffShiftRuleToken.Entity</Property>
                  <Property Name="TokenContextObject">ParentObject</Property>
                </Properties>
                <Exit Name="Created" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Decide" Name="IfTaskResources" ID="8">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">Token.Task!=Nothing</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="12" />
                <Exit Name="False" Type="Alternate" NextID="9" />
              </Step>
              <Step Type="Release" Name="SecondaryResources" ID="9">
                <Properties>
                  <Property Name="OwnerType">SpecificObject</Property>
                  <Property Name="OwnerObject">
                    <Value>OffShiftRuleToken.Entity</Value>
                  </Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ResourceName">OffShiftRuleToken.Resource</Property>
                        <Property Name="QuantityType">All</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="SeizedResourcesFilterType">Task</Property>
                  <Property Name="SeizedResourcesFilterTask">Nothing</Property>
                  <Property Name="ImmediatelyTryAllocate">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ExclusionExpression="SecondaryResourcesForProcessingIsRepeatGroup == True" ID="10">
                <Properties>
                  <Property Name="OwnerType">SpecificObject</Property>
                  <Property Name="OwnerObject">
                    <Value>OffShiftRuleToken.Entity</Value>
                  </Property>
                  <Property Name="ResourceSeizes">
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourceForProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourceForProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourceForProcessingResourceListName</Property>
                        <Property Name="QuantityType">Deficient</Property>
                        <Property Name="NumberOfResources">SecondaryResourceForProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourceForProcessingUnitsPerResource</Property>
                        <Property Name="SelectionGoal">SecondaryResourceForProcessingSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">SecondaryResourceForProcessingSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourceForProcessingSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">SecondaryResourceForProcessingResourceEfficiency</Property>
                        <Property Name="RequestMove">SecondaryResourceForProcessingRequestMove</Property>
                        <Property Name="DestinationNode">SecondaryResourceForProcessingDestinationNode</Property>
                        <Property Name="OnCapacityChangedProcess">
                          <Value>OnSecondaryResourceCapacityChanged</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">SecondaryResourceForProcessingSkipRequirementCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">SecondaryResourcesForProcessingMustSimultaneouslySeize</Property>
                  <Property Name="SeizedResourcesFilterType">Task</Property>
                  <Property Name="SeizedResourcesFilterTask">Nothing</Property>
                  <Property Name="UseStrictListReferencing">True</Property>
                  <Property Name="ImmediatelyTrySeize">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="11" />
              </Step>
              <Step Type="Seize" Name="SecondaryResources" ExclusionExpression="SecondaryResourcesForProcessingIsRepeatGroup == False" ID="11">
                <Properties>
                  <Property Name="OwnerType">SpecificObject</Property>
                  <Property Name="OwnerObject">
                    <Value>OffShiftRuleToken.Entity</Value>
                  </Property>
                  <Property Name="ResourceSeizes">
                    <Value>SecondaryResourcesForProcessing</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">SecondaryResourcesForProcessingResourceType</Property>
                        <Property Name="ResourceName">SecondaryResourcesForProcessingResourceName</Property>
                        <Property Name="ResourceListName">SecondaryResourcesForProcessingResourceListName</Property>
                        <Property Name="QuantityType">Deficient</Property>
                        <Property Name="NumberOfResources">SecondaryResourcesForProcessingNumberOfResources</Property>
                        <Property Name="UnitsPerResource">SecondaryResourcesForProcessingUnitsPerResource</Property>
                        <Property Name="SelectionGoal">SecondaryResourcesForProcessingSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">SecondaryResourcesForProcessingSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">SecondaryResourcesForProcessingSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">SecondaryResourcesForProcessingResourceEfficiency</Property>
                        <Property Name="RequestMove">SecondaryResourcesForProcessingRequestMove</Property>
                        <Property Name="DestinationNode">SecondaryResourcesForProcessingDestinationNode</Property>
                        <Property Name="OnCapacityChangedProcess">
                          <Value>OnSecondaryResourceCapacityChanged</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">SecondaryResourcesForProcessing.SecondaryResourcesForProcessingSkipRequirementCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">SecondaryResourcesForProcessingMustSimultaneouslySeize</Property>
                  <Property Name="SeizedResourcesFilterType">Task</Property>
                  <Property Name="SeizedResourcesFilterTask">Nothing</Property>
                  <Property Name="UseStrictListReferencing">True</Property>
                  <Property Name="ImmediatelyTrySeize">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Release" Name="TaskResources" ID="12">
                <Properties>
                  <Property Name="OwnerType">SpecificObject</Property>
                  <Property Name="OwnerObject">
                    <Value>OffShiftRuleToken.Entity</Value>
                  </Property>
                  <Property Name="ResourceReleases">
                    <Rows>
                      <Properties>
                        <Property Name="ResourceName">OffShiftRuleToken.Resource</Property>
                        <Property Name="QuantityType">All</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="SeizedResourcesFilterType">Token</Property>
                  <Property Name="SeizedResourcesFilterToken">Token.Task.PrimaryToken</Property>
                  <Property Name="ImmediatelyTryAllocate">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Seize" Name="TaskResources" ID="13">
                <Properties>
                  <Property Name="OwnerType">SpecificObject</Property>
                  <Property Name="OwnerObject">
                    <Value>OffShiftRuleToken.Entity</Value>
                  </Property>
                  <Property Name="ResourceSeizes">
                    <Value>ProcessingTaskResourcesReferencedTableName</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ResourceType">ProcessingTasks.TaskResourceRequirementsResourceType</Property>
                        <Property Name="ResourceName">ProcessingTasks.TaskResourceRequirementsResourceName</Property>
                        <Property Name="ResourceListName">ProcessingTasks.TaskResourceRequirementsResourceListName</Property>
                        <Property Name="QuantityType">Deficient</Property>
                        <Property Name="NumberOfResources">ProcessingTasks.TaskResourceRequirementsNumberOfResources</Property>
                        <Property Name="UnitsPerResource">ProcessingTasks.TaskResourceRequirementsUnitsPerResource</Property>
                        <Property Name="SelectionGoal">ProcessingTasks.TaskResourceRequirementsSelectionGoal</Property>
                        <Property Name="SelectionValueExpression">ProcessingTasks.TaskResourceRequirementsSelectionValueExpression</Property>
                        <Property Name="SelectionCondition">ProcessingTasks.TaskResourceRequirementsSelectionCondition</Property>
                        <Property Name="ResourceEfficiency">ProcessingTasks.TaskResourceRequirementsResourceEfficiency</Property>
                        <Property Name="RequestMove">ProcessingTasks.TaskResourceRequirementsRequestMove</Property>
                        <Property Name="DestinationNode">ProcessingTasks.TaskResourceRequirementsDestinationNode</Property>
                        <Property Name="OnCapacityChangedProcess">
                          <Value>OnSecondaryResourceCapacityChanged</Value>
                        </Property>
                        <Property Name="SkipSeizeCondition">ProcessingTasks.TaskResourceRequirementsSkipRequirementCondition</Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="MustSimultaneouslySeize">ProcessingTasks.TaskResourceRequirementsMustSimultaneouslySeize</Property>
                  <Property Name="SeizedResourcesFilterType">Token</Property>
                  <Property Name="SeizedResourcesFilterToken">Token.Task.PrimaryToken</Property>
                  <Property Name="UseStrictListReferencing">True</Property>
                  <Property Name="ImmediatelyTrySeize">False</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Move" Name="Resource" ID="14">
                <Properties>
                  <Property Name="OwnerType">SpecificObject</Property>
                  <Property Name="OwnerObject">
                    <Value>OffShiftRuleToken.Entity</Value>
                  </Property>
                  <Property Name="ResourceMoveRequests">
                    <Rows>
                      <Properties>
                        <Property Name="ResourceName">OffShiftRuleToken.Resource</Property>
                        <Property Name="DestinationNode">OffShiftRuleToken.DestinationNode</Property>
                        <Property Name="SkipMoveCondition">Math.If(OffShiftRuleToken.Resource.Is.Entity, (OffShiftRuleToken.DestinationNode==Nothing)||(OffShiftRuleToken.Resource.Entity.CurrentNode==OffShiftRuleToken.DestinationNode), True)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Resume" Name="Processing" ID="15">
                <Properties>
                  <Property Name="ResumeActions">
                    <Rows>
                      <Properties>
                        <Property Name="ResumeActionsProcessName">
                          <Value>OnEnteredInputBuffer</Value>
                        </Property>
                        <Property Name="ResumeActionsTokenMatchCondition">Candidate.Entity==OffShiftRuleToken.Entity</Property>
                        <Property Name="ResumeActionsObjectType"></Property>
                        <Property Name="ResumeActionsSkipResumeCondition">Math.If(Token.Task!=Nothing, True, SecondaryResourcesForProcessingOffShiftRule==List.OffShiftRuleName.FinishWorkAlreadyStarted)</Property>
                      </Properties>
                      <Properties>
                        <Property Name="ResumeActionsProcessName">
                          <Value>OnEnteredProcessing</Value>
                        </Property>
                        <Property Name="ResumeActionsTokenMatchCondition">Candidate.Entity==OffShiftRuleToken.Entity</Property>
                        <Property Name="ResumeActionsObjectType"></Property>
                        <Property Name="ResumeActionsSkipResumeCondition">Math.If(Token.Task!=Nothing, True, SecondaryResourcesForProcessingOffShiftRule==List.OffShiftRuleName.FinishWorkAlreadyStarted)</Property>
                      </Properties>
                      <Properties>
                        <Property Name="ResumeActionsProcessName">
                          <Value>PerformProcessingTask</Value>
                        </Property>
                        <Property Name="ResumeActionsTokenMatchCondition">Math.If(Token.Task!=Nothing, Candidate.Token.Task==Token.Task, Candidate.Entity==OffShiftRuleToken.Entity)</Property>
                        <Property Name="ResumeActionsObjectType"></Property>
                        <Property Name="ResumeActionsSkipResumeCondition">Math.If(Token.Task!=Nothing, ProcessingTasks.TaskResourceRequirementsOffShiftRule==List.OffShiftRuleName.FinishWorkAlreadyStarted, SecondaryResourcesForProcessingOffShiftRule==List.OffShiftRuleName.FinishWorkAlreadyStarted)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Tokens>
          <Token Name="ProcessingTaskToken">
            <States>
              <ElementReferenceState Name="SubmodelEntity" ElementType="Entity" />
              <ElementReferenceState Name="SubmodelEntityType" ElementType="Entity" />
              <DiscreteState Name="ExpectedSetupTime" InitialValueUnits="Hours" UnitType="Time" />
              <DiscreteState Name="IncurredSetupTime" InitialValueUnits="Hours" UnitType="Time" />
            </States>
          </Token>
          <Token Name="OffShiftRuleToken">
            <States>
              <ElementReferenceState Name="Resource" ElementType="Object" />
              <ElementReferenceState Name="Entity" ElementType="Entity" />
              <ElementReferenceState Name="DestinationNode" ElementType="Node" />
            </States>
          </Token>
        </Tokens>
        <External>
          <TransferPoints>
            <ExternalNode Name="Input" Location="-1.5,0,0" ID="Input">
              <Properties>
                <Property Name="NodeClassName">BasicNode</Property>
                <Property Name="InputLocationType">Station</Property>
                <Property Name="StationName">
                  <Value>InputBuffer</Value>
                </Property>
              </Properties>
              <InitialValues>
                <InitialValue Name="SequenceExpectedOperationTime" Value="Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.$(AssociatedObjectDefinitionName).ProcessingTime, 0.0)" />
              </InitialValues>
            </ExternalNode>
            <ExternalNode Name="Output" Location="1.5,0,0" ID="Output">
              <Properties>
                <Property Name="NodeClassName">TransferNode</Property>
              </Properties>
            </ExternalNode>
          </TransferPoints>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="40ac3b5a-78c5-4e3d-b106-349426cf8bb3" />
            </SymbolInstance>
            <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="-1 0 0.5" />
                <Point Location="-4 0 0.5" />
              </Points>
            </Queue>
            <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="1 0 0.5" />
                <Point Location="4 0 0.5" />
              </Points>
            </Queue>
            <Queue Queue="Processing.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="-1 0 -1" />
                <Point Location="1 0 -1" />
              </Points>
            </Queue>
            <DefaultAdditionalSymbols>
              <DefaultAdditionalSymbol Index="0">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="1">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                      <MaterialRef Id="a6d0a510-67a1-4acc-9b32-3694f7eab0c1" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="2">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                      <MaterialRef Id="b747c0c4-fb4e-44db-876f-a97d14d00b75" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="3">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                      <MaterialRef Id="a7161262-96e7-448a-972e-968d3355335b" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="4">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                      <MaterialRef Id="b62d0f20-514d-497c-bc07-162c4b0323e5" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="5">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                      <MaterialRef Id="b7fd72e8-b5dd-469f-a806-66a8fc4fc42f" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="6">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                      <MaterialRef Id="c001da21-5cde-4252-88ec-b4ccfa042fed" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="7">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                      <MaterialRef Id="a9a61bd3-713e-40ef-8c41-34b21a3c5ff2" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
              <DefaultAdditionalSymbol Index="8">
                <SymbolInstance Center="0 0 0" ExternallyVisible="True">
                  <SymbolRef Id="[UseExternalSymbol]" />
                  <Decorations>
                    <Decoration SurfacePath="0,0" SurfaceId="0" DynamicPath="True">
                      <MaterialRef Id="ab8b73e5-3a25-46cc-be13-f5130c08136d" />
                    </Decoration>
                  </Decorations>
                </SymbolInstance>
              </DefaultAdditionalSymbol>
            </DefaultAdditionalSymbols>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
        <Dashboard>
          <Graphics>
            <StatusLabel Center="-5 0 -1.5" Width="10" Height="1" ExternallyVisible="True" BackColor="00ffffff" TextColor="0000ff" Expression="&quot;InputBuffer&quot;" />
            <StatusLabel Center="1.875 0 -1.5" Width="3.75" Height="1" ExternallyVisible="True" Expression="InputBuffer.Contents" />
            <Plot Center="11 0 2" Width="14" Height="8" ExternallyVisible="True" Title="InputBuffer.Contents" XAxisLabel="Time" YAxisLabel="Value" Look="Chameleon;Office">
              <Range Type="Hours">1</Range>
              <PlotLines>
                <PlotLine Expression="InputBuffer.Contents" />
              </PlotLines>
            </Plot>
            <StatusLabel Center="-5 0 0" Width="10" Height="1" ExternallyVisible="True" BackColor="00ffffff" TextColor="0000ff" Expression="&quot;OutputBuffer&quot;" />
            <StatusLabel Center="1.875 0 0" Width="3.75" Height="1" ExternallyVisible="True" Expression="OutputBuffer.Contents" />
            <StatusLabel Center="-5 0 1.5" Width="10" Height="1" ExternallyVisible="True" BackColor="00ffffff" TextColor="0000ff" Expression="&quot;Processing&quot;" />
            <StatusLabel Center="1.875 0 1.5" Width="3.75" Height="1" ExternallyVisible="True" Expression="Processing.Contents" />
          </Graphics>
        </Dashboard>
      </FixedDefinition>
      <FixedDefinition Name="Sink" Id="5f44138f-a5f7-40d1-ab9a-eea7c5f0254e" Revision="69" FileVersion="233" Author="Simio Employee" Description="A Sink object may be used to destroy entities that have finished processing in the model." CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="34">Version 2.37: Updated the Sink object to use the string '[DynamicObjects]' as the Data Source field for classifying the sink's 'Time In System' tally statistic results.</ChangeDescription>
          <ChangeDescription Version="36">Version 2.39: Updated the Sink object process logic to specify all of the object's process delays as non-interruptible. Added a 'State Assignments' property category.</ChangeDescription>
          <ChangeDescription Version="37">Version 2.40: In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="39">Version 2.41: Specified the Unit Type property of the Sink object's 'TimeInSystem' TallyStatistic as 'Time'. Updated the assignments repeat groups to take state units into account.</ChangeDescription>
          <ChangeDescription Version="41">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object. Changed the Category field for classifying the sink's 'Time In System' tally statistic results.</ChangeDescription>
          <ChangeDescription Version="42">Version 3.47: Add new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="43">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'.</ChangeDescription>
          <ChangeDescription Version="45">Version 3.54: Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="48">Version 4.58: 'Data Source' results classification for 'TimeInSystem' tally statistic is now 'DestroyedObjects'. Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="50">Version 4.61: Added new 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="53">Version 4.62: Added new 'Financials-&gt;Buffer Costs' property category.</ChangeDescription>
          <ChangeDescription Version="54">Version 4.63: Reordered the position of the 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="56">Version 4.68: Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'.</ChangeDescription>
          <ChangeDescription Version="57">Version 5.91: Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
          <ChangeDescription Version="58">Version 6.98: Added new 'Log Time In System Observations' property (Advanced Options).</ChangeDescription>
          <ChangeDescription Version="59">Version 6.103: Some property description updates.</ChangeDescription>
          <ChangeDescription Version="60">Version 7.130: Required update due to BasicNode object updates.</ChangeDescription>
          <ChangeDescription Version="61">Version 7.131: Required update due to BasicNode object updates.</ChangeDescription>
          <ChangeDescription Version="62">Version 8.133: Required update due to BasicNode object updates.</ChangeDescription>
          <ChangeDescription Version="63">Version 8.134: Required update due to BasicNode object updates.</ChangeDescription>
          <ChangeDescription Version="64">Version 8.135: Hide the inherited 'ExpectedSetupTimeExpression' and 'ExpectedOperationTimeExpression' properties.</ChangeDescription>
          <ChangeDescription Version="65">Version 8.137: Required update due to BasicNode object updates.</ChangeDescription>
          <ChangeDescription Version="66">Version 8.147: Property description string updates.</ChangeDescription>
          <ChangeDescription Version="67">Version 12.212: Required update due to BasicNode and TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="69">Version 14.225: Updated External View graphics to rotate with object.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="56" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
        </ChangeStringReplacements>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Process Logic" Description="Process Logic" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Buffer Costs" Description="Buffer Costs" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <ExpressionProperty Name="TransferInTime" DisplayName="Transfer-In Time" Description="The time required to transfer an entity into this object." ComplexityLevel="Advanced" Category="Process Logic" DefaultValue="0.0" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <RepeatingProperty Name="AssignmentsOnEntering" DisplayName="On Entering" Description="Optional state assignments when an entity is entering the object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsOnEnteringStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnEnteringNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnEnteringStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="EnteredAddOnProcess" DisplayName="Entered" Description="Occurs immediately after an entity has entered this object and is about to start the 'Transfer-In Time'." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="DestroyingEntityAddOnProcess" DisplayName="Destroying Entity" Description="Occurs when an entity is about to be destroyed by this Sink object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ExpressionProperty Name="CapitalCost" DisplayName="Capital Cost" Description="The initial one-time setup cost to add this object to the system." ComplexityLevel="Advanced" Category="Financials" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <ExpressionProperty Name="InputBufferCostPerUse" DisplayName="Cost Per Use" Description="The cost to hold an entity in this buffer irrespective of the waiting time." ComplexityLevel="Advanced" Category="Financials/Buffer Costs/Input Buffer" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <ExpressionProperty Name="InputBufferHoldingCostRate" DisplayName="Holding Cost Rate" Description="The cost per unit time to hold an entity in this buffer." ComplexityLevel="Advanced" Category="Financials/Buffer Costs/Input Buffer" DefaultValue="0.0" NullString="null" UnitType="CurrencyPerTimeUnit" />
          <BooleanProperty Name="LogTimeInSystemObservations" DisplayName="Log Time In System Observations" Description="Indicates whether the time in system observations on entities destroyed by this Sink object are to be automatically logged. Go to Results -&gt; Logs -&gt; Tally Observation Log to view the logged data." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="False" Required="False" NullString="null" />
          <Overrides>
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="IncludeInPlanResourceConstraints" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="InitialWorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="TransferOutConstraintsType" Visible="False" />
            <Override Name="TransferOutCondition" Visible="False" />
            <Override Name="ExpectedSetupTimeExpression" Visible="False" />
            <Override Name="ExpectedOperationTimeExpression" Visible="False" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="55" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="BasicNode" />
        </UsedObjects>
        <Elements>
          <Element Type="TallyStatistic" Name="TimeInSystem" Scope="Public" Description="The tally statistic that records time in system observations on entities destroyed by this Sink object.">
            <Properties>
              <Property Name="UnitType">Time</Property>
              <Property Name="DataSource">[DestroyedEntities]</Property>
              <Property Name="Category">FlowTime</Property>
              <Property Name="DataItem">TimeInSystem</Property>
              <Property Name="LogObservations">LogTimeInSystemObservations</Property>
            </Properties>
          </Element>
          <Element Type="Station" Name="InputBuffer" Scope="Public" Description="The location inside the sink that entities enter to be destroyed.">
            <Properties>
              <Property Name="EntryDynamicSelectionRule">
                <Value>None</Value>
              </Property>
              <Property Name="CostPerUse" Units="USD">InputBufferCostPerUse</Property>
              <Property Name="HoldingCostRate" Units="USD per Hour">InputBufferHoldingCostRate</Property>
            </Properties>
          </Element>
          <Element Type="CostCenter" Name="CapitalCosts">
            <Properties>
              <Property Name="InitialCost" Units="USD">CapitalCost</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DataSource">[Object]</Property>
              <Property Name="DataItem">"CapitalCost"</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitializedAddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunInitializedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEndingAddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunEndingAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredInputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">InputBuffer.Entered</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="EnteredAddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>EnteredAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Delay" Name="TransferInTime" ID="4">
                <Properties>
                  <Property Name="DelayTime">TransferInTime</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="EndTransfer" Name="IntoInputBuffer" ID="5">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Execute" Name="DestroyingEntityAddOnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>DestroyingEntityAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Tally" Name="TimeInSystem" ID="7">
                <Properties>
                  <Property Name="TallyStatisticName">
                    <Value>TimeInSystem</Value>
                  </Property>
                  <Property Name="ValueExpression">Entity.TimeInSystem</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Destroy" Name="Entity" ID="8">
                <Properties />
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <TransferPoints>
            <ExternalNode Name="Input" Location="-1.25,0,0" ID="Input">
              <Properties>
                <Property Name="NodeClassName">BasicNode</Property>
                <Property Name="InputLocationType">Station</Property>
                <Property Name="StationName">
                  <Value>InputBuffer</Value>
                </Property>
              </Properties>
            </ExternalNode>
          </TransferPoints>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="f5b0a0b7-4274-403c-981c-33d4b6e077a5" />
            </SymbolInstance>
            <Queue Queue="InputBuffer.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="-1 0 0.5" />
                <Point Location="-4 0 0.5" />
              </Points>
            </Queue>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
        <Dashboard>
          <Graphics>
            <StatusLabel Center="-5 0 -1.5" Width="10" Height="1" ExternallyVisible="True" BackColor="00ffffff" TextColor="0000ff" Expression="&quot;InputBuffer&quot;" />
            <StatusLabel Center="1.875 0 -1.5" Width="3.75" Height="1" ExternallyVisible="True" Expression="InputBuffer.Contents" />
            <Plot Center="11 0 2" Width="14" Height="8" ExternallyVisible="True" Title="InputBuffer.Contents" XAxisLabel="Time" YAxisLabel="Value" Look="Chameleon;Office">
              <Range Type="Hours">1</Range>
              <PlotLines>
                <PlotLine Expression="InputBuffer.Contents" />
              </PlotLines>
            </Plot>
          </Graphics>
        </Dashboard>
      </FixedDefinition>
      <FixedDefinition Name="Source" Id="1d0ccf22-61f9-4fc0-9b3c-01d17e71402d" Revision="124" FileVersion="233" Author="Simio Employee" Description="A Source object may be used to generate entities of a specified type." CheckBaseForAdvancedProperties="True">
        <ChangeDescriptions>
          <ChangeDescription Version="36">Version 2.37: Updated the Source object to provide an 'Initial Number Entities' option for the 'On Event' arrival mode, for creating an initial number of entities at the beginning of the simulation run in addition to entities created by the specified Event Name. Also added a 'Rate Scale Factor' option for the 'Time Varying Arrival Rate' arrival mode, for scaling the arrival rate values specified in the rate table.</ChangeDescription>
          <ChangeDescription Version="40">Version 2.39: Updated the Source object to provide a 'State Assignments' property category.</ChangeDescription>
          <ChangeDescription Version="48">Version 2.40: Updated the Source object to provide a 'Table Reference Assignment' property category. In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="50">Version 2.41: Updated the Source object to provide a 'Stopping Conditions' property category. Updated the assignments repeat groups to take state units into account.</ChangeDescription>
          <ChangeDescription Version="51">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object.</ChangeDescription>
          <ChangeDescription Version="54">Version 3.47: Renamed 'Table Reference Assignment' property category to 'Table Reference Assignments'. Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="58">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'.</ChangeDescription>
          <ChangeDescription Version="67">Version 3.54: Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger. For the 'Arrival Table' arrival mode option, added new 'Arrival Time Deviation','No-Show Probability', and 'Repeat Arrival Pattern' features. Also, to support the 'Maximum Time' stopping condition, the Source object's logic now takes advantage of a new 'Maximum Time' feature in the Timer element rather than using a Delay step-based approach.</ChangeDescription>
          <ChangeDescription Version="68">Version 3.56: For the 'Arrival Table' arrival mode option, added new 'Arrival Events Per Time Slot' feature.</ChangeDescription>
          <ChangeDescription Version="70">Version 4.58: Added new 'Advanced Options' property category.</ChangeDescription>
          <ChangeDescription Version="72">Version 4.61: Added new 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="74">Version 4.62: Added new 'Financials-&gt;Buffer Costs' property category.</ChangeDescription>
          <ChangeDescription Version="75">Version 4.63: Reordered the position of the 'Financials' property category.</ChangeDescription>
          <ChangeDescription Version="77">Version 4.68: Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'.</ChangeDescription>
          <ChangeDescription Version="78">Version 4.73: Renamed 'EventName' property to 'TriggeringEventName'. Renamed 'EventCount' property to 'TriggeringEventCount'.</ChangeDescription>
          <ChangeDescription Version="80">Version 4.78: Renamed 'Arrival Logic' property category to 'Entity Arrival Logic'.</ChangeDescription>
          <ChangeDescription Version="81">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="83">Version 5.90: 'Before Creating Entities' table reference assignments are now supported by the 'Initial Number Entities' feature if using the 'On Event' arrival mode.</ChangeDescription>
          <ChangeDescription Version="86">Version 5.91: Version update to support TransferNode object update. Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
          <ChangeDescription Version="87">Version 6.103: Some property description updates.</ChangeDescription>
          <ChangeDescription Version="88">Version 6.106: Required update due to TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="89">Version 7.122: Required update due to TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="90">Version 7.123: Required update due to TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="91">Version 7.130: Added new 'Entity Arrival Logic -&gt; Other Arrival Stream Options' property category.</ChangeDescription>
          <ChangeDescription Version="92">Version 7.130: Required update due to TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="96">Version 7.131: Required update due to TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="97">Version 8.133: Required update due to TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="98">Version 8.134: Required update due to TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="99">Version 8.135: Hide the inherited 'ExpectedSetupTimeExpression' and 'ExpectedOperationTimeExpression' properties.</ChangeDescription>
          <ChangeDescription Version="100">Version 8.137: Required update due to TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="101">Version 8.139: Added new 'Buffer Capacities' property category.</ChangeDescription>
          <ChangeDescription Version="102">Version 8.141: Required update due to TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="104">Version 8.145: 'Redirect Location Type' property of OutputBuffer station specified as 'ParentExternalNode' with redirect external node name 'Output'. Created entities now first transferred into an infinite capacity 'Processing' station before transferring into the source's OutputBuffer station.</ChangeDescription>
          <ChangeDescription Version="105">Version 8.146: Renamed 'Buffer Capacity' property category to 'Buffer Logic'. Added output buffer balking options.</ChangeDescription>
          <ChangeDescription Version="106">Version 8.147: Renamed 'Table Reference Assignments' property category to 'Table Row Referencing'. Added ability to table row referencing options to either add a new table row (automatically setting a reference to the new row) or reference an existing row.</ChangeDescription>
          <ChangeDescription Version="108">Version 9.149: Added Buffer Logic -&gt; Balking &amp; Reneging Options -&gt; Renege Triggers.</ChangeDescription>
          <ChangeDescription Version="109">Version 9.156: OnRunInitialized process logic - Added an Exclusion Expression for the Decide step that checks whether to create initial entities if the Arrival Mode is 'On Event'.</ChangeDescription>
          <ChangeDescription Version="110">Version 9.158: Required update due to TransferNode object update.</ChangeDescription>
          <ChangeDescription Version="111">Version 9.161: Required update due to TransferNode object update.</ChangeDescription>
          <ChangeDescription Version="112">Version 9.164: Required update due to TransferNode object update.</ChangeDescription>
          <ChangeDescription Version="113">Version 9.170: Property description updates.</ChangeDescription>
          <ChangeDescription Version="114">Version 10.174: Required update due to TransferNode object update.</ChangeDescription>
          <ChangeDescription Version="115">Version 10.176: Required update due to TransferNode object update.</ChangeDescription>
          <ChangeDescription Version="116">Version 10.180: Some property description updates.</ChangeDescription>
          <ChangeDescription Version="117">Version 11.193: Required update due to TransferNode object update.</ChangeDescription>
          <ChangeDescription Version="118">Version 12.203: Required update due to TransferNode object update.</ChangeDescription>
          <ChangeDescription Version="119">Version 12.212: Required update due to BasicNode and TransferNode object updates.</ChangeDescription>
          <ChangeDescription Version="120">Version 12.214: Renamed 'Repeat Arrival Pattern' property category to 'Repeating Arrival Pattern'.</ChangeDescription>
          <ChangeDescription Version="122">Version 14.225: Updated External View graphics to rotate with object.</ChangeDescription>
          <ChangeDescription Version="124">Version 14.231: Required update due to TransferNode object update.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="77" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
        </ChangeStringReplacements>
        <Lists>
          <StringList Name="OnBalkingAssignConditionType">
            <Items>
              <Item Value="BalkingEnteringOutputBuffer" />
              <Item Value="CustomCondition" />
            </Items>
          </StringList>
          <StringList Name="OnRenegingAssignConditionType">
            <Items>
              <Item Value="RenegingFromOutputBuffer" />
              <Item Value="CustomCondition" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Entity Arrival Logic" Description="Entity Arrival Logic" />
            <Category Name="Entity Arrival Logic/Other Arrival Stream Options" Description="Entity Arrival Logic/Other Arrival Stream Options" InitiallyExpanded="False" />
            <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
            <Category Name="Buffer Logic" Description="Buffer Logic" InitiallyExpanded="False" />
            <Category Name="Buffer Logic/Output Buffer" Description="Output Buffer Logic" />
            <Category Name="Buffer Logic/Output Buffer/Balking &amp; Reneging Options" Description="Output Buffer Balking &amp; Reneging Options" InitiallyExpanded="False" />
            <Category Name="Table Row Referencing" Description="Optional Table Row Reference Actions" InitiallyExpanded="False" />
            <Category Name="Table Row Referencing/Before Creating Entities" Description="Table Row Reference Actions Before Creating Entities" InitiallyExpanded="False" />
            <Category Name="Table Row Referencing/On Created Entity" Description="Table Row Reference Actions On Created Entity" InitiallyExpanded="False" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Financials/Buffer Costs" Description="Buffer Costs" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
          </Categories>
          <DynamicObjectInstanceProperty Name="EntityType" DisplayName="Entity Type" Description="The type of entities created by this Source object." Category="Entity Arrival Logic" DefaultValue="null" NullString="null" ValidObjectType="Agent" LocationType="Cartesian" />
          <EnumProperty Name="ArrivalMode" DisplayName="Arrival Mode" Description="The method used by this Source object to generate a stream of entity arrivals." Category="Entity Arrival Logic" DefaultValue="Interarrival Time" NullString="null" EnumType="TimerIntervalType">
            <Captions>
              <Caption Value="Time" Display="Interarrival Time" />
              <Caption Value="TimeInState" Display="" Visible="False" />
              <Caption Value="RateTable" Display="Time Varying Arrival Rate" />
              <Caption Value="EventCount" Display="On Event" />
              <Caption Value="ArrivalTable" Display="Arrival Table" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="TimeOffset" DisplayName="Time Offset" Description="Expression that is evaluated once at the beginning of the simulation run. Indicates the time offset until the first arrival at this Source object." Category="Entity Arrival Logic" DefaultValue="0.0" NullString="null" UnitType="Time" DefaultUnits="Minutes">
            <Switch Property="ArrivalMode" Value="Time" />
          </ExpressionProperty>
          <ExpressionProperty Name="InterarrivalTime" DisplayName="Interarrival Time" Description="Expression that is evaluated whenever an arrival occurs at this Source object. Indicates the time until the next arrival. This property may be specified using a random sample from a distribution (typically the exponential distribution)." Category="Entity Arrival Logic" DefaultValue="Random.Exponential(.25)" NullString="null" UnitType="Time" DefaultUnits="Minutes">
            <Switch Property="ArrivalMode" Value="Time" />
          </ExpressionProperty>
          <RateTableProperty Name="RateTable" DisplayName="Rate Table" Description="The rate table that defines how the rate of entity arrival events changes over time, the interarrival times following a non-stationary poisson process." Category="Entity Arrival Logic" NullString="null">
            <Switch Property="ArrivalMode" Value="RateTable" />
          </RateTableProperty>
          <ExpressionProperty Name="RateScaleFactor" DisplayName="Rate Scale Factor" Description="The factor used to scale the arrival rate values specified in the rate table." Category="Entity Arrival Logic" DefaultValue="1.0" NullString="null">
            <Switch Property="ArrivalMode" Value="RateTable" />
          </ExpressionProperty>
          <ExpressionProperty Name="InitialNumberEntities" DisplayName="Initial Number Entities" Description="An initial number of entities to be created by this Source object at the beginning of the simulation run, in addition to entities created by the 'On Event' arrival mode. Note that this initial entity creation is not included in (counted against) the arrival mode's Maximum Arrivals." Category="Entity Arrival Logic" DefaultValue="0" NullString="null">
            <Switch Property="ArrivalMode" Value="EventCount" />
          </ExpressionProperty>
          <EventProperty Name="TriggeringEventName" DisplayName="Triggering Event Name" Description="The name of the event whose occurrences determine when the next entity arrival occurs at this Source object." Category="Entity Arrival Logic" NullString="null">
            <Switch Property="ArrivalMode" Value="EventCount" />
          </EventProperty>
          <ExpressionProperty Name="TriggeringEventCount" DisplayName="Triggering Event Count" Description="The number of triggering event occurrences required to trigger the next entity arrival at this Source object." Category="Entity Arrival Logic" DefaultValue="1" NullString="null">
            <Switch Property="ArrivalMode" Value="EventCount" />
          </ExpressionProperty>
          <TableAndColumnProperty Name="ArrivalTimeProperty" DisplayName="Arrival Time Property" Description="The name of the numeric table property (table column) that contains the discrete times when arrival events are expected to occur.&#xD;&#xA;&#xD;&#xA;When an arrival event occurs, a reference to the table row holding the arrival time will be automatically assigned to any individual entities created by the event." Category="Entity Arrival Logic" NullString="null">
            <Switch Property="ArrivalMode" Value="ArrivalTable" />
          </TableAndColumnProperty>
          <ExpressionProperty Name="ArrivalEventsPerTimeSlot" DisplayName="Arrival Events Per Time Slot" Description="&#xD;&#xA;The number of arrival events expected to occur at each of the discrete times defined in the Arrival Time Property. When an arrival event occurs, the actual number of entities created (i.e., the arrival 'batch size') is then determined by the Entities Per Arrival property.&#xD;&#xA;&#xD;&#xA;To vary the number of arrival events for each time slot, add a numeric column that contains those values to the referenced arrival table. Then specify the name of that table column here." ComplexityLevel="Advanced" Category="Entity Arrival Logic/Other Arrival Stream Options" DefaultValue="1" NullString="null">
            <Switch Property="ArrivalMode" Value="ArrivalTable" />
          </ExpressionProperty>
          <ExpressionProperty Name="ArrivalTimeDeviation" DisplayName="Arrival Time Deviation" Description="Expression used to model differences (typically random) between the scheduled times in the arrival table and the actual times during a simulation run that each arrival event occurs.&#xD;&#xA;&#xD;&#xA;The specified expression may return a negative or positive value. A negative value indicates that the actual arrival time will occur earlier than the scheduled time by that duration. A positive value indicates that the actual arrival time will occur later than the scheduled time by that duration.&#xD;&#xA;&#xD;&#xA;To vary the arrival time deviation for each time slot, add an expression column that contains those expressions to the referenced arrival table. Then specify the name of that table column here.&#xD;&#xA;&#xD;&#xA;NOTE: This feature is automatically disabled if random sampling in the simulation run is disabled." ComplexityLevel="Advanced" Category="Entity Arrival Logic/Other Arrival Stream Options" DefaultValue="0.0" NullString="null" UnitType="Time">
            <Switch Property="ArrivalMode" Value="ArrivalTable" />
          </ExpressionProperty>
          <ExpressionProperty Name="ArrivalNoShowProbability" DisplayName="Arrival No-Show Probability" Description="The probability that a scheduled arrival in the arrival pattern will be a no-show and thus the timer's event not actually fired. Enter the chance of a no-show as a value between 0.0 (0%) and 1.0 (100%).&#xD;&#xA;&#xD;&#xA;To vary the no-show probability for each time slot, add a numeric column that contains those probabilities to the referenced arrival table. Then specify the name of that table column here.&#xD;&#xA;&#xD;&#xA;NOTE: This feature is automatically disabled if random sampling in the simulation run is disabled." ComplexityLevel="Advanced" Category="Entity Arrival Logic/Other Arrival Stream Options" DefaultValue="0.0" NullString="null">
            <Switch Property="ArrivalMode" Value="ArrivalTable" />
          </ExpressionProperty>
          <ExpressionProperty Name="EntitiesPerArrival" DisplayName="Entities Per Arrival" Description="The number of entities that will be created by this Source object for each arrival event." Category="Entity Arrival Logic" DefaultValue="1" NullString="null" />
          <EnumProperty Name="RepeatingArrivalPattern" DisplayName="Repeating Arrival Pattern" Description="Indicates whether the arrival pattern in the table should be repeated when the end of the pattern is reached." Category="Entity Arrival Logic" DefaultValue="False" NullString="null" EnumType="BooleanType">
            <Switch Property="ArrivalMode" Value="ArrivalTable" />
          </EnumProperty>
          <ExpressionProperty Name="EntityArrivalsRandomNumberStream" DisplayName="Entity Arrivals Random Number Stream" Description="The random number stream used to generate interarrival times (if rate table) or make probabilistic no-show decisions (if arrival table)." ComplexityLevel="Advanced" Category="Advanced Options" DefaultValue="0" NullString="null">
            <Switch Property="ArrivalMode" Value="ArrivalTable, RateTable" />
          </ExpressionProperty>
          <ExpressionProperty Name="MaximumArrivals" DisplayName="Maximum Arrivals" Description="A limit on the total number of arrivals to be automatically generated by this Source object during the simulation run." Category="Stopping Conditions" DefaultValue="Infinity" NullString="null" />
          <ExpressionProperty Name="MaximumTime" DisplayName="Maximum Time" Description="The maximum time from the beginning of the simulation run after which this Source object will stop generating arrivals." ComplexityLevel="Advanced" Category="Stopping Conditions" DefaultValue="Infinity" NullString="null" UnitType="Time" />
          <EventProperty Name="StopEventName" DisplayName="Stop Event Name" Description="The name of an event whose occurrence will trigger this Source object to stop generating arrivals for the remainder of the simulation run." ComplexityLevel="Advanced" Category="Stopping Conditions" Required="False" NullString="null" />
          <IntegerProperty Name="OutputBufferCapacity" DisplayName="Capacity" Description="The number of discrete entities that can be held in the buffer." ComplexityLevel="Advanced" Category="Buffer Logic/Output Buffer" DefaultValue="Infinity" NullString="null" />
          <EnumProperty Name="OutputBufferBalkDecisionType" DisplayName="Balk Decision Type" Description="The method used by an entity to decide whether to balk at entering the buffer.&#xD;&#xA;&#xD;&#xA;If the decision type is ‘Blocked’, then an entity attempting to enter the buffer will balk if the buffer is full rather than be blocked. Or, if a zero capacity buffer, the entity will balk if its attempt to transfer directly into or out of the object is blocked." ComplexityLevel="Advanced" Category="Buffer Logic/Output Buffer/Balking &amp; Reneging Options" DefaultValue="Blocked" NullString="null" EnumType="BalkEnteringDecisionType" />
          <ExpressionProperty Name="OutputBufferBalkConditionOrProbability" DisplayName="Balk Condition Or Probability" Description="The balk condition or probability specified as an expression. If a probability then enter the chance of balking as a value between 0.0 (0%) and 1.0 (100%)." ComplexityLevel="Advanced" Category="Buffer Logic/Output Buffer/Balking &amp; Reneging Options" DefaultValue="0.0" NullString="null">
            <Switch Property="OutputBufferBalkDecisionType" Comparison="GreaterThan" Value="Blocked" />
          </ExpressionProperty>
          <NodeProperty Name="OutputBufferBalkNodeName" DisplayName="Balk Node Name" Description="Facility node location to send an entity that has balked at entering the buffer." ComplexityLevel="Advanced" Category="Buffer Logic/Output Buffer/Balking &amp; Reneging Options" DefaultValue="None (Destroy Entity)" Required="False" NullString="None (Destroy Entity)" ValidObjectType="Node" LocationType="Cartesian">
            <Switch Property="OutputBufferBalkDecisionType" Comparison="NotEqual" Value="None" />
          </NodeProperty>
          <RepeatingProperty Name="OutputBufferRenegeTriggers" DisplayName="Renege Triggers" Description="Optional time or event-driven triggers that can cause entities to abandon waiting in the buffer." ComplexityLevel="Advanced" Category="Buffer Logic/Output Buffer/Balking &amp; Reneging Options" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Renege Trigger" Description="Renege Trigger" />
                <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
              </Categories>
              <EnumProperty Name="OutputBufferRenegeTriggerType" DisplayName="Trigger Type" Description="The type of trigger.&#xD;&#xA;&#xD;&#xA;A time based trigger can renege an entity from the buffer once a specified wait duration expires.&#xD;&#xA;&#xD;&#xA;An event based trigger can renege an entity from the buffer whenever a specified event occurs." Category="Renege Trigger" DefaultValue="Time Based" NullString="null" EnumType="RenegeTriggerType">
                <Captions>
                  <Caption Value="TimeBased" Display="Time Based" />
                  <Caption Value="EventBased" Display="Event Based" />
                </Captions>
              </EnumProperty>
              <ExpressionProperty Name="OutputBufferRenegeWaitDuration" DisplayName="Wait Duration" Description="The wait duration until deciding whether to renege an entity from the buffer." Category="Renege Trigger" DefaultValue="0.0" NullString="null" UnitType="Time">
                <Switch Property="OutputBufferRenegeTriggerType" Value="TimeBased" />
              </ExpressionProperty>
              <EventProperty Name="OutputBufferRenegeTriggeringEventName" DisplayName="Triggering Event Name" Description="The name of the event whose occurrence will trigger a decision whether to renege an entity from the buffer." Category="Renege Trigger" Required="False" NullString="null">
                <Switch Property="OutputBufferRenegeTriggerType" Value="EventBased" />
              </EventProperty>
              <EnumProperty Name="OutputBufferRenegeDecisionType" DisplayName="Renege Decision Type" Description="The method used when the trigger has fired to decide whether to renege an entity from the buffer." Category="Renege Trigger" DefaultValue="Always" NullString="null" EnumType="RenegeDecisionType" />
              <ExpressionProperty Name="OutputBufferRenegeConditionOrProbability" DisplayName="Renege Condition Or Probability" Description="The renege condition or probability specified as an expression. If a probability then enter the chance of reneging as a value between 0.0 (0%) and 1.0 (100%).&#xD;&#xA;&#xD;&#xA;NOTE: If it is necessary to check in a conditional expression whether an entity is currently waiting for a specific type of constraint, the entity ‘Queuing’ namespace provides several functions for that purpose (e.g., Entity.Queuing.IsWaitingRidePickupQueue)." Category="Renege Trigger" DefaultValue="0.0" NullString="null">
                <Switch Property="OutputBufferRenegeDecisionType" Comparison="NotEqual" Value="Always" />
              </ExpressionProperty>
              <NodeProperty Name="OutputBufferRenegeNodeName" DisplayName="Renege Node Name" Description="Facility node location to send a reneging entity." Category="Renege Trigger" DefaultValue="None (Destroy Entity)" Required="False" NullString="None (Destroy Entity)" ValidObjectType="Node" LocationType="Cartesian" />
              <EnumProperty Name="OutputBufferRenegeTriggerStartBoundary" DisplayName="Trigger Start Boundary" Description="Indicates when the trigger becomes active for an entity occupying the buffer. Can be either immediately when the entity has entered the buffer or, alternatively, not until its transfer into the buffer has been ended (e.g., after a transfer-in time or any other entry related logic)." Category="Advanced Options" DefaultValue="Ended Transfer In" NullString="null" EnumType="RenegeTriggerStartBoundary">
                <Captions>
                  <Caption Value="EndedTransferIn" Display="Ended Transfer In" />
                </Captions>
              </EnumProperty>
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsBeforeExiting" DisplayName="Before Exiting" Description="Optional state assignments when an entity is ready to exit the object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <StateProperty Name="AssignmentsBeforeExitingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsBeforeExitingNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsBeforeExitingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnBalking" DisplayName="On Balking" Description="Optional state assignments when an entity is balking at entering an input or output buffer of the object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <ListProperty Name="AssignmentsOnBalkingAssignConditionType" DisplayName="Assign If" Description="Condition required to perform the assignment." Category="Basic Logic" DefaultValue="Balking Entering Output Buffer" NullString="null" List="OnBalkingAssignConditionType">
                <Captions>
                  <Caption Value="BalkingEnteringOutputBuffer" Display="Balking Entering Output Buffer" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="AssignmentsOnBalkingAssignCondition" DisplayName="Condition" Description="The condition required to perform the assignment." Category="Basic Logic" DefaultValue="0.0" Parent="AssignmentsOnBalkingAssignConditionType" NullString="null">
                <Switch Property="AssignmentsOnBalkingAssignConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <StateProperty Name="AssignmentsOnBalkingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnBalkingNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnBalkingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="AssignmentsOnReneging" DisplayName="On Reneging" Description="Optional state assignments when an entity is reneging from an input or output buffer of the object." ComplexityLevel="Advanced" Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <ListProperty Name="AssignmentsOnRenegingAssignConditionType" DisplayName="Assign If" Description="Condition required to perform the assignment." Category="Basic Logic" DefaultValue="Reneging From Output Buffer" NullString="null" List="OnRenegingAssignConditionType">
                <Captions>
                  <Caption Value="RenegingFromOutputBuffer" Display="Reneging From Output Buffer" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="AssignmentsOnRenegingAssignCondition" DisplayName="Condition" Description="The condition required to perform the assignment." Category="Basic Logic" DefaultValue="0.0" Parent="AssignmentsOnRenegingAssignConditionType" NullString="null">
                <Switch Property="AssignmentsOnRenegingAssignConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <StateProperty Name="AssignmentsOnRenegingStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnRenegingNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnRenegingStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <EnumProperty Name="TableRowReferenceBeforeCreatingEntitiesActionType" DisplayName="Action Type" Description="The type of table row reference action to perform.&#xD;&#xA;&#xD;&#xA;The ‘Reference Existing Row’ action type may be used to set a reference to an existing row in a data table or sequence table. The row index into the table is specified by the Row Number property.&#xD;&#xA;&#xD;&#xA;The ‘Add New Row’ action type may be used to add a new row to an output table. A reference will be automatically set to the newly added row." ComplexityLevel="Advanced" Category="Table Row Referencing/Before Creating Entities" DefaultValue="Reference Existing Row" NullString="null" EnumType="TableRowReferenceActionType">
            <Captions>
              <Caption Value="AddNewRow" Display="Add New Row" />
              <Caption Value="ReferenceExistingRow" Display="Reference Existing Row" />
            </Captions>
          </EnumProperty>
          <TableProperty Name="TableRowReferenceBeforeCreatingEntitiesTableName" DisplayName="Table Name" Description="The name of the table." ComplexityLevel="Advanced" Category="Table Row Referencing/Before Creating Entities" Required="False" NullString="null" />
          <ExpressionProperty Name="TableRowReferenceBeforeCreatingEntitiesRowNumber" DisplayName="Row Number" Description="The one-based row index into the table." ComplexityLevel="Advanced" Category="Table Row Referencing/Before Creating Entities" Required="False" NullString="null">
            <Switch Property="TableRowReferenceBeforeCreatingEntitiesActionType" Value="ReferenceExistingRow" />
          </ExpressionProperty>
          <EnumProperty Name="TableRowReferenceOnCreatedEntityActionType" DisplayName="Action Type" Description="The type of table row reference action to perform.&#xD;&#xA;&#xD;&#xA;The ‘Reference Existing Row’ action type may be used to set a reference to an existing row in a data table or sequence table. The row index into the table is specified by the Row Number property.&#xD;&#xA;&#xD;&#xA;The ‘Add New Row’ action type may be used to add a new row to an output table. A reference will be automatically set to the newly added row." ComplexityLevel="Advanced" Category="Table Row Referencing/On Created Entity" DefaultValue="Reference Existing Row" NullString="null" EnumType="TableRowReferenceActionType">
            <Captions>
              <Caption Value="AddNewRow" Display="Add New Row" />
              <Caption Value="ReferenceExistingRow" Display="Reference Existing Row" />
            </Captions>
          </EnumProperty>
          <TableProperty Name="TableRowReferenceOnCreatedEntityTableName" DisplayName="Table Name" Description="The name of the table." ComplexityLevel="Advanced" Category="Table Row Referencing/On Created Entity" Required="False" NullString="null" />
          <ExpressionProperty Name="TableRowReferenceOnCreatedEntityRowNumber" DisplayName="Row Number" Description="The one-based row index into the table." ComplexityLevel="Advanced" Category="Table Row Referencing/On Created Entity" Required="False" NullString="null">
            <Switch Property="TableRowReferenceOnCreatedEntityActionType" Value="ReferenceExistingRow" />
          </ExpressionProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="CreatingEntitiesAddOnProcess" DisplayName="Creating Entities" Description="Occurs when this Source object is about to create an arrival of one or more entities." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="CreatedEntityAddOnProcess" DisplayName="Created Entity" Description="Occurs when an entity has been created by this Source object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="ExitedAddOnProcess" DisplayName="Exited" Description="Occurs when an entity has exited this object." ComplexityLevel="Advanced" Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ExpressionProperty Name="CapitalCost" DisplayName="Capital Cost" Description="The initial one-time setup cost to add this object to the system." ComplexityLevel="Advanced" Category="Financials" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <ExpressionProperty Name="OutputBufferCostPerUse" DisplayName="Cost Per Use" Description="The cost to hold an entity in this buffer irrespective of the waiting time." ComplexityLevel="Advanced" Category="Financials/Buffer Costs/Output Buffer" DefaultValue="0.0" NullString="null" UnitType="Currency" />
          <ExpressionProperty Name="OutputBufferHoldingCostRate" DisplayName="Holding Cost Rate" Description="The cost per unit time to hold an entity in this buffer." ComplexityLevel="Advanced" Category="Financials/Buffer Costs/Output Buffer" DefaultValue="0.0" NullString="null" UnitType="CurrencyPerTimeUnit" />
          <Overrides>
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="IncludeInPlanResourceConstraints" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="InitialWorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="TransferInConstraintsType" Visible="False" />
            <Override Name="TransferInCondition" Visible="False" />
            <Override Name="TransferOutConstraintsType" DefaultValue="Disable" />
            <Override Name="ExpectedSetupTimeExpression" Visible="False" />
            <Override Name="ExpectedOperationTimeExpression" Visible="False" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="76" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
            <PropertyReplacement Version="78" OldPropertyName="EventName" NewPropertyName="TriggeringEventName" />
            <PropertyReplacement Version="78" OldPropertyName="EventCount" NewPropertyName="TriggeringEventCount" />
            <PropertyReplacement Version="106" OldPropertyName="AssignmentBeforeCreatingEntitiesTableName" NewPropertyName="TableRowReferenceBeforeCreatingEntitiesTableName" />
            <PropertyReplacement Version="106" OldPropertyName="AssignmentBeforeCreatingEntitiesTableRow" NewPropertyName="TableRowReferenceBeforeCreatingEntitiesRowNumber" />
            <PropertyReplacement Version="106" OldPropertyName="AssignmentOnCreatedEntityTableName" NewPropertyName="TableRowReferenceOnCreatedEntityTableName" />
            <PropertyReplacement Version="106" OldPropertyName="AssignmentOnCreatedEntityTableRow" NewPropertyName="TableRowReferenceOnCreatedEntityRowNumber" />
            <PropertyReplacement Version="120" OldPropertyName="RepeatArrivalPattern" NewPropertyName="RepeatingArrivalPattern" />
          </PropertyReplacements>
        </PropertyDefinitions>
        <States />
        <Events />
        <UsedObjects>
          <UsedObject Name="TransferNode" />
        </UsedObjects>
        <Elements>
          <Element Type="Station" Name="Processing" Scope="Public" Description="The location inside the source where created entities are initially located.">
            <Properties>
              <Property Name="EntryDynamicSelectionRule">
                <Value>None</Value>
              </Property>
              <Property Name="CostPerUse" Units="USD">0.0</Property>
              <Property Name="HoldingCostRate" Units="USD per Hour">0.0</Property>
            </Properties>
          </Element>
          <Element Type="Station" Name="OutputBuffer" Scope="Public" Description="The location inside the source where entities wait to exit the object after being created.">
            <Properties>
              <Property Name="InitialCapacity">OutputBufferCapacity</Property>
              <Property Name="EntryDynamicSelectionRule">
                <Value>None</Value>
              </Property>
              <Property Name="BalkEnteringDecisionType">OutputBufferBalkDecisionType</Property>
              <Property Name="BalkConditionOrProbability">OutputBufferBalkConditionOrProbability</Property>
              <Property Name="OnBalkedEnteringProcess">
                <Value>OnBalkedEnteringOutputBuffer</Value>
              </Property>
              <Property Name="RedirectLocationType">ParentExternalNode</Property>
              <Property Name="RedirectExternalNodeName">Output</Property>
              <Property Name="RenegeTriggers">
                <Value>OutputBufferRenegeTriggers</Value>
                <Rows>
                  <Properties>
                    <Property Name="RenegeTriggerType">OutputBufferRenegeTriggerType</Property>
                    <Property Name="RenegeWaitDuration">OutputBufferRenegeWaitDuration</Property>
                    <Property Name="RenegeTriggeringEventName">OutputBufferRenegeTriggeringEventName</Property>
                    <Property Name="RenegeDecisionType">OutputBufferRenegeDecisionType</Property>
                    <Property Name="RenegeConditionOrProbability">OutputBufferRenegeConditionOrProbability</Property>
                    <Property Name="OnRenegedProcess">
                      <Value>OnRenegedFromOutputBuffer</Value>
                    </Property>
                    <Property Name="RenegeTriggerStartBoundary">OutputBufferRenegeTriggerStartBoundary</Property>
                  </Properties>
                </Rows>
              </Property>
              <Property Name="CostPerUse" Units="USD">OutputBufferCostPerUse</Property>
              <Property Name="HoldingCostRate" Units="USD per Hour">OutputBufferHoldingCostRate</Property>
            </Properties>
          </Element>
          <Element Type="Timer" Name="EntityArrivals" Scope="Public" Description="The stream of entity arrival events for this Source object.">
            <Properties>
              <Property Name="IntervalType">ArrivalMode</Property>
              <Property Name="TimeOffset">TimeOffset</Property>
              <Property Name="TimeInterval">InterarrivalTime</Property>
              <Property Name="RateTable">RateTable</Property>
              <Property Name="RateScaleFactor">RateScaleFactor</Property>
              <Property Name="TriggeringEventName">TriggeringEventName</Property>
              <Property Name="TriggeringEventCount">TriggeringEventCount</Property>
              <Property Name="ArrivalTimeProperty">ArrivalTimeProperty</Property>
              <Property Name="ArrivalEventsPerTimeSlot">ArrivalEventsPerTimeSlot</Property>
              <Property Name="ArrivalTimeDeviation">ArrivalTimeDeviation</Property>
              <Property Name="ArrivalNoShowProbability">ArrivalNoShowProbability</Property>
              <Property Name="RepeatingArrivalPattern">RepeatingArrivalPattern</Property>
              <Property Name="MaximumEvents">MaximumArrivals</Property>
              <Property Name="MaximumTime">MaximumTime</Property>
              <Property Name="RandomNumberStream">EntityArrivalsRandomNumberStream</Property>
            </Properties>
          </Element>
          <Element Type="CostCenter" Name="CapitalCosts">
            <Properties>
              <Property Name="InitialCost" Units="USD">CapitalCost</Property>
              <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
              <Property Name="DataSource">[Object]</Property>
              <Property Name="DataItem">"CapitalCost"</Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Subscribe" Name="ToStopEvent" ExclusionExpression="!StopEventName.HasValue" ID="2">
                <Properties>
                  <Property Name="EventName">StopEventName</Property>
                  <Property Name="ProcessName">
                    <Value>OnStopEventOccurred</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Execute" Name="RunInitializedAddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunInitializedAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Decide" Name="IfCreatingInitialEntities" ExclusionExpression="Math.If(ArrivalMode == Enum.TimerIntervalType.EventCount, 1, 2)" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">ArrivalMode == Enum.TimerIntervalType.EventCount</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
              </Step>
              <Step Type="AddRow" Name="BeforeCreatingEntities" ID="5">
                <Properties>
                  <Property Name="ObjectType">Token</Property>
                  <Property Name="TableName">TableRowReferenceBeforeCreatingEntitiesTableName</Property>
                  <Property Name="AddRowCondition">TableRowReferenceBeforeCreatingEntitiesActionType == Enum.TableRowReferenceActionType.AddNewRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="SetRow" Name="BeforeCreatingEntities" ID="6">
                <Properties>
                  <Property Name="ObjectType">Token</Property>
                  <Property Name="TableName">TableRowReferenceBeforeCreatingEntitiesTableName</Property>
                  <Property Name="RowNumber">TableRowReferenceBeforeCreatingEntitiesRowNumber</Property>
                  <Property Name="SetRowCondition">TableRowReferenceBeforeCreatingEntitiesActionType == Enum.TableRowReferenceActionType.ReferenceExistingRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Execute" Name="CreatingEntitiesAddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>CreatingEntitiesAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Create" Name="Entities" ID="8">
                <Properties>
                  <Property Name="EntityType">EntityType</Property>
                  <Property Name="NumberToCreate">InitialNumberEntities</Property>
                </Properties>
                <Exit Name="Created" Type="Alternate" NextID="9" />
              </Step>
              <Step Type="Transfer" Name="ToProcessing" ID="9">
                <Properties>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">
                    <Value>Processing</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEndingAddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunEndingAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEntityArrival" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">EntityArrivals.Event</Property>
            </Properties>
            <Steps>
              <Step Type="AddRow" Name="BeforeCreatingEntities" ID="2">
                <Properties>
                  <Property Name="ObjectType">Token</Property>
                  <Property Name="TableName">TableRowReferenceBeforeCreatingEntitiesTableName</Property>
                  <Property Name="AddRowCondition">TableRowReferenceBeforeCreatingEntitiesActionType == Enum.TableRowReferenceActionType.AddNewRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="SetRow" Name="BeforeCreatingEntities" ID="3">
                <Properties>
                  <Property Name="ObjectType">Token</Property>
                  <Property Name="TableName">TableRowReferenceBeforeCreatingEntitiesTableName</Property>
                  <Property Name="RowNumber">TableRowReferenceBeforeCreatingEntitiesRowNumber</Property>
                  <Property Name="SetRowCondition">TableRowReferenceBeforeCreatingEntitiesActionType == Enum.TableRowReferenceActionType.ReferenceExistingRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="CreatingEntitiesAddOnProcess" ID="4">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>CreatingEntitiesAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Create" Name="Entities" ID="5">
                <Properties>
                  <Property Name="EntityType">EntityType</Property>
                  <Property Name="NumberToCreate">EntitiesPerArrival</Property>
                </Properties>
                <Exit Name="Created" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToProcessing" ID="6">
                <Properties>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">
                    <Value>Processing</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredProcessing" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">Processing.Entered</Property>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="EndTransfer" Name="IntoProcessing" ID="2">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="AddRow" Name="OnCreatedEntity" ID="3">
                <Properties>
                  <Property Name="TableName">TableRowReferenceOnCreatedEntityTableName</Property>
                  <Property Name="AddRowCondition">TableRowReferenceOnCreatedEntityActionType == Enum.TableRowReferenceActionType.AddNewRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="SetRow" Name="OnCreatedEntity" ID="4">
                <Properties>
                  <Property Name="TableName">TableRowReferenceOnCreatedEntityTableName</Property>
                  <Property Name="RowNumber">TableRowReferenceOnCreatedEntityRowNumber</Property>
                  <Property Name="SetRowCondition">TableRowReferenceOnCreatedEntityActionType == Enum.TableRowReferenceActionType.ReferenceExistingRow</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="5" />
              </Step>
              <Step Type="Execute" Name="CreatedEntityAddOnProcess" ID="5">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>CreatedEntityAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Assign" Name="BeforeExitingAssignments" ExclusionExpression="OutputBufferCapacity &gt; 0" ID="6">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeExiting</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeExitingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeExitingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Transfer" Name="ToOutputBuffer" ID="7">
                <Properties>
                  <Property Name="FromType">CurrentStation</Property>
                  <Property Name="ToType">Station</Property>
                  <Property Name="StationName">
                    <Value>OutputBuffer</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnBalkedEnteringOutputBuffer" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnBalkingAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnBalking</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnBalkingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnBalkingNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">Math.If(AssignmentsOnBalking.AssignmentsOnBalkingAssignConditionType==List.OnBalkingAssignConditionType.CustomCondition, AssignmentsOnBalking.AssignmentsOnBalkingAssignCondition&lt;=0.0, AssignmentsOnBalking.AssignmentsOnBalkingAssignConditionType!=List.OnBalkingAssignConditionType.BalkingEnteringOutputBuffer)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfDestroyEntity" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">!OutputBufferBalkNodeName.HasValue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="4">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="5" />
                <Exit Name="Failed" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="SetNode" Name="BalkNodeName" ID="5">
                <Properties>
                  <Property Name="NodeName">OutputBufferBalkNodeName</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToBalkNodeName" ID="6">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="NodeName">OutputBufferBalkNodeName</Property>
                </Properties>
              </Step>
              <Step Type="Destroy" Name="Entity" ID="7">
                <Properties>
                  <Property Name="RecordEntityStatistics">False</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredOutputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">OutputBuffer.Entered</Property>
            </Properties>
            <Steps>
              <Step Type="EndTransfer" Name="IntoOutputBuffer" ID="2">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Assign" Name="BeforeExitingAssignments" ID="3">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsBeforeExiting</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsBeforeExitingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsBeforeExitingNewValue</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToOutputNode" ID="4">
                <Properties>
                  <Property Name="FromType">CurrentStation</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">Output</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRenegedFromOutputBuffer" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="OnRenegingAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnReneging</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnRenegingStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnRenegingNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">Math.If(AssignmentsOnReneging.AssignmentsOnRenegingAssignConditionType==List.OnRenegingAssignConditionType.CustomCondition, AssignmentsOnReneging.AssignmentsOnRenegingAssignCondition&lt;=0.0, AssignmentsOnReneging.AssignmentsOnRenegingAssignConditionType!=List.OnRenegingAssignConditionType.RenegingFromOutputBuffer)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfDestroyEntity" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">!OutputBufferRenegeTriggers.OutputBufferRenegeNodeName.HasValue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="7" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="4">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
                <Exit Name="OK" Type="Primary" NextID="5" />
                <Exit Name="Failed" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="SetNode" Name="RenegeNodeName" ID="5">
                <Properties>
                  <Property Name="NodeName">OutputBufferRenegeTriggers.OutputBufferRenegeNodeName</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToRenegeNodeName" ID="6">
                <Properties>
                  <Property Name="FromType">Any</Property>
                  <Property Name="NodeName">OutputBufferRenegeTriggers.OutputBufferRenegeNodeName</Property>
                </Properties>
              </Step>
              <Step Type="Destroy" Name="Entity" ID="7">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExitedProcessing" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">Processing.Exited</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="ExitedAddOnProcess" ExclusionExpression="OutputBufferCapacity &gt; 0" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ExitedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExitedOutputBuffer" BeginStepID="2">
            <Properties>
              <Property Name="TriggeringEventName">OutputBuffer.Exited</Property>
            </Properties>
            <Steps>
              <Step Type="Execute" Name="ExitedAddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ExitedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnStopEventOccurred" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Assign" Name="ToDisableEntityArrivals" ID="2">
                <Properties>
                  <Property Name="StateVariableName">
                    <Value>EntityArrivals.Enabled</Value>
                  </Property>
                  <Property Name="NewValue">False</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <External>
          <TransferPoints>
            <ExternalNode Name="Output" Location="1.25,0,0" ID="Output">
              <Properties>
                <Property Name="NodeClassName">TransferNode</Property>
              </Properties>
            </ExternalNode>
          </TransferPoints>
          <Graphics>
            <SymbolInstance Center="0 0 0" ExternallyVisible="True">
              <SymbolRef Id="4253805c-d9dd-447f-b808-dc61ab3765de" />
            </SymbolInstance>
            <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True">
              <Points>
                <Point Location="1 0 0.5" />
                <Point Location="4 0 0.5" />
              </Points>
            </Queue>
          </Graphics>
        </External>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
        <Dashboard>
          <Graphics>
            <StatusLabel Center="-5 0 0" Width="10" Height="1" ExternallyVisible="True" BackColor="00ffffff" TextColor="0000ff" Expression="&quot;OutputBuffer&quot;" />
            <StatusLabel Center="1.875 0 0" Width="3.75" Height="1" ExternallyVisible="True" Expression="OutputBuffer.Contents" />
          </Graphics>
        </Dashboard>
      </FixedDefinition>
      <NodeDefinition Name="TransferNode" Id="0d40fbf0-8206-443f-b771-65f85633a2f6" Revision="161" FileVersion="233" Author="Simio Employee" Description="A TransferNode object may be used by an entity to transfer into or out of an object. This type of node may also be used to define an intersection point in a network of links. Optional entity destination selection and transport logic is provided." Color="1e90ff">
        <ChangeDescriptions>
          <ChangeDescription Version="74">Version 2.36: Renamed the 'TransferToLinkFailureLogic' process in the TransferNode process logic to 'TransferFailureLogic'. If the 'AutoTransferOnEntry' property value of the TransferNode is 'To Parent External Node' and the transfer to the specified parent external node fails, then the token now executes the 'TransferFailureLogic' process.</ChangeDescription>
          <ChangeDescription Version="75">Version 2.37: Changed 'Capacity' display name to 'Initial Capacity' as object capacities are now user assignable.</ChangeDescription>
          <ChangeDescription Version="78">Version 2.38: The RoutingGroup element named 'RoutingOut' that is owned by the TransferNode is now a private element.</ChangeDescription>
          <ChangeDescription Version="82">Version 2.39: Updated the TransferNode object process logic to specify all of the object's process delays as non-interruptible. For the 'Select From List' feature to set an entity's next destination, changed the default value of the destination 'Selection Expression' property to be 'Candidate.Node.InputLocation.Overload'.</ChangeDescription>
          <ChangeDescription Version="83">Version 2.40: In the object process logic, the 'Action' property for all Execute steps executing an 'add-on process' is now specified as 'WaitUntilCompleted'.</ChangeDescription>
          <ChangeDescription Version="85">Version 2.41: Minor property description and display name updates. The RoutingGroup element named 'RoutingOut' that is owned by the TransferNode is now a public element.</ChangeDescription>
          <ChangeDescription Version="86">Version 3.42: Changes related to setting the 'Token Associated Object Destroyed Action' option for process logic in this object.</ChangeDescription>
          <ChangeDescription Version="87">Version 3.44: 'SeizedObjects.UnitsOwned' function renamed to 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="88">Version 3.47: Added new 'Appearance' property category.</ChangeDescription>
          <ChangeDescription Version="89">Version 3.48: Hide new 'Random Number Stream' property in 'Routing Logic' category.</ChangeDescription>
          <ChangeDescription Version="90">Version 3.49: Specified the 'OnAssociatedObjectTransferRequested' property of some processes as 'EndProcess'.</ChangeDescription>
          <ChangeDescription Version="97">Version 3.54: Added new Notify step to 'TransferFailureLogic' process to output a warning if automatically destroying an entity. Conversion to 'OnRunInitialized' standard interface process. Added 'Run Ending' add-on process trigger.</ChangeDescription>
          <ChangeDescription Version="100">Version 3.56: Added new 'Tally Statistics' property category.</ChangeDescription>
          <ChangeDescription Version="101">Version 3.57: Change to new 'OnEnteredParking' standard interface process that was added to Simio's base node object.</ChangeDescription>
          <ChangeDescription Version="104">Version 4.58: Removed 'AutoTransferOnEntry' property. The 'ExternalNodeName' property is now always visible with display name 'Bound External Output Node'. If a transfer to parent external node attempt fails, then the token now continues normal processing instead of executing the 'TransferFailureLogic'. Added new 'Advanced Options' property category. Added 'OnEnteredToAssociatedObject' process logic.</ChangeDescription>
          <ChangeDescription Version="105">Version 4.59: Changed the default of the 'Blocked Routing Rule' property to 'Select Available Only'.</ChangeDescription>
          <ChangeDescription Version="106">Version 4.60: Process logic now uses new object 'SeizedResources.CapacityUnitsOwned' function instead of deprecated 'SeizedObjects.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="107">Version 4.61: Set all inherited properties in 'Financials' category to not be visible.</ChangeDescription>
          <ChangeDescription Version="108">Version 4.63: Set all inherited properties in 'Financials-&gt;Resource Costs' to not be visible.</ChangeDescription>
          <ChangeDescription Version="109">Version 4.65: Process logic now uses new object 'SeizedResources.CapacityOwnedOf' function instead of deprecated 'SeizedResources.CapacityUnitsOwned'.</ChangeDescription>
          <ChangeDescription Version="110">Version 4.66: If bound to an external output node of the parent model, a transfer node's 'Entered' event is still fired and its 'Entered' add-on process trigger still executed before transferring the entity out of the parent model.</ChangeDescription>
          <ChangeDescription Version="115">Version 4.68: The TransferNode object is no longer enabled as a resource object, and the 'InitialCapacity', 'RankingRule', and 'RankingExpression' properties have been replaced by equivalent 'InitialTravelerCapacity', 'EntryRankingRule', and 'EntryRankingExpression' properties. Renamed 'InitializedAddOnProcess' property to 'RunInitializedAddOnProcess'. Renamed 'ExternalNodeName' property to 'BoundExternalOutputNode'.</ChangeDescription>
          <ChangeDescription Version="116">Version 4.70: The blocked condition for the 'RoutingOut' RoutingGroup element owned by the node now uses new node 'AssociatedStation' and 'NumberTravelers.RoutingInToEnterAssociatedObject' functions. For the 'Select From List' feature to set an entity's next destination, changed the default value of the destination 'Selection Expression' property to be 'Candidate.Node.AssociatedStationOverload'.</ChangeDescription>
          <ChangeDescription Version="118">Version 4.71: Renamed 'BlockedRoutingRule' property to 'BlockedDestinationRule'. Changed the default value of the transporter 'Selection Expression' property to be 'Candidate.Transporter.RideStationOverload'.</ChangeDescription>
          <ChangeDescription Version="122">Version 4.73: New 'Random Number Stream' property now available in the 'Advanced Options' category. Renamed 'NodeName' property to 'DestinationNodeName'. Renamed 'NodeListName' property to 'DestinationNodeListName'.</ChangeDescription>
          <ChangeDescription Version="123">Version 4.74: If a traveler is attempting to transfer out of the node and has no network assigned (i.e., is using free space for travel), then the node's process logic now transfers the traveler into free space.</ChangeDescription>
          <ChangeDescription Version="126">Version 4.75: If the 'Routing Logic -&gt; Entity Destination Type' property is specified as'Specific', can now specify the new destination node value as 'No Destination'.</ChangeDescription>
          <ChangeDescription Version="127">Version 4.77: Removed an unnecessary 'TransferFailureLogic' Execute step from the 'OnEnteredToAssociatedObject' process logic.</ChangeDescription>
          <ChangeDescription Version="128">Version 5.87: Process logic now uses new property 'HasValue' function instead of deprecated 'IsDefined'.</ChangeDescription>
          <ChangeDescription Version="130">Version 5.91: Transport Logic -&gt; 'Transporter Type' property -&gt; The 'From List' choice is now displayed as 'Select From List'. Added information to indicate which properties to display if the new 'Show Commonly Used Properties Only' option is enabled.</ChangeDescription>
          <ChangeDescription Version="131">Version 6.103: Some property description updates.</ChangeDescription>
          <ChangeDescription Version="132">Version 6.106: Added new 'Use Custom Routing Group' choice for the 'Entity Destination Type' property.</ChangeDescription>
          <ChangeDescription Version="137">Version 7.122: 'RoutingOutLogic' process - The Fire step that fires the node's 'RiderWaiting' event is now executed before the Ride step instead of after.</ChangeDescription>
          <ChangeDescription Version="139">Version 7.123: Transport Logic -&gt; Added new 'Keep Reserved' transporter status option on entity drop-off if riding on a transporter.</ChangeDescription>
          <ChangeDescription Version="140">Version 7.130: Renamed 'RandomNumberStream' property to 'BranchingRandomNumberStream'</ChangeDescription>
          <ChangeDescription Version="144">Version 7.131: Added new 'Routing Logic -&gt; Other Routing Out Options' property category with possible 'Required Materials', 'Route Request Ranking Rule', 'Route Request Dynamic Selection Rule', &amp; 'Branching Random Number Stream' properties.</ChangeDescription>
          <ChangeDescription Version="146">Version 8.133 'OnEntered' process logic no longer requires a Decide 'IfFreeSpaceTraveler' step. Added 'State Assignments' property category.</ChangeDescription>
          <ChangeDescription Version="147">Version 8.134 'Routing Logic -&gt; Other Routing Out Options -&gt; Random Number Stream' property now inherited from the base node definition</ChangeDescription>
          <ChangeDescription Version="148">Version 8.137 'TransferFailureLogic' now gives warning notification if automatically parking entity.</ChangeDescription>
          <ChangeDescription Version="150">Version 8.141 Added new 'Lot ID' property to 'Required Materials' repeat group.</ChangeDescription>
          <ChangeDescription Version="151">Version 8.147: Property description string updates.</ChangeDescription>
          <ChangeDescription Version="152">Version 8.158: Step label updates.</ChangeDescription>
          <ChangeDescription Version="153">Version 9.161: Property description string updates.</ChangeDescription>
          <ChangeDescription Version="154">Version 9.164: Property description string updates.</ChangeDescription>
          <ChangeDescription Version="155">Version 10.174: Added 'None (Destroy Entity)' option to EntityDestinationType property.</ChangeDescription>
          <ChangeDescription Version="156">Version 10.175: Added Other Routing Out Options -&gt; Required Materials -&gt; InventorySiteType &amp; SiteObjectName properties.</ChangeDescription>
          <ChangeDescription Version="157">Version 11.193:  Other Routing Out Options -&gt; Required Materials -&gt; Optional 'Lot ID' property if required material from an inventory site.</ChangeDescription>
          <ChangeDescription Version="158">Version 11.203: Added 'Route Constraint Logic' property.</ChangeDescription>
          <ChangeDescription Version="159">Version 12.212: Renamed 'TalliesOnEnteringValue' property to 'TalliesOnEnteringValueExpression'. Renamed 'TalliesOnExitedValue' property to 'TalliesOnExitedValueExpression'.</ChangeDescription>
          <ChangeDescription Version="160">Version 14.231: RideOnTransporter property changed to list property with possible values Always, Never, or Conditional. Renamed TransporterSelectionExpression property to TransporterSelectionValueExpression.</ChangeDescription>
        </ChangeDescriptions>
        <ChangeStringReplacements>
          <ChangeStringReplacement Version="104" RegularExpressionPattern="(^|[^\w_])(?i:AutoTransferOnEntry)([^\w_]|$)" ReplacementString="$1ExternalNodeName.HasValue$2" />
          <ChangeStringReplacement Version="104" RegularExpressionPattern="(^|[^\w_])(?i:List[\.]AutoTransferOnEntryType[\.]None)([^\w_]|$)" ReplacementString="$1False$2" />
          <ChangeStringReplacement Version="115" RegularExpressionPattern="(^|[^\w_])(?i:InitializedAddOnProcess)([^\w_]|$)" ReplacementString="$1RunInitializedAddOnProcess$2" />
          <ChangeStringReplacement Version="115" RegularExpressionPattern="(^|[^\w_])(?i:ExternalNodeName)([^\w_]|$)" ReplacementString="$1BoundExternalOutputNode$2" />
          <ChangeStringReplacement Version="118" RegularExpressionPattern="(^|[^\w_])(?i:BlockedRoutingRule)([^\w_]|$)" ReplacementString="$1BlockedDestinationRule$2" />
          <ChangeStringReplacement Version="122" RegularExpressionPattern="(^|[^\w_])(?i:NodeName)([^\w_]|$)" ReplacementString="$1DestinationNodeName$2" />
          <ChangeStringReplacement Version="122" RegularExpressionPattern="(^|[^\w_])(?i:NodeListName)([^\w_]|$)" ReplacementString="$1DestinationNodeListName$2" />
        </ChangeStringReplacements>
        <Lists>
          <StringList Name="EntityDestinationType">
            <Items>
              <Item Value="Continue" />
              <Item Value="Specific" />
              <Item Value="BySequence" />
              <Item Value="SelectFromList" />
              <Item Value="UseCustomRoutingGroup" />
              <Item Value="DestroyEntity" />
            </Items>
          </StringList>
          <StringList Name="RideOnTransporterType">
            <Items>
              <Item Value="Never" />
              <Item Value="Always" />
              <Item Value="Conditional" />
            </Items>
          </StringList>
          <StringList Name="ActionConditionType">
            <Items>
              <Item Value="NoCondition" />
              <Item Value="IsEntity" />
              <Item Value="IsTransporter" />
              <Item Value="CustomCondition" />
            </Items>
          </StringList>
        </Lists>
        <PropertyDefinitions>
          <Categories>
            <Category Name="Crossing Logic" Description="Crossing Logic" />
            <Category Name="Routing Logic" Description="Routing Logic" />
            <Category Name="Routing Logic/Other Routing Out Options" Description="Routing Logic/Other Routing Out Options" InitiallyExpanded="False" />
            <Category Name="Transport Logic" Description="Transport Logic" />
            <Category Name="Transport Logic/Transporter Selection" Description="Transport Logic/Transporter Selection" />
            <Category Name="Transport Logic/Transporter Status On Drop-Off" Description="Transporter Status Options On Entity Drop-Off" />
            <Category Name="State Assignments" Description="Optional State Assignments" InitiallyExpanded="False" />
            <Category Name="Tally Statistics" Description="Optional Tally Statistics" InitiallyExpanded="False" />
            <Category Name="Add-On Process Triggers" Description="Add-On Process Triggers" InitiallyExpanded="False" />
            <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
            <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
            <Category Name="Advanced Options/Deprecated Properties" Description="Advanced Options/Deprecated Properties" InitiallyExpanded="False" />
          </Categories>
          <ListProperty Name="DestinationType" DisplayName="Entity Destination Type" Description="The method used to set a destination node for entities exiting the transfer node.&#xD;&#xA;&#xD;&#xA;If the method is 'By Sequence', then the entity must have a sequence table assigned. The destination node value will be set to the next destination in the sequence.&#xD;&#xA;&#xD;&#xA;Either the ‘Select From List’ or ‘Use Custom Routing Group’ methods may be used to route an entity to a location selected from a list of possible destination nodes. Note that the custom routing group approach can be particularly useful if it is desirable to have a single logical queue for entities waiting to be routed that is shared between multiple transfer node locations. Refer to the Routing Group element for more information." Category="Routing Logic" DefaultValue="Continue" NullString="null" List="EntityDestinationType">
            <Captions>
              <Caption Value="BySequence" Display="By Sequence" />
              <Caption Value="SelectFromList" Display="Select From List" />
              <Caption Value="UseCustomRoutingGroup" Display="Use Custom Routing Group" />
              <Caption Value="DestroyEntity" Display="None (Destroy Entity)" />
            </Captions>
          </ListProperty>
          <NodeProperty Name="DestinationNodeName" DisplayName="Node Name" Description="The name of the specific node that is the destination." Category="Routing Logic" DefaultValue="No Destination" Required="False" Parent="DestinationType" NullString="No Destination" ValidObjectType="Node" LocationType="Cartesian">
            <Switch Property="DestinationType" Value="Specific" />
          </NodeProperty>
          <NodeListProperty Name="DestinationNodeListName" DisplayName="Node List Name" Description="Identifies the list of possible destination nodes." Category="Routing Logic" Parent="DestinationType" NullString="null">
            <Switch Property="DestinationType" Value="SelectFromList" />
          </NodeListProperty>
          <ElementProperty Name="DestinationRoutingGroupName" DisplayName="Routing Group Name" Description="The name of the Routing Group element that will be used to route each entity to a location selected from a list of possible destination nodes.&#xD;&#xA;&#xD;&#xA;Go to Definitions-&gt;Elements to add a new Routing Group element to the model." Category="Routing Logic" Parent="DestinationType" NullString="null" Type="RoutingGroup">
            <Switch Property="DestinationType" Value="UseCustomRoutingGroup" />
          </ElementProperty>
          <EnumProperty Name="DestinationSelectionGoal" DisplayName="Selection Goal" Description="The goal used to select a destination if there are multiple candidates available in the list of possible destination nodes." Category="Routing Logic" DefaultValue="Preferred Order" Parent="DestinationType" NullString="null" EnumType="NodeSelectionGoal">
            <Switch Property="DestinationType" Value="SelectFromList, UseCustomRoutingGroup" />
            <Captions>
              <Caption Value="SmallestDistance" Display="Smallest Distance" />
              <Caption Value="LargestDistance" Display="Largest Distance" />
              <Caption Value="PreferredOrder" Display="Preferred Order" />
              <Caption Value="SmallestValue" Display="Smallest Value" />
              <Caption Value="LargestValue" Display="Largest Value" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="DestinationSelectionExpression" DisplayName="Selection Expression" Description="The expression used to get the value for each candidate destination node.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[NodeClass].[Attribute] or Candidate.[NodeAssociatedObjectClass].[Attribute] to evaluate attributes of either the candidate destination nodes themselves or the objects associated with those candidate nodes (e.g., Candidate.Node.AssociatedStation.Capacity or Candidate.Server.Capacity)." Category="Routing Logic" DefaultValue="Candidate.Node.AssociatedStationOverload" Parent="DestinationSelectionGoal" NullString="null" SupportForeign="True">
            <Switch Property="DestinationSelectionGoal" Comparison="GreaterThan" Value="Random" />
          </ExpressionProperty>
          <ExpressionProperty Name="DestinationSelectionCondition" DisplayName="Selection Condition" Description="Optional condition evaluated for each candidate destination node that must be true for the node to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[NodeClass].[Attribute] or Candidate.[NodeAssociatedObjectClass].[Attribute] to reference an attribute of either the candidate destination nodes themselves or the objects associated with those candidate nodes (e.g., Candidate.Node.AssociatedStation.Capacity or Candidate.Server.Capacity)." Category="Routing Logic" Required="False" Parent="DestinationType" NullString="null" SupportForeign="True">
            <Switch Property="DestinationType" Value="SelectFromList, UseCustomRoutingGroup" />
          </ExpressionProperty>
          <EnumProperty Name="BlockedDestinationRule" DisplayName="Blocked Destination Rule" Description="The rule used to manage destination selection if there are one or more candidates in the list of possible destination nodes that have no space available.&#xD;&#xA;&#xD;&#xA;If the rule is 'Select Any', then whether or not a destination is blocked will be ignored.&#xD;&#xA;&#xD;&#xA;If the rule is 'Select Available Only', then only a destination that is not currently blocked may be assigned, and if all possible destinations are blocked then an entity will be held at the TransferNode until a destination becomes available.&#xD;&#xA;&#xD;&#xA;If the rule is 'Prefer Available', then a destination that is not currently blocked will be preferred, but if all possible destinations are blocked then the best destination per the selection goal will still be immediately assigned." Category="Routing Logic" DefaultValue="Select Available Only" Parent="DestinationType" NullString="null" EnumType="BlockedRoutingRule">
            <Switch Property="DestinationType" Value="SelectFromList, UseCustomRoutingGroup" />
            <Captions>
              <Caption Value="SelectAny" Display="Select Any" />
              <Caption Value="SelectAvailableOnly" Display="Select Available Only" />
              <Caption Value="PreferAvailable" Display="Prefer Available" />
            </Captions>
          </EnumProperty>
          <RepeatingProperty Name="RouteConstraintLogic" DisplayName="Route Constraint Logic" Description="Constraint logic used to enforce additional constraints on an entity’s route request." Category="Routing Logic/Other Routing Out Options" Required="False" NullString="null">
            <Switch Property="DestinationType" Value="SelectFromList, UseCustomRoutingGroup" />
            <PropertyDefinitions>
              <Categories>
                <Category Name="Constraint Logic" Description="Constraint Logic" />
              </Categories>
              <ElementProperty Name="RouteConstraintLogicName" DisplayName="Constraint Logic Name" Description="The name of the Constraint Logic element used to enforce additional constraints on an entity’s route request." Category="Constraint Logic" Required="False" NullString="null" Type="ConstraintLogic" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <EnumProperty Name="RouteRequestRankingRule" DisplayName="Route Request Ranking Rule" Description="The static rule used to rank competing entities waiting to be assigned an available destination." Category="Routing Logic/Other Routing Out Options" DefaultValue="First In First Out" NullString="null" EnumType="QueueRanking">
            <Switch Property="DestinationType" Value="SelectFromList" />
            <Captions>
              <Caption Value="FirstInFirstOut" Display="First In First Out" />
              <Caption Value="LastInFirstOut" Display="Last In First Out" />
              <Caption Value="SmallestValueFirst" Display="Smallest Value First" />
              <Caption Value="LargestValueFirst" Display="Largest Value First" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="RouteRequestRankingExpression" DisplayName="Route Request Ranking Expression" Description="The expression used with a Smallest Value First or Largest Value First ranking rule." Category="Routing Logic/Other Routing Out Options" DefaultValue="Entity.Priority" Required="False" Parent="RouteRequestRankingRule" NullString="null">
            <Switch Property="RouteRequestRankingRule" Comparison="GreaterThan" Value="LastInFirstOut" />
          </ExpressionProperty>
          <SelectionRuleProperty Name="RouteRequestDynamicSelectionRule" DisplayName="Route Request Dynamic Selection Rule" Description="The rule used to dynamically select an entity from competing requests waiting to be assigned an available destination." Category="Routing Logic/Other Routing Out Options" DefaultValue="None" NullString="None">
            <Switch Property="DestinationType" Value="SelectFromList" />
          </SelectionRuleProperty>
          <ListProperty Name="RideOnTransporter" DisplayName="Ride On Transporter" Description="Indicates whether an entity must ride a transporter to exit the transfer node." Category="Transport Logic" DefaultValue="Never" NullString="null" List="RideOnTransporterType" />
          <ExpressionProperty Name="RideOnTransporterCondition" DisplayName="Condition" Description="The condition expression indicating whether an entity must ride a transporter to exit the transfer node." Category="Transport Logic" DefaultValue="0.0" Parent="RideOnTransporter" NullString="null">
            <Switch Property="RideOnTransporter" Value="Conditional" />
          </ExpressionProperty>
          <EnumProperty Name="TransporterType" DisplayName="Transporter Type" Description="The method for specifying the transporter object to ride." Category="Transport Logic/Transporter Selection" DefaultValue="Specific" NullString="null" EnumType="TransporterType">
            <Switch Property="RideOnTransporter" Comparison="NotEqual" Value="Never" />
            <Captions>
              <Caption Value="FromList" Display="Select From List" />
            </Captions>
          </EnumProperty>
          <ObjectInstanceProperty Name="TransporterName" DisplayName="Transporter Name" Description="The name of the transporter object to ride." Category="Transport Logic/Transporter Selection" NullString="null" ValidObjectType="Transporter" LocationType="Cartesian">
            <Switch Property="TransporterType" Value="Specific" />
          </ObjectInstanceProperty>
          <TransporterListProperty Name="TransporterListName" DisplayName="Transporter List Name" Description="The name of the transporter list from which to select the transporter object to ride." Category="Transport Logic/Transporter Selection" NullString="null">
            <Switch Property="TransporterType" Value="FromList" />
          </TransporterListProperty>
          <EnumProperty Name="TransporterReservationMethod" DisplayName="Reservation Method" Description="The type of reservation method used to select a transporter object to ride.&#xD;&#xA;&#xD;&#xA;Reserve Closest - Reserve the transporter that is closest to the transfer node. The rule used to break ties is the specified selection goal.&#xD;&#xA;&#xD;&#xA;Reserve Best - Reserve the transporter using the specified selection goal. The rule used to break ties is the transporter that is closest to the transfer node.&#xD;&#xA;&#xD;&#xA;First Available At Location - Can only select a transporter that is already located at the transfer node. The rule used to break ties is the specified selection goal." Category="Transport Logic/Transporter Selection" DefaultValue="Reserve Closest" NullString="null" EnumType="ReservationMethod">
            <Switch Property="RideOnTransporter" Comparison="NotEqual" Value="Never" />
            <Captions>
              <Caption Value="ReserveClosest" Display="Reserve Closest" />
              <Caption Value="ReserveBest" Display="Reserve Best" />
              <Caption Value="FirstAvailableAtLocation" Display="First Available At Location" />
            </Captions>
          </EnumProperty>
          <EnumProperty Name="TransporterSelectionGoal" DisplayName="Selection Goal" Description="The rule used in conjunction with the specified reservation method to select a transporter object from multiple candidates." Category="Transport Logic/Transporter Selection" DefaultValue="Preferred Order" NullString="null" EnumType="ExtendedSelectionGoal">
            <Switch Property="RideOnTransporter" Comparison="NotEqual" Value="Never" />
            <Captions>
              <Caption Value="PreferredOrder" Display="Preferred Order" />
              <Caption Value="SmallestValue" Display="Smallest Value" />
              <Caption Value="LargestValue" Display="Largest Value" />
            </Captions>
          </EnumProperty>
          <ExpressionProperty Name="TransporterSelectionValueExpression" DisplayName="Value Expression" Description="The expression used to get the value for each candidate transporter.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[TransporterClass].[Attribute] to reference an attribute of the candidate transporter objects (e.g., Candidate.Transporter.RideStation.Capacity)." Category="Transport Logic/Transporter Selection" DefaultValue="Candidate.Transporter.RideStationOverload" Parent="TransporterSelectionGoal" NullString="null" SupportForeign="True">
            <Switch Property="TransporterSelectionGoal" Comparison="NotEqual" Value="PreferredOrder" />
          </ExpressionProperty>
          <ExpressionProperty Name="TransporterSelectionCondition" DisplayName="Selection Condition" Description="Optional condition evaluated for each candidate transporter that must be true for the transporter to be selected.&#xD;&#xA;&#xD;&#xA;In the expression, use the syntax Candidate.[TransporterClass].[Attribute] to reference an attribute of the candidate transporter objects (e.g., Candidate.Transporter.RideStation.Capacity)." Category="Transport Logic/Transporter Selection" Required="False" NullString="null" SupportForeign="True">
            <Switch Property="RideOnTransporter" Comparison="NotEqual" Value="Never" />
          </ExpressionProperty>
          <ExpressionProperty Name="TransporterStatusOnDropOffKeepReservedCondition" DisplayName="Keep Reserved If" Description="Optional condition indicating whether, on drop-off, to keep the transporter resource reserved for possible later reuse by the same entity. Other entities will be unable to use the reserved transporter for processing tasks or new ride pickup requests unless the reservation is cancelled.&#xD;&#xA;&#xD;&#xA;This condition is evaluated when the entity is picked up at the TransferNode. In the expression, use the syntax Entity.CurrentTransporter.[Attribute] to reference an attribute of the selected transporter (e.g., Entity.CurrentTransporter.Is.Vehicle1).&#xD;&#xA;&#xD;&#xA;Note that when an entity is attempting to select a resource from a group of candidates (e.g., from a list or from a population of some resource type), by default a preference will be given to select a resource that has already been reserved by that entity irrespective of the specified selection goal.&#xD;&#xA;&#xD;&#xA;Leaving this property blank (no condition) is equivalent to entering False." Category="Transport Logic/Transporter Status On Drop-Off" Required="False" NullString="null">
            <Switch Property="RideOnTransporter" Comparison="NotEqual" Value="Never" />
          </ExpressionProperty>
          <RepeatingProperty Name="AssignmentsOnEntering" DisplayName="On Entering" Description="Optional state assignments when an entity is entering the object." Category="State Assignments" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="State Assignments (Basic Logic)" />
              </Categories>
              <ListProperty Name="AssignmentsOnEnteringAssignConditionType" DisplayName="Assign If" Description="Condition required to perform the assignment." Category="Basic Logic" DefaultValue="Entity Entering" NullString="null" List="ActionConditionType">
                <Captions>
                  <Caption Value="NoCondition" Display="No Condition" />
                  <Caption Value="IsEntity" Display="Entity Entering" />
                  <Caption Value="IsTransporter" Display="Transporter Entering" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="AssignmentsOnEnteringAssignCondition" DisplayName="Condition" Description="The condition required to perform the assignment." Category="Basic Logic" DefaultValue="0.0" Parent="AssignmentsOnEnteringAssignConditionType" NullString="null">
                <Switch Property="AssignmentsOnEnteringAssignConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <StateProperty Name="AssignmentsOnEnteringStateVariableName" DisplayName="State Variable Name" Description="Name of the state variable that will be assigned a new value." Category="Basic Logic" Required="False" NullString="null" IsAssignable="True" />
              <ExpressionProperty Name="AssignmentsOnEnteringNewValue" DisplayName="New Value" Description="The new value to assign." Category="Basic Logic" DefaultValue="0.0" Required="False" NullString="null" UnitTypeProperty="AssignmentsOnEnteringStateVariableName" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="TalliesOnEntering" DisplayName="On Entering" Description="Optional tally statistics to record when an entity is entering the node." Category="Tally Statistics" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Tally Statistics (Basic Logic)" />
              </Categories>
              <ListProperty Name="TalliesOnEnteringTallyConditionType" DisplayName="Tally If" Description="Condition required to record the tally statistic." Category="Basic Logic" DefaultValue="Entity Entering" NullString="null" List="ActionConditionType">
                <Captions>
                  <Caption Value="NoCondition" Display="No Condition" />
                  <Caption Value="IsEntity" Display="Entity Entering" />
                  <Caption Value="IsTransporter" Display="Transporter Entering" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="TalliesOnEnteringTallyCondition" DisplayName="Condition" Description="The condition required to record the tally statistic." Category="Basic Logic" DefaultValue="0.0" Parent="TalliesOnEnteringTallyConditionType" NullString="null">
                <Switch Property="TalliesOnEnteringTallyConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <ElementProperty Name="TalliesOnEnteringTallyStatisticName" DisplayName="Tally Statistic Name" Description="The name of the tally statistic for which to record an observation value." Category="Basic Logic" Required="False" NullString="null" Type="TallyStatistic" />
              <EnumProperty Name="TalliesOnEnteringValueType" DisplayName="Value Type" Description="The type of observation value to record.&#xD;&#xA;&#xD;&#xA;If the value type is 'Expression', then the value of the specified expression is recorded.&#xD;&#xA;&#xD;&#xA;If the value type is 'TimeBetween', then the time since the last entity arrival to this or any other Tally step referencing the tally statistic is recorded." Category="Basic Logic" DefaultValue="Expression" NullString="null" EnumType="TallyValueType" />
              <ExpressionProperty Name="TalliesOnEnteringValueExpression" DisplayName="Value Expression" Description="The expression returning the value to be recorded." Category="Basic Logic" DefaultValue="0.0" NullString="null" UnitTypeProperty="TalliesOnEnteringTallyStatisticName">
                <Switch Property="TalliesOnEnteringValueType" Value="Expression" />
              </ExpressionProperty>
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="160" OldPropertyName="TalliesOnEnteringValue" NewPropertyName="TalliesOnEnteringValueExpression" />
              </PropertyReplacements>
            </PropertyDefinitions>
          </RepeatingProperty>
          <RepeatingProperty Name="TalliesOnExited" DisplayName="On Exited" Description="Optional tally statistics to record when an entity has exited the node." Category="Tally Statistics" Required="False" NullString="null">
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Tally Statistics (Basic Logic)" />
              </Categories>
              <ListProperty Name="TalliesOnExitedTallyConditionType" DisplayName="Tally If" Description="Condition required to record the tally statistic." Category="Basic Logic" DefaultValue="Entity Exited" NullString="null" List="ActionConditionType">
                <Captions>
                  <Caption Value="NoCondition" Display="No Condition" />
                  <Caption Value="IsEntity" Display="Entity Exited" />
                  <Caption Value="IsTransporter" Display="Transporter Exited" />
                  <Caption Value="CustomCondition" Display="Custom Condition" />
                </Captions>
              </ListProperty>
              <ExpressionProperty Name="TalliesOnExitedTallyCondition" DisplayName="Condition" Description="The condition required to record the tally statistic." Category="Basic Logic" DefaultValue="0.0" Parent="TalliesOnExitedTallyConditionType" NullString="null">
                <Switch Property="TalliesOnExitedTallyConditionType" Value="CustomCondition" />
              </ExpressionProperty>
              <ElementProperty Name="TalliesOnExitedTallyStatisticName" DisplayName="Tally Statistic Name" Description="The name of the tally statistic for which to record an observation value." Category="Basic Logic" Required="False" NullString="null" Type="TallyStatistic" />
              <EnumProperty Name="TalliesOnExitedValueType" DisplayName="Value Type" Description="The type of observation value to record.&#xD;&#xA;&#xD;&#xA;If the value type is 'Expression', then the value of the specified expression is recorded.&#xD;&#xA;&#xD;&#xA;If the value type is 'TimeBetween', then the time since the last entity arrival to this or any other Tally step referencing the tally statistic is recorded." Category="Basic Logic" DefaultValue="Expression" NullString="null" EnumType="TallyValueType" />
              <ExpressionProperty Name="TalliesOnExitedValueExpression" DisplayName="Value Expression" Description="The expression returning the value to be recorded." Category="Basic Logic" DefaultValue="0.0" NullString="null" UnitTypeProperty="TalliesOnExitedTallyStatisticName">
                <Switch Property="TalliesOnExitedValueType" Value="Expression" />
              </ExpressionProperty>
              <Overrides />
              <PropertyReplacements>
                <PropertyReplacement Version="160" OldPropertyName="TalliesOnExitedValue" NewPropertyName="TalliesOnExitedValueExpression" />
              </PropertyReplacements>
            </PropertyDefinitions>
          </RepeatingProperty>
          <ElementProperty Name="RunInitializedAddOnProcess" DisplayName="Run Initialized" Description="Occurs when the simulation run is initialized." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="RunEndingAddOnProcess" DisplayName="Run Ending" Description="Occurs when the simulation run is ending." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="EnteredAddOnProcess" DisplayName="Entered" Description="Occurs when an entity's leading edge has entered this node." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ElementProperty Name="ExitedAddOnProcess" DisplayName="Exited" Description="Occurs when an entity's trailing edge has exited this node." Category="Add-On Process Triggers" Required="False" NullString="null" ValueListFilter="UserExecutableProcessesOnly" Type="Process" />
          <ExternalNodeProperty Name="BoundExternalOutputNode" DisplayName="Bound External Output Node" Description="The name of an external output node that this node has been bound to in order to transfer entities out of the containing (parent) object. The transfer attempt will be performed by an entity after entering the node and, if successful, any other crossing or routing logic for the node will be ignored." Category="Advanced Options" Required="False" NullString="null" />
          <RepeatingProperty Name="RoutingOutRequiredMaterials" DisplayName="Required Materials" Description="Additional material availability constraints enforced on an entity's route request.&#xD;&#xA;&#xD;&#xA;NOTE: This repeat group has been deprecated. Use the Routing Logic -&gt; Other Routing Options -&gt; Route Constraint Logic property instead. To edit the deprecated repeat group, go to File -&gt; Settings -&gt; GUI and set the Display Deprecated Properties in Properties Window value to True." Category="Advanced Options/Deprecated Properties" Required="False" Deprecated="True" NullString="null">
            <Switch Property="DestinationType" Value="SelectFromList, UseCustomRoutingGroup" />
            <PropertyDefinitions>
              <Categories>
                <Category Name="Basic Logic" Description="Basic Logic" />
              </Categories>
              <EnumProperty Name="RequiredMaterialConsumptionType" DisplayName="Consumption Type" Description="Indicates whether the material required to be available for consumption is a single material or a bill of materials." Category="Basic Logic" DefaultValue="Material" NullString="null" EnumType="BOMActionRules">
                <Captions>
                  <Caption Value="BillOfMaterials" Display="Bill Of Materials" />
                  <Caption Value="OperationSpecified" Display="" Visible="False" />
                </Captions>
              </EnumProperty>
              <ElementProperty Name="RequiredMaterialName" DisplayName="Material Name" Description="The name of the material which is either specifically required or whose bill of materials is required." Category="Basic Logic" Required="False" NullString="null" Type="Material" />
              <EnumProperty Name="RequiredMaterialInventorySiteType" DisplayName="Inventory Site Type" Description="Indicates the fixed object that is the inventory location. Applies only to material elements whose Location Based Inventory property is set to True.&#xD;&#xA;&#xD;&#xA;The 'ParentObject' setting may be used to indicate that the inventory site is the server, combiner, or separator." Category="Basic Logic" DefaultValue="None" NullString="null" EnumType="InventorySiteType">
                <Captions>
                  <Caption Value="AssociatedObject" Visible="False" />
                </Captions>
              </EnumProperty>
              <ObjectInstanceProperty Name="RequiredMaterialSiteObjectName" DisplayName="Site Object Name" Description="The name of the fixed object that is the inventory location." Category="Basic Logic" Required="False" NullString="null" LocationType="Cartesian">
                <Switch Property="RequiredMaterialInventorySiteType" Value="SpecificObject" />
              </ObjectInstanceProperty>
              <ExpressionProperty Name="RequiredMaterialQuantity" DisplayName="Quantity" Description="The quantity required." Category="Basic Logic" DefaultValue="1.0" NullString="null" />
              <ExpressionProperty Name="RequiredMaterialLotID" DisplayName="Lot ID" Description="Optional string value indicating the lot identifier of the required material." Category="Basic Logic" Required="False" NullString="null" />
              <Overrides />
            </PropertyDefinitions>
          </RepeatingProperty>
          <Overrides>
            <Override Name="ReportStatistics" DefaultValue="False" />
            <Override Name="ParentCostCenter" Visible="False" />
            <Override Name="InitialCost" Visible="False" />
            <Override Name="InitialCostRate" Visible="False" />
            <Override Name="ResourceIdleCostRate" Visible="False" />
            <Override Name="ResourceCostPerUse" Visible="False" />
            <Override Name="ResourceUsageCostRate" Visible="False" />
            <Override Name="LogResourceUsage" Visible="False" />
            <Override Name="DisplayCategory" Visible="False" />
            <Override Name="DisplayColor" Visible="False" />
            <Override Name="IncludeInPlanResourceConstraints" Visible="False" />
            <Override Name="CapacityType" Visible="False" />
            <Override Name="InitialWorkSchedule" Visible="False" />
            <Override Name="WorkDayExceptions" Visible="False" />
            <Override Name="WorkPeriodExceptions" Visible="False" />
            <Override Name="InitialCapacity" Visible="False" />
            <Override Name="RankingRule" Visible="False" />
            <Override Name="RankingExpression" Visible="False" />
            <Override Name="DynamicSelectionRule" Visible="False" />
            <Override Name="InitialTravelerCapacity" Description="The initial maximum number of traveling entities that may simultaneously occupy this node.&#xD;&#xA;&#xD;&#xA;NOTE: An entity using the 'Ride On Transporter' option at this transfer node will be exempted from being blocked by or counted against the node's traveler capacity limit. Also, refer to the user-assignable ‘CurrentTravelerCapacity’ state variable of a node to dynamically change its traveler capacity during a simulation run." />
            <Override Name="EntryExemptionCondition" Visible="False" DefaultValue="$(DefinitionName).RideOnTransporter &amp;&amp; !Entity.Is.Transporter" />
          </Overrides>
          <PropertyReplacements>
            <PropertyReplacement Version="114" OldPropertyName="InitialCapacity" NewPropertyName="InitialTravelerCapacity" />
            <PropertyReplacement Version="114" OldPropertyName="RankingRule" NewPropertyName="EntryRankingRule" />
            <PropertyReplacement Version="114" OldPropertyName="RankingExpression" NewPropertyName="EntryRankingExpression" />
            <PropertyReplacement Version="114" OldPropertyName="InitializedAddOnProcess" NewPropertyName="RunInitializedAddOnProcess" />
            <PropertyReplacement Version="114" OldPropertyName="ExternalNodeName" NewPropertyName="BoundExternalOutputNode" />
            <PropertyReplacement Version="116" OldPropertyName="BlockedRoutingRule" NewPropertyName="BlockedDestinationRule" />
            <PropertyReplacement Version="121" OldPropertyName="NodeName" NewPropertyName="DestinationNodeName" />
            <PropertyReplacement Version="121" OldPropertyName="NodeListName" NewPropertyName="DestinationNodeListName" />
            <PropertyReplacement Version="140" OldPropertyName="RandomNumberStream" NewPropertyName="BranchingRandomNumberStream" />
            <PropertyReplacement Version="160" OldPropertyName="RideOnTransporter" NewPropertyName="RideOnTransporterCondition" />
            <PropertyReplacement Version="160" OldPropertyName="TransporterSelectionExpression" NewPropertyName="TransporterSelectionValueExpression" />
          </PropertyReplacements>
          <PropertyDefaultValueChanges>
            <PropertyDefaultValueChange Version="160" PropertyName="RideOnTransporter" OldDefaultValue="Conditional" />
          </PropertyDefaultValueChanges>
        </PropertyDefinitions>
        <States />
        <Events>
          <Event Name="Entered" Description="The Entered event provides notification that an entity has entered the node." />
          <Event Name="Exited" Description="The Exited event provides notification that an entity has exited the node." />
          <Event Name="RiderWaiting" Description="The RiderWaiting event provides notification that an entity has entered the RidePickupQueue of the node waiting for a ride." />
        </Events>
        <Elements>
          <Element Type="RoutingGroup" Name="RoutingOut" Scope="Public" Description="Element holding 'Select From List' routing out logic for this TransferNode object.">
            <Properties>
              <Property Name="DestinationNodeListName">DestinationNodeListName</Property>
              <Property Name="RouteRequestRankingRule">RouteRequestRankingRule</Property>
              <Property Name="RouteRequestRankingExpression">RouteRequestRankingExpression</Property>
              <Property Name="RouteRequestDynamicSelectionRule">
                <Value>RouteRequestDynamicSelectionRule</Value>
              </Property>
            </Properties>
          </Element>
        </Elements>
        <Processes>
          <Process Name="OnRunInitialized" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunInitializedAddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunInitializedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnRunEnding" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunEnding" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Execute" Name="RunEndingAddOnProcess" ID="2">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RunEndingAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEntered" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Node.OnEntered" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">Math.If(AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.NoCondition,False,AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.IsEntity, Entity.Is.Transporter,AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.IsTransporter, !Entity.Is.Transporter, AssignmentsOnEntering.AssignmentsOnEnteringAssignCondition&lt;=0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Tally" Name="OnEnteringTallies" ID="3">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">
                          <Value>TalliesOnEnteringTallyStatisticName</Value>
                        </Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValueExpression">TalliesOnEnteringValueExpression</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition&gt;0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="9" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue, 1, 2)" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="6" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="5">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="VisitNode" Name="Entity" ID="6">
                <Properties />
                <Exit Name="Exit" Type="Primary" NextID="10" />
              </Step>
              <Step Type="Execute" Name="EnteredAddOnProcess" ID="7">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>EnteredAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="RoutingOutLogic" ID="8">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RoutingOutLogic</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="14" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="9">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfTransporter" ExclusionExpression="(DestinationType == List.EntityDestinationType.Continue) &amp;&amp; (RideOnTransporter == List.RideOnTransporterType.Never)" ID="10">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">Entity.Is.Transporter</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="11" />
                <Exit Name="False" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Transfer" Name="ToOutboundLink" ID="11">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="12" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="12">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="13" />
              </Step>
              <Step Type="Execute" Name="TransferFailureLogic" ID="13">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>TransferFailureLogic</Value>
                  </Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfRidingTransporter" ExclusionExpression="Math.If(RideOnTransporter == List.RideOnTransporterType.Never, 2, 0)" ID="14">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">Entity.CurrentTransporter!=Nothing &amp;&amp; !Entity.IsUnloadingFromTransporter</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="11" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnExited" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Node.OnExited" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Tally" Name="OnExitedTallies" ID="2">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnExited</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">
                          <Value>TalliesOnExitedTallyStatisticName</Value>
                        </Property>
                        <Property Name="TalliesValueType">TalliesOnExitedValueType</Property>
                        <Property Name="TalliesValueExpression">TalliesOnExitedValueExpression</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnExited.TalliesOnExitedTallyConditionType==List.ActionConditionType.NoCondition,1,TalliesOnExited.TalliesOnExitedTallyConditionType==List.ActionConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnExited.TalliesOnExitedTallyConditionType==List.ActionConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnExited.TalliesOnExitedTallyCondition&gt;0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="ExitedAddOnProcess" ID="3">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>ExitedAddOnProcess</Value>
                  </Property>
                </Properties>
              </Step>
              <Step Type="Fire" Name="ExitedEvent" ID="4">
                <Properties>
                  <Property Name="EventName">Exited</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredToAssociatedObject" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Node.OnEnteredToAssociatedObject" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">Math.If(AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.NoCondition,False,AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.IsEntity, Entity.Is.Transporter,AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.IsTransporter, !Entity.Is.Transporter, AssignmentsOnEntering.AssignmentsOnEnteringAssignCondition&lt;=0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Tally" Name="OnEnteringTallies" ID="3">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">
                          <Value>TalliesOnEnteringTallyStatisticName</Value>
                        </Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValueExpression">TalliesOnEnteringValueExpression</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition&gt;0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="7" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue, 1, 2)" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="5">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="8" />
              </Step>
              <Step Type="Execute" Name="EnteredAddOnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>EnteredAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="7">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Transfer" Name="ToAssociatedObject" ID="8">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">AssociatedObject</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredFromAssociatedObject" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Node.OnEnteredFromAssociatedObject" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
              <Property Name="TokenActionOnAssociatedObjectTransferRequested">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Assign" Name="OnEnteringAssignments" ID="2">
                <Properties>
                  <Property Name="Assignments">
                    <Value>AssignmentsOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="AssignmentsStateVariableName">
                          <Value>AssignmentsOnEnteringStateVariableName</Value>
                        </Property>
                        <Property Name="AssignmentsNewValue">AssignmentsOnEnteringNewValue</Property>
                        <Property Name="AssignmentsSkipAssignmentCondition">Math.If(AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.NoCondition,False,AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.IsEntity, Entity.Is.Transporter,AssignmentsOnEntering.AssignmentsOnEnteringAssignConditionType==List.ActionConditionType.IsTransporter, !Entity.Is.Transporter, AssignmentsOnEntering.AssignmentsOnEnteringAssignCondition&lt;=0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="3" />
              </Step>
              <Step Type="Tally" Name="OnEnteringTallies" ID="3">
                <Properties>
                  <Property Name="Tallies">
                    <Value>TalliesOnEntering</Value>
                    <Rows>
                      <Properties>
                        <Property Name="TalliesTallyStatisticName">
                          <Value>TalliesOnEnteringTallyStatisticName</Value>
                        </Property>
                        <Property Name="TalliesValueType">TalliesOnEnteringValueType</Property>
                        <Property Name="TalliesValueExpression">TalliesOnEnteringValueExpression</Property>
                        <Property Name="TalliesNumberOfObservations">Math.If(TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.NoCondition,1,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.IsEntity, !Entity.Is.Transporter,TalliesOnEntering.TalliesOnEnteringTallyConditionType==List.ActionConditionType.IsTransporter, Entity.Is.Transporter, TalliesOnEntering.TalliesOnEnteringTallyCondition&gt;0.0)</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="8" />
              </Step>
              <Step Type="Decide" Name="IfNoBoundExternalOutputNode" ExclusionExpression="Math.If(!BoundExternalOutputNode.HasValue, 1, 2)" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">BoundExternalOutputNode.HasValue==False</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Transfer" Name="ToBoundExternalOutputNode" ID="5">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">ParentExternalNode</Property>
                  <Property Name="ExternalNodeName">BoundExternalOutputNode</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="9" />
              </Step>
              <Step Type="Execute" Name="EnteredAddOnProcess" ID="6">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>EnteredAddOnProcess</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Execute" Name="RoutingOutLogic" ID="7">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>RoutingOutLogic</Value>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Fire" Name="EnteredEvent" ID="8">
                <Properties>
                  <Property Name="EventName">Entered</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfTransporter" ExclusionExpression="(DestinationType == List.EntityDestinationType.Continue) &amp;&amp; (RideOnTransporter == List.RideOnTransporterType.Never)" ID="9">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">Entity.Is.Transporter</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="10" />
                <Exit Name="False" Type="Alternate" NextID="7" />
              </Step>
              <Step Type="Transfer" Name="ToOutboundLink" ID="10">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">OutboundLink</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="11" />
              </Step>
              <Step Type="Transfer" Name="ToFreeSpace" ID="11">
                <Properties>
                  <Property Name="FromType">CurrentNode</Property>
                  <Property Name="ToType">FreeSpace</Property>
                </Properties>
                <Exit Name="Failed" Type="Alternate" NextID="12" />
              </Step>
              <Step Type="Execute" Name="TransferFailureLogic" ID="12">
                <Properties>
                  <Property Name="ProcessName">
                    <Value>TransferFailureLogic</Value>
                  </Property>
                </Properties>
              </Step>
              <Step Type="Decide" Name="IfRidingTransporter" ExclusionExpression="Math.If(RideOnTransporter == List.RideOnTransporterType.Never, 2, 0)" ID="13">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">Entity.CurrentTransporter!=Nothing &amp;&amp; !Entity.IsUnloadingFromTransporter</Property>
                </Properties>
                <Exit Name="False" Type="Alternate" NextID="10" />
              </Step>
            </Steps>
          </Process>
          <Process Name="OnEnteredParking" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Node.OnEnteredParking" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="EndTransfer" Name="EndTransfer" ID="2">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="TransferFailureLogic" BeginStepID="2">
            <Properties />
            <Steps>
              <Step Type="Decide" Name="IfEntityDestroyable" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">Entity.Destroyable</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="5" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Notify" Name="ParkingEntity" ID="3">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Entity '" + Entity.Name + "' failed to initiate transfer from node"</Property>
                  <Property Name="MessageContent">"Entity '" + Entity.Name + "' failed to initiate transfer from node '" + Name + "'. The entity is being automatically parked. However, this warning may indicate a problem in the modeled logic.

It is recommended to verify that the entity is using the intended travel mode. If the travel mode is 'Network Only', then verify that a followable network path has been drawn from the node to the entity's assigned destination '" + Math.If(Entity.DestinationNode!=Nothing &amp;&amp; Entity.DestinationNode!=Node, Entity.DestinationNode.Name, "No Destination") + "' using network '" + Math.If(Entity.CurrentNetwork!=Nothing, Entity.CurrentNetwork.Name, "No Network") +  "'."</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="4" />
              </Step>
              <Step Type="Park" Name="Entity" ID="4">
                <Properties />
              </Step>
              <Step Type="Notify" Name="DestroyingEntity" ID="5">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Entity '" + Entity.Name + "' failed to initiate transfer from node"</Property>
                  <Property Name="MessageContent">"Entity '" + Entity.Name + "' failed to initiate transfer from node '" + Name + "'. The entity is being automatically destroyed. However, this warning may indicate a problem in the modeled logic.

It is recommended to verify that the entity is using the intended travel mode. If the travel mode is 'Network Only', then verify that a followable network path has been drawn from the node to the entity's assigned destination '" + Math.If(Entity.DestinationNode!=Nothing &amp;&amp; Entity.DestinationNode!=Node, Entity.DestinationNode.Name, "No Destination") + "' using network '" + Math.If(Entity.CurrentNetwork!=Nothing, Entity.CurrentNetwork.Name, "No Network") +  "'."</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="6" />
              </Step>
              <Step Type="Destroy" Name="Entity" ID="6">
                <Properties />
              </Step>
            </Steps>
          </Process>
          <Process Name="RoutingOutLogic" BeginStepID="2">
            <Properties>
              <Property Name="TokenActionOnAssociatedObjectDestroyed">EndProcess</Property>
            </Properties>
            <Steps>
              <Step Type="Decide" Name="IfDestinationTypeContinue" ExclusionExpression="Math.If(DestinationType == List.EntityDestinationType.Continue, 1, 2)" ID="2">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">DestinationType==List.EntityDestinationType.Continue</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="12" />
                <Exit Name="False" Type="Alternate" NextID="3" />
              </Step>
              <Step Type="Decide" Name="IfDestinationTypeSpecific" ExclusionExpression="Math.If(DestinationType == List.EntityDestinationType.Specific, 1, 2)" ID="3">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">DestinationType==List.EntityDestinationType.Specific</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="11" />
                <Exit Name="False" Type="Alternate" NextID="4" />
              </Step>
              <Step Type="Decide" Name="IfDestinationTypeBySequence" ExclusionExpression="Math.If(DestinationType == List.EntityDestinationType.BySequence, 1, 2)" ID="4">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">DestinationType==List.EntityDestinationType.BySequence</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="10" />
                <Exit Name="False" Type="Alternate" NextID="5" />
              </Step>
              <Step Type="Decide" Name="IfDestinationTypeSelectFromList" ExclusionExpression="Math.If(DestinationType == List.EntityDestinationType.SelectFromList, 1, 2)" ID="5">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">DestinationType==List.EntityDestinationType.SelectFromList</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="9" />
                <Exit Name="False" Type="Alternate" NextID="6" />
              </Step>
              <Step Type="Decide" Name="IfDestinationTypeCustomRoutingGroup" ExclusionExpression="Math.If(DestinationType == List.EntityDestinationType.UseCustomRoutingGroup, 1, 2)" ID="6">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">DestinationType==List.EntityDestinationType.UseCustomRoutingGroup</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="8" />
                <Exit Name="False" Type="Alternate" NextID="7" />
              </Step>
              <Step Type="Destroy" Name="Entity" ID="7">
                <Properties />
              </Step>
              <Step Type="Route" Name="NextDestination" ID="8">
                <Properties>
                  <Property Name="RoutingGroupName">
                    <Value>DestinationRoutingGroupName</Value>
                  </Property>
                  <Property Name="SelectionGoal">DestinationSelectionGoal</Property>
                  <Property Name="SelectionValueExpression">DestinationSelectionExpression</Property>
                  <Property Name="BlockedDestinationRule">BlockedDestinationRule</Property>
                  <Property Name="SelectionCondition">DestinationSelectionCondition</Property>
                  <Property Name="RouteConstraintLogic">
                    <Value>RouteConstraintLogic</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ConstraintLogicName">
                          <Value>RouteConstraintLogic.RouteConstraintLogicName</Value>
                        </Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="RequiredMaterials">
                    <Value>RoutingOutRequiredMaterials</Value>
                    <Rows>
                      <Properties>
                        <Property Name="RequiredMaterialConsumptionType">RoutingOutRequiredMaterials.RequiredMaterialConsumptionType</Property>
                        <Property Name="RequiredMaterialName">
                          <Value>RoutingOutRequiredMaterials.RequiredMaterialName</Value>
                        </Property>
                        <Property Name="RequiredMaterialInventorySiteType">RoutingOutRequiredMaterials.RequiredMaterialInventorySiteType</Property>
                        <Property Name="RequiredMaterialSiteObjectName">RoutingOutRequiredMaterials.RequiredMaterialSiteObjectName</Property>
                        <Property Name="RequiredMaterialQuantity">RoutingOutRequiredMaterials.RequiredMaterialQuantity</Property>
                        <Property Name="RequiredMaterialLotID">RoutingOutRequiredMaterials.RequiredMaterialLotID</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Route" Name="NextDestination" ID="9">
                <Properties>
                  <Property Name="RoutingGroupName">
                    <Value>RoutingOut</Value>
                  </Property>
                  <Property Name="SelectionGoal">DestinationSelectionGoal</Property>
                  <Property Name="SelectionValueExpression">DestinationSelectionExpression</Property>
                  <Property Name="BlockedDestinationRule">BlockedDestinationRule</Property>
                  <Property Name="SelectionCondition">DestinationSelectionCondition</Property>
                  <Property Name="RouteConstraintLogic">
                    <Value>RouteConstraintLogic</Value>
                    <Rows>
                      <Properties>
                        <Property Name="ConstraintLogicName">
                          <Value>RouteConstraintLogic.RouteConstraintLogicName</Value>
                        </Property>
                      </Properties>
                    </Rows>
                  </Property>
                  <Property Name="RequiredMaterials">
                    <Value>RoutingOutRequiredMaterials</Value>
                    <Rows>
                      <Properties>
                        <Property Name="RequiredMaterialConsumptionType">RoutingOutRequiredMaterials.RequiredMaterialConsumptionType</Property>
                        <Property Name="RequiredMaterialName">
                          <Value>RoutingOutRequiredMaterials.RequiredMaterialName</Value>
                        </Property>
                        <Property Name="RequiredMaterialInventorySiteType">RoutingOutRequiredMaterials.RequiredMaterialInventorySiteType</Property>
                        <Property Name="RequiredMaterialSiteObjectName">RoutingOutRequiredMaterials.RequiredMaterialSiteObjectName</Property>
                        <Property Name="RequiredMaterialQuantity">RoutingOutRequiredMaterials.RequiredMaterialQuantity</Property>
                        <Property Name="RequiredMaterialLotID">RoutingOutRequiredMaterials.RequiredMaterialLotID</Property>
                      </Properties>
                    </Rows>
                  </Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="SetNode" Name="NextDestination" ID="10">
                <Properties>
                  <Property Name="DestinationType">BySequence</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="SetNode" Name="NextDestination" ID="11">
                <Properties>
                  <Property Name="NodeName">DestinationNodeName</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="12" />
              </Step>
              <Step Type="Decide" Name="IfRideTransporter" ExclusionExpression="Math.If(RideOnTransporter == List.RideOnTransporterType.Never, 2, RideOnTransporter == List.RideOnTransporterType.Always, 1, 0)" ID="12">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">RideOnTransporterCondition</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="13" />
              </Step>
              <Step Type="Fire" Name="RiderWaitingEvent" ID="13">
                <Properties>
                  <Property Name="EventName">RiderWaiting</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="14" />
              </Step>
              <Step Type="Ride" Name="Transporter" ID="14">
                <Properties>
                  <Property Name="TransporterType">TransporterType</Property>
                  <Property Name="TransporterName">TransporterName</Property>
                  <Property Name="TransporterListName">TransporterListName</Property>
                  <Property Name="ReservationMethod">TransporterReservationMethod</Property>
                  <Property Name="SelectionGoal">TransporterSelectionGoal</Property>
                  <Property Name="SelectionValueExpression">TransporterSelectionValueExpression</Property>
                  <Property Name="SelectionCondition">TransporterSelectionCondition</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="15" />
              </Step>
              <Step Type="Decide" Name="IfReserveTransporter" ID="15">
                <Properties>
                  <Property Name="DecideType">ConditionBased</Property>
                  <Property Name="ConditionOrProbability">TransporterStatusOnDropOffKeepReservedCondition</Property>
                </Properties>
                <Exit Name="True" Type="Primary" NextID="16" />
              </Step>
              <Step Type="Notify" Name="IfReservationWarning" ID="16">
                <Properties>
                  <Property Name="NotificationType">Warning</Property>
                  <Property Name="MessageHeading">"Ignoring attempt by entity '" + Entity.Name + "' to reserve transporter '" + Entity.CurrentTransporter.Name + "'."</Property>
                  <Property Name="MessageContent">"The transport logic option at node '" + Entity.PreviousNode.Name + "' to keep the selected transporter reserved on entity drop-off is not supported for transporters with ride capacity greater than one."</Property>
                  <Property Name="NotifyCondition">Entity.CurrentTransporter.RideStation.Capacity &gt; 1</Property>
                </Properties>
                <Exit Name="Exit" Type="Primary" NextID="17" />
              </Step>
              <Step Type="Reserve" Name="Transporter" ID="17">
                <Properties>
                  <Property Name="ResourceName">Entity.CurrentTransporter</Property>
                  <Property Name="ReservationTimeout">Math.If(Entity.CurrentTransporter.RideStation.Capacity &gt; 1, 0.0, Infinity)</Property>
                </Properties>
              </Step>
            </Steps>
          </Process>
        </Processes>
        <Graphics>
          <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
        </Graphics>
      </NodeDefinition>
    </Definitions>
    <Materials>
      <ColorMaterial Id="a6d0a510-67a1-4acc-9b32-3694f7eab0c1" Color="008000" />
      <ColorMaterial Id="b747c0c4-fb4e-44db-876f-a97d14d00b75" Color="ffff00" />
      <ColorMaterial Id="a7161262-96e7-448a-972e-968d3355335b" Color="ff0000" />
      <ColorMaterial Id="b62d0f20-514d-497c-bc07-162c4b0323e5" Color="ffffff" />
      <ColorMaterial Id="b7fd72e8-b5dd-469f-a806-66a8fc4fc42f" Color="ff0000" />
      <ColorMaterial Id="c001da21-5cde-4252-88ec-b4ccfa042fed" Color="ffffff" />
      <ColorMaterial Id="a9a61bd3-713e-40ef-8c41-34b21a3c5ff2" Color="008000" />
      <ColorMaterial Id="ab8b73e5-3a25-46cc-be13-f5130c08136d" Color="ffffff" />
    </Materials>
    <Symbols>
      <Symbol Name="Server" Id="40ac3b5a-78c5-4e3d-b106-349426cf8bb3" Types="StandardLibrary" Actions="Static" PadBoundingBox="True">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Server.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 3.576279E-07 3.72529E-09" Scale="5.126141">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Server.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="72ddb72d-221f-4088-af13-b2940aa9aa7b" />
              </Decoration>
              <Decoration SurfaceId="1">
                <MaterialRef Id="d3c32277-2baa-4e7a-ad35-6b0976cdbb2a" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Sink" Id="f5b0a0b7-4274-403c-981c-33d4b6e077a5" Types="StandardLibrary" Actions="Static" PadBoundingBox="True">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Sink.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 3.576279E-07 0" Scale="5.228027">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Sink.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="bab850ad-84d5-4885-a81d-3f604b121144" />
              </Decoration>
              <Decoration SurfaceId="1">
                <MaterialRef Id="def9c0aa-66b6-4b4e-b436-e0dfa0c0d5cf" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
      <Symbol Name="Source" Id="4253805c-d9dd-447f-b808-dc61ab3765de" Types="StandardLibrary" Actions="Static" PadBoundingBox="True">
        <Thumbnail>
          <FileRef Name="Data\Thumbnails\Source.png" />
        </Thumbnail>
        <Graphics>
          <Geometry Center="0 -3.576279E-07 -1.490116E-08" Scale="5.10292">
            <GeometryData>
              <MeshData>
                <FileRef Name="Data\Geometry\Source.s3d" />
              </MeshData>
              <GeometryDataPieces />
            </GeometryData>
            <Decorations>
              <Decoration SurfaceId="0">
                <MaterialRef Id="9699965b-b2a7-449d-a1aa-2b4b69e9f686" />
              </Decoration>
              <Decoration SurfaceId="1">
                <MaterialRef Id="9539f632-7efb-49b3-a6cd-5c1627c06e27" />
              </Decoration>
            </Decorations>
          </Geometry>
        </Graphics>
      </Symbol>
    </Symbols>
    <Materials>
      <TextureMaterial Id="72ddb72d-221f-4088-af13-b2940aa9aa7b" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="d3c32277-2baa-4e7a-ad35-6b0976cdbb2a" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture1.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="bab850ad-84d5-4885-a81d-3f604b121144" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture2.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="def9c0aa-66b6-4b4e-b436-e0dfa0c0d5cf" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture3.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="9699965b-b2a7-449d-a1aa-2b4b69e9f686" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture4.jpg" />
        </Image>
      </TextureMaterial>
      <TextureMaterial Id="9539f632-7efb-49b3-a6cd-5c1627c06e27" Name="SketchupTexture">
        <Image>
          <FileRef Name="Data\Textures\SketchupTexture5.jpg" />
        </Image>
      </TextureMaterial>
    </Materials>
  </CommonItems>
</Project>
<!-- rAg1s3ZevWr6I1ZH2M2nvSgIuXC1kQ3ykllQd5Y5fygeer9fHo9hE5VZtldFijzBeQKtPPidzDFTgyFnJO4ZbA== -->